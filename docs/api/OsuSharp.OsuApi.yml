### YamlMime:ManagedReference
items:
- uid: OsuSharp.OsuApi
  commentId: T:OsuSharp.OsuApi
  id: OsuApi
  parent: OsuSharp
  children:
  - OsuSharp.OsuApi.#ctor(OsuSharp.Interfaces.IOsuSharpConfiguration)
  - OsuSharp.OsuApi.ApiKey
  - OsuSharp.OsuApi.Default(OsuSharp.Interfaces.IOsuSharpConfiguration)
  - OsuSharp.OsuApi.GetBeatmap(System.Int64,OsuSharp.Misc.BeatmapType,OsuSharp.Misc.GameMode)
  - OsuSharp.OsuApi.GetBeatmapAsync(System.Int64,OsuSharp.Misc.BeatmapType,OsuSharp.Misc.GameMode,System.Threading.CancellationToken)
  - OsuSharp.OsuApi.GetBeatmaps(System.Int64,OsuSharp.Misc.BeatmapType,OsuSharp.Misc.GameMode,System.Int32)
  - OsuSharp.OsuApi.GetBeatmapsAsync(System.Int64,OsuSharp.Misc.BeatmapType,OsuSharp.Misc.GameMode,System.Int32,System.Threading.CancellationToken)
  - OsuSharp.OsuApi.GetBeatmapsByCreator(System.String,OsuSharp.Misc.GameMode,System.Int32)
  - OsuSharp.OsuApi.GetBeatmapsByCreatorAsync(System.String,OsuSharp.Misc.GameMode,System.Int32,System.Threading.CancellationToken)
  - OsuSharp.OsuApi.GetLastBeatmaps(System.Int32)
  - OsuSharp.OsuApi.GetLastBeatmapsAsync(System.Int32,System.Threading.CancellationToken)
  - OsuSharp.OsuApi.GetMatch(System.Int64)
  - OsuSharp.OsuApi.GetMatchAsync(System.Int64,System.Threading.CancellationToken)
  - OsuSharp.OsuApi.GetReplayByUserid(System.Int64,System.Int64,OsuSharp.Misc.GameMode)
  - OsuSharp.OsuApi.GetReplayByUseridAsync(System.Int64,System.Int64,OsuSharp.Misc.GameMode,System.Threading.CancellationToken)
  - OsuSharp.OsuApi.GetReplayByUsername(System.Int64,System.String,OsuSharp.Misc.GameMode)
  - OsuSharp.OsuApi.GetReplayByUsernameAsync(System.Int64,System.String,OsuSharp.Misc.GameMode,System.Threading.CancellationToken)
  - OsuSharp.OsuApi.GetScoreByUserid(System.Int64,System.UInt64,OsuSharp.Misc.GameMode)
  - OsuSharp.OsuApi.GetScoreByUseridAsync(System.Int64,System.Int64,OsuSharp.Misc.GameMode,System.Threading.CancellationToken)
  - OsuSharp.OsuApi.GetScoreByUsername(System.Int64,System.String,OsuSharp.Misc.GameMode)
  - OsuSharp.OsuApi.GetScoreByUsernameAsync(System.Int64,System.String,OsuSharp.Misc.GameMode,System.Threading.CancellationToken)
  - OsuSharp.OsuApi.GetScores(System.Int64,OsuSharp.Misc.GameMode,System.Int32)
  - OsuSharp.OsuApi.GetScoresAndBeatmap(System.Int64,OsuSharp.Misc.GameMode,System.Int32)
  - OsuSharp.OsuApi.GetScoresAndBeatmapAsync(System.Int64,OsuSharp.Misc.GameMode,System.Int32,System.Threading.CancellationToken)
  - OsuSharp.OsuApi.GetScoresAsync(System.Int64,OsuSharp.Misc.GameMode,System.Int32,System.Threading.CancellationToken)
  - OsuSharp.OsuApi.GetScoresWithUsersAndBeatmap(System.Int64,OsuSharp.Misc.GameMode,System.Int32)
  - OsuSharp.OsuApi.GetScoresWithUsersAndBeatmapAsync(System.Int64,OsuSharp.Misc.GameMode,System.Int32,System.Threading.CancellationToken)
  - OsuSharp.OsuApi.GetUserBestAndBeatmapByUserid(System.Int64,OsuSharp.Misc.GameMode,System.Int32)
  - OsuSharp.OsuApi.GetUserBestAndBeatmapByUseridAsync(System.Int64,OsuSharp.Misc.GameMode,System.Int32,System.Threading.CancellationToken)
  - OsuSharp.OsuApi.GetUserBestAndBeatmapByUsername(System.String,OsuSharp.Misc.GameMode,System.Int32)
  - OsuSharp.OsuApi.GetUserBestAndBeatmapByUsernameAsync(System.String,OsuSharp.Misc.GameMode,System.Int32,System.Threading.CancellationToken)
  - OsuSharp.OsuApi.GetUserBestByUserid(System.Int64,OsuSharp.Misc.GameMode,System.Int32)
  - OsuSharp.OsuApi.GetUserBestByUseridAsync(System.Int64,OsuSharp.Misc.GameMode,System.Int32,System.Threading.CancellationToken)
  - OsuSharp.OsuApi.GetUserBestByUsername(System.String,OsuSharp.Misc.GameMode,System.Int32)
  - OsuSharp.OsuApi.GetUserBestByUsernameAsync(System.String,OsuSharp.Misc.GameMode,System.Int32,System.Threading.CancellationToken)
  - OsuSharp.OsuApi.GetUserById(System.Int64,OsuSharp.Misc.GameMode)
  - OsuSharp.OsuApi.GetUserByIdAsync(System.Int64,OsuSharp.Misc.GameMode,System.Threading.CancellationToken)
  - OsuSharp.OsuApi.GetUserByName(System.String,OsuSharp.Misc.GameMode)
  - OsuSharp.OsuApi.GetUserByNameAsync(System.String,OsuSharp.Misc.GameMode,System.Threading.CancellationToken)
  - OsuSharp.OsuApi.GetUserRecentAndBeatmapByUserid(System.Int64,OsuSharp.Misc.GameMode,System.Int32)
  - OsuSharp.OsuApi.GetUserRecentAndBeatmapByUseridAsync(System.Int64,OsuSharp.Misc.GameMode,System.Int32,System.Threading.CancellationToken)
  - OsuSharp.OsuApi.GetUserRecentAndBeatmapByUsername(System.String,OsuSharp.Misc.GameMode,System.Int32)
  - OsuSharp.OsuApi.GetUserRecentAndBeatmapByUsernameAsync(System.String,OsuSharp.Misc.GameMode,System.Int32,System.Threading.CancellationToken)
  - OsuSharp.OsuApi.GetUserRecentByUserid(System.Int64,OsuSharp.Misc.GameMode,System.Int32)
  - OsuSharp.OsuApi.GetUserRecentByUseridAsync(System.Int64,OsuSharp.Misc.GameMode,System.Int32,System.Threading.CancellationToken)
  - OsuSharp.OsuApi.GetUserRecentByUsername(System.String,OsuSharp.Misc.GameMode,System.Int32)
  - OsuSharp.OsuApi.GetUserRecentByUsernameAsync(System.String,OsuSharp.Misc.GameMode,System.Int32,System.Threading.CancellationToken)
  - OsuSharp.OsuApi.Logger
  - OsuSharp.OsuApi.ModsSeparator
  langs:
  - csharp
  - vb
  name: OsuApi
  nameWithType: OsuApi
  fullName: OsuSharp.OsuApi
  type: Class
  source:
    id: OsuApi
    path: ''
    startLine: 15
  assemblies:
  - cs.temp.dll
  namespace: OsuSharp
  syntax:
    content: 'public class OsuApi : IOsuApi'
    content.vb: >-
      Public Class OsuApi

          Implements IOsuApi
  inheritance:
  - System.Object
  implements:
  - OsuSharp.Interfaces.IOsuApi
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: OsuSharp.OsuApi.ApiKey
  commentId: P:OsuSharp.OsuApi.ApiKey
  id: ApiKey
  parent: OsuSharp.OsuApi
  langs:
  - csharp
  - vb
  name: ApiKey
  nameWithType: OsuApi.ApiKey
  fullName: OsuSharp.OsuApi.ApiKey
  type: Property
  source:
    id: ApiKey
    path: ''
    startLine: 41
  assemblies:
  - cs.temp.dll
  namespace: OsuSharp
  summary: "\nApiKey from Osu!Api\n"
  example: []
  syntax:
    content: public string ApiKey { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property ApiKey As String
  overload: OsuSharp.OsuApi.ApiKey*
  implements:
  - OsuSharp.Interfaces.IOsuApi.ApiKey
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: OsuSharp.OsuApi.ModsSeparator
  commentId: P:OsuSharp.OsuApi.ModsSeparator
  id: ModsSeparator
  parent: OsuSharp.OsuApi
  langs:
  - csharp
  - vb
  name: ModsSeparator
  nameWithType: OsuApi.ModsSeparator
  fullName: OsuSharp.OsuApi.ModsSeparator
  type: Property
  source:
    id: ModsSeparator
    path: ''
    startLine: 46
  assemblies:
  - cs.temp.dll
  namespace: OsuSharp
  summary: "\nSeparator used between each mod.\n"
  example: []
  syntax:
    content: public string ModsSeparator { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property ModsSeparator As String
  overload: OsuSharp.OsuApi.ModsSeparator*
  implements:
  - OsuSharp.Interfaces.IOsuApi.ModsSeparator
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OsuSharp.OsuApi.Logger
  commentId: P:OsuSharp.OsuApi.Logger
  id: Logger
  parent: OsuSharp.OsuApi
  langs:
  - csharp
  - vb
  name: Logger
  nameWithType: OsuApi.Logger
  fullName: OsuSharp.OsuApi.Logger
  type: Property
  source:
    id: Logger
    path: ''
    startLine: 51
  assemblies:
  - cs.temp.dll
  namespace: OsuSharp
  summary: "\nOsuSharp logger.\n"
  example: []
  syntax:
    content: public IOsuSharpLogger Logger { get; }
    parameters: []
    return:
      type: OsuSharp.Interfaces.IOsuSharpLogger
    content.vb: Public ReadOnly Property Logger As IOsuSharpLogger
  overload: OsuSharp.OsuApi.Logger*
  implements:
  - OsuSharp.Interfaces.IOsuApi.Logger
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: OsuSharp.OsuApi.#ctor(OsuSharp.Interfaces.IOsuSharpConfiguration)
  commentId: M:OsuSharp.OsuApi.#ctor(OsuSharp.Interfaces.IOsuSharpConfiguration)
  id: '#ctor(OsuSharp.Interfaces.IOsuSharpConfiguration)'
  parent: OsuSharp.OsuApi
  langs:
  - csharp
  - vb
  name: OsuApi(IOsuSharpConfiguration)
  nameWithType: OsuApi.OsuApi(IOsuSharpConfiguration)
  fullName: OsuSharp.OsuApi.OsuApi(OsuSharp.Interfaces.IOsuSharpConfiguration)
  type: Constructor
  source:
    id: .ctor
    path: ''
    startLine: 60
  assemblies:
  - cs.temp.dll
  namespace: OsuSharp
  summary: "\nMethod that initializes the library to perform your requests.\n"
  example: []
  syntax:
    content: public OsuApi(IOsuSharpConfiguration config)
    parameters:
    - id: config
      type: OsuSharp.Interfaces.IOsuSharpConfiguration
      description: "\nOsuSharp configuration that contains api key, rate limiter settings, custom http client and mods\nseparator.\n"
    content.vb: Public Sub New(config As IOsuSharpConfiguration)
  overload: OsuSharp.OsuApi.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: OsuSharp.OsuApi.Default(OsuSharp.Interfaces.IOsuSharpConfiguration)
  commentId: M:OsuSharp.OsuApi.Default(OsuSharp.Interfaces.IOsuSharpConfiguration)
  id: Default(OsuSharp.Interfaces.IOsuSharpConfiguration)
  parent: OsuSharp.OsuApi
  langs:
  - csharp
  - vb
  name: Default(IOsuSharpConfiguration)
  nameWithType: OsuApi.Default(IOsuSharpConfiguration)
  fullName: OsuSharp.OsuApi.Default(OsuSharp.Interfaces.IOsuSharpConfiguration)
  type: Method
  source:
    id: Default
    path: ''
    startLine: 84
  assemblies:
  - cs.temp.dll
  namespace: OsuSharp
  summary: "\nMethod that initializes the library to perform your requests.\n"
  example: []
  syntax:
    content: public static OsuApi Default(IOsuSharpConfiguration config)
    parameters:
    - id: config
      type: OsuSharp.Interfaces.IOsuSharpConfiguration
      description: "\nOsuSharp configuration that contains api key, rate limiter settings, custom http client and mods\nseparator.\n"
    return:
      type: OsuSharp.OsuApi
    content.vb: Public Shared Function Default(config As IOsuSharpConfiguration) As OsuApi
  overload: OsuSharp.OsuApi.Default*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: OsuSharp.OsuApi.GetBeatmap(System.Int64,OsuSharp.Misc.BeatmapType,OsuSharp.Misc.GameMode)
  commentId: M:OsuSharp.OsuApi.GetBeatmap(System.Int64,OsuSharp.Misc.BeatmapType,OsuSharp.Misc.GameMode)
  id: GetBeatmap(System.Int64,OsuSharp.Misc.BeatmapType,OsuSharp.Misc.GameMode)
  parent: OsuSharp.OsuApi
  langs:
  - csharp
  - vb
  name: GetBeatmap(Int64, BeatmapType, GameMode)
  nameWithType: OsuApi.GetBeatmap(Int64, BeatmapType, GameMode)
  fullName: OsuSharp.OsuApi.GetBeatmap(System.Int64, OsuSharp.Misc.BeatmapType, OsuSharp.Misc.GameMode)
  type: Method
  source:
    id: GetBeatmap
    path: ''
    startLine: 98
  assemblies:
  - cs.temp.dll
  namespace: OsuSharp
  summary: "\nMethod that returns a <xref href=\"OsuSharp.Endpoints.Beatmap\" data-throw-if-not-resolved=\"false\"></xref>. It requires a valid BeatmapId.\n"
  example: []
  syntax:
    content: public Beatmap GetBeatmap(long beatmapId, BeatmapType bmType = BeatmapType.ByDifficulty, GameMode gameMode = GameMode.Standard)
    parameters:
    - id: beatmapId
      type: System.Int64
      description: Id of the beatmap.
    - id: bmType
      type: OsuSharp.Misc.BeatmapType
      description: Type of the beatmap. Beatmapset or difficulty.
    - id: gameMode
      type: OsuSharp.Misc.GameMode
      description: Gamemode of the beatmap. Standard, Taiko, Catch or Mania.
    return:
      type: OsuSharp.Endpoints.Beatmap
      description: "\n<xref href=\"OsuSharp.Endpoints.Beatmap\" data-throw-if-not-resolved=\"false\"></xref>\n"
    content.vb: Public Function GetBeatmap(beatmapId As Long, bmType As BeatmapType = BeatmapType.ByDifficulty, gameMode As GameMode = GameMode.Standard) As Beatmap
  overload: OsuSharp.OsuApi.GetBeatmap*
  implements:
  - OsuSharp.Interfaces.IOsuApi.GetBeatmap(System.Int64,OsuSharp.Misc.BeatmapType,OsuSharp.Misc.GameMode)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: OsuSharp.OsuApi.GetBeatmapAsync(System.Int64,OsuSharp.Misc.BeatmapType,OsuSharp.Misc.GameMode,System.Threading.CancellationToken)
  commentId: M:OsuSharp.OsuApi.GetBeatmapAsync(System.Int64,OsuSharp.Misc.BeatmapType,OsuSharp.Misc.GameMode,System.Threading.CancellationToken)
  id: GetBeatmapAsync(System.Int64,OsuSharp.Misc.BeatmapType,OsuSharp.Misc.GameMode,System.Threading.CancellationToken)
  parent: OsuSharp.OsuApi
  langs:
  - csharp
  - vb
  name: GetBeatmapAsync(Int64, BeatmapType, GameMode, CancellationToken)
  nameWithType: OsuApi.GetBeatmapAsync(Int64, BeatmapType, GameMode, CancellationToken)
  fullName: OsuSharp.OsuApi.GetBeatmapAsync(System.Int64, OsuSharp.Misc.BeatmapType, OsuSharp.Misc.GameMode, System.Threading.CancellationToken)
  type: Method
  source:
    id: GetBeatmapAsync
    path: ''
    startLine: 123
  assemblies:
  - cs.temp.dll
  namespace: OsuSharp
  summary: "\nMethod that returns a <xref href=\"OsuSharp.Endpoints.Beatmap\" data-throw-if-not-resolved=\"false\"></xref>. It requires a valid BeatmapId.\n"
  example: []
  syntax:
    content: public Task<Beatmap> GetBeatmapAsync(long beatmapId, BeatmapType bmType = BeatmapType.ByDifficulty, GameMode gameMode = GameMode.Standard, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: beatmapId
      type: System.Int64
      description: Id of the beatmap.
    - id: bmType
      type: OsuSharp.Misc.BeatmapType
      description: Type of the beatmap. Beatmapset or difficulty.
    - id: gameMode
      type: OsuSharp.Misc.GameMode
      description: Gamemode of the beatmap. Standard, Taiko, Catch or Mania.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: Cancellation token
    return:
      type: System.Threading.Tasks.Task{OsuSharp.Endpoints.Beatmap}
      description: "\n<xref href=\"OsuSharp.Endpoints.Beatmap\" data-throw-if-not-resolved=\"false\"></xref>\n"
    content.vb: Public Function GetBeatmapAsync(beatmapId As Long, bmType As BeatmapType = BeatmapType.ByDifficulty, gameMode As GameMode = GameMode.Standard, cancellationToken As CancellationToken = Nothing) As Task(Of Beatmap)
  overload: OsuSharp.OsuApi.GetBeatmapAsync*
  implements:
  - OsuSharp.Interfaces.IOsuApi.GetBeatmapAsync(System.Int64,OsuSharp.Misc.BeatmapType,OsuSharp.Misc.GameMode,System.Threading.CancellationToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: OsuSharp.OsuApi.GetBeatmapsByCreator(System.String,OsuSharp.Misc.GameMode,System.Int32)
  commentId: M:OsuSharp.OsuApi.GetBeatmapsByCreator(System.String,OsuSharp.Misc.GameMode,System.Int32)
  id: GetBeatmapsByCreator(System.String,OsuSharp.Misc.GameMode,System.Int32)
  parent: OsuSharp.OsuApi
  langs:
  - csharp
  - vb
  name: GetBeatmapsByCreator(String, GameMode, Int32)
  nameWithType: OsuApi.GetBeatmapsByCreator(String, GameMode, Int32)
  fullName: OsuSharp.OsuApi.GetBeatmapsByCreator(System.String, OsuSharp.Misc.GameMode, System.Int32)
  type: Method
  source:
    id: GetBeatmapsByCreator
    path: ''
    startLine: 149
  assemblies:
  - cs.temp.dll
  namespace: OsuSharp
  summary: "\nMethod that returns a list of <xref href=\"OsuSharp.Endpoints.Beatmap\" data-throw-if-not-resolved=\"false\"></xref> by the given creator&apos;s nickname.\n"
  example: []
  syntax:
    content: public List<Beatmap> GetBeatmapsByCreator(string username, GameMode gameMode = GameMode.Standard, int limit = 500)
    parameters:
    - id: username
      type: System.String
      description: Author&apos;s nickname of the beatmap.
    - id: gameMode
      type: OsuSharp.Misc.GameMode
      description: Gamemode of the beatmap. Standard, Taiko, Catch or Mania.
    - id: limit
      type: System.Int32
      description: 'Limit of the output. Default and maximum : 500.'
    return:
      type: System.Collections.Generic.List{OsuSharp.Endpoints.Beatmap}
      description: "\n<xref href=\"System.Collections.Generic.List%601\" data-throw-if-not-resolved=\"false\"></xref>\n"
    content.vb: Public Function GetBeatmapsByCreator(username As String, gameMode As GameMode = GameMode.Standard, limit As Integer = 500) As List(Of Beatmap)
  overload: OsuSharp.OsuApi.GetBeatmapsByCreator*
  implements:
  - OsuSharp.Interfaces.IOsuApi.GetBeatmapsByCreator(System.String,OsuSharp.Misc.GameMode,System.Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: OsuSharp.OsuApi.GetBeatmapsByCreatorAsync(System.String,OsuSharp.Misc.GameMode,System.Int32,System.Threading.CancellationToken)
  commentId: M:OsuSharp.OsuApi.GetBeatmapsByCreatorAsync(System.String,OsuSharp.Misc.GameMode,System.Int32,System.Threading.CancellationToken)
  id: GetBeatmapsByCreatorAsync(System.String,OsuSharp.Misc.GameMode,System.Int32,System.Threading.CancellationToken)
  parent: OsuSharp.OsuApi
  langs:
  - csharp
  - vb
  name: GetBeatmapsByCreatorAsync(String, GameMode, Int32, CancellationToken)
  nameWithType: OsuApi.GetBeatmapsByCreatorAsync(String, GameMode, Int32, CancellationToken)
  fullName: OsuSharp.OsuApi.GetBeatmapsByCreatorAsync(System.String, OsuSharp.Misc.GameMode, System.Int32, System.Threading.CancellationToken)
  type: Method
  source:
    id: GetBeatmapsByCreatorAsync
    path: ''
    startLine: 177
  assemblies:
  - cs.temp.dll
  namespace: OsuSharp
  summary: "\nMethod that returns a list of <xref href=\"OsuSharp.Endpoints.Beatmap\" data-throw-if-not-resolved=\"false\"></xref> by the given creator&apos;s nickname.\n"
  example: []
  syntax:
    content: public Task<List<Beatmap>> GetBeatmapsByCreatorAsync(string username, GameMode gameMode = GameMode.Standard, int limit = 500, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: username
      type: System.String
      description: Author&apos;s nickname of the beatmap.
    - id: gameMode
      type: OsuSharp.Misc.GameMode
      description: Gamemode of the beatmap. Standard, Taiko, Catch or Mania.
    - id: limit
      type: System.Int32
      description: 'Limit of the output. Default and maximum : 500.'
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: Cancellation token
    return:
      type: System.Threading.Tasks.Task{System.Collections.Generic.List{OsuSharp.Endpoints.Beatmap}}
      description: "\n<xref href=\"System.Collections.Generic.List%601\" data-throw-if-not-resolved=\"false\"></xref>\n"
    content.vb: Public Function GetBeatmapsByCreatorAsync(username As String, gameMode As GameMode = GameMode.Standard, limit As Integer = 500, cancellationToken As CancellationToken = Nothing) As Task(Of List(Of Beatmap))
  overload: OsuSharp.OsuApi.GetBeatmapsByCreatorAsync*
  implements:
  - OsuSharp.Interfaces.IOsuApi.GetBeatmapsByCreatorAsync(System.String,OsuSharp.Misc.GameMode,System.Int32,System.Threading.CancellationToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: OsuSharp.OsuApi.GetBeatmaps(System.Int64,OsuSharp.Misc.BeatmapType,OsuSharp.Misc.GameMode,System.Int32)
  commentId: M:OsuSharp.OsuApi.GetBeatmaps(System.Int64,OsuSharp.Misc.BeatmapType,OsuSharp.Misc.GameMode,System.Int32)
  id: GetBeatmaps(System.Int64,OsuSharp.Misc.BeatmapType,OsuSharp.Misc.GameMode,System.Int32)
  parent: OsuSharp.OsuApi
  langs:
  - csharp
  - vb
  name: GetBeatmaps(Int64, BeatmapType, GameMode, Int32)
  nameWithType: OsuApi.GetBeatmaps(Int64, BeatmapType, GameMode, Int32)
  fullName: OsuSharp.OsuApi.GetBeatmaps(System.Int64, OsuSharp.Misc.BeatmapType, OsuSharp.Misc.GameMode, System.Int32)
  type: Method
  source:
    id: GetBeatmaps
    path: ''
    startLine: 207
  assemblies:
  - cs.temp.dll
  namespace: OsuSharp
  summary: "\nMethod that returns a list of <xref href=\"OsuSharp.Endpoints.Beatmap\" data-throw-if-not-resolved=\"false\"></xref> by the given beatmapset id.\n"
  example: []
  syntax:
    content: public List<Beatmap> GetBeatmaps(long id, BeatmapType bmType = BeatmapType.ByBeatmap, GameMode gameMode = GameMode.Standard, int limit = 500)
    parameters:
    - id: id
      type: System.Int64
      description: Id of the beatmapset.
    - id: bmType
      type: OsuSharp.Misc.BeatmapType
      description: Type of the beatmap. ByBeatmap is required.
    - id: gameMode
      type: OsuSharp.Misc.GameMode
      description: Gamemode of the beatmap. Standard, Taiko, Catch or Mania.
    - id: limit
      type: System.Int32
      description: 'Limit of the ouput. Default and maximum : 500.'
    return:
      type: System.Collections.Generic.List{OsuSharp.Endpoints.Beatmap}
      description: "\n<xref href=\"System.Collections.Generic.List%601\" data-throw-if-not-resolved=\"false\"></xref>\n"
    content.vb: Public Function GetBeatmaps(id As Long, bmType As BeatmapType = BeatmapType.ByBeatmap, gameMode As GameMode = GameMode.Standard, limit As Integer = 500) As List(Of Beatmap)
  overload: OsuSharp.OsuApi.GetBeatmaps*
  implements:
  - OsuSharp.Interfaces.IOsuApi.GetBeatmaps(System.Int64,OsuSharp.Misc.BeatmapType,OsuSharp.Misc.GameMode,System.Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: OsuSharp.OsuApi.GetBeatmapsAsync(System.Int64,OsuSharp.Misc.BeatmapType,OsuSharp.Misc.GameMode,System.Int32,System.Threading.CancellationToken)
  commentId: M:OsuSharp.OsuApi.GetBeatmapsAsync(System.Int64,OsuSharp.Misc.BeatmapType,OsuSharp.Misc.GameMode,System.Int32,System.Threading.CancellationToken)
  id: GetBeatmapsAsync(System.Int64,OsuSharp.Misc.BeatmapType,OsuSharp.Misc.GameMode,System.Int32,System.Threading.CancellationToken)
  parent: OsuSharp.OsuApi
  langs:
  - csharp
  - vb
  name: GetBeatmapsAsync(Int64, BeatmapType, GameMode, Int32, CancellationToken)
  nameWithType: OsuApi.GetBeatmapsAsync(Int64, BeatmapType, GameMode, Int32, CancellationToken)
  fullName: OsuSharp.OsuApi.GetBeatmapsAsync(System.Int64, OsuSharp.Misc.BeatmapType, OsuSharp.Misc.GameMode, System.Int32, System.Threading.CancellationToken)
  type: Method
  source:
    id: GetBeatmapsAsync
    path: ''
    startLine: 233
  assemblies:
  - cs.temp.dll
  namespace: OsuSharp
  summary: "\nMethod that returns a list of <xref href=\"OsuSharp.Endpoints.Beatmap\" data-throw-if-not-resolved=\"false\"></xref> by the given beatmapset id.\n"
  example: []
  syntax:
    content: public Task<List<Beatmap>> GetBeatmapsAsync(long id, BeatmapType bmType = BeatmapType.ByBeatmap, GameMode gameMode = GameMode.Standard, int limit = 500, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: id
      type: System.Int64
      description: Id of the beatmapset.
    - id: bmType
      type: OsuSharp.Misc.BeatmapType
      description: Type of the beatmap. ByBeatmap is required.
    - id: gameMode
      type: OsuSharp.Misc.GameMode
      description: Gamemode of the beatmap. Standard, Taiko, Catch or Mania.
    - id: limit
      type: System.Int32
      description: 'Limit of the ouput. Default and maximum : 500.'
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: Cancellation token
    return:
      type: System.Threading.Tasks.Task{System.Collections.Generic.List{OsuSharp.Endpoints.Beatmap}}
      description: "\n<xref href=\"System.Collections.Generic.List%601\" data-throw-if-not-resolved=\"false\"></xref>\n"
    content.vb: Public Function GetBeatmapsAsync(id As Long, bmType As BeatmapType = BeatmapType.ByBeatmap, gameMode As GameMode = GameMode.Standard, limit As Integer = 500, cancellationToken As CancellationToken = Nothing) As Task(Of List(Of Beatmap))
  overload: OsuSharp.OsuApi.GetBeatmapsAsync*
  implements:
  - OsuSharp.Interfaces.IOsuApi.GetBeatmapsAsync(System.Int64,OsuSharp.Misc.BeatmapType,OsuSharp.Misc.GameMode,System.Int32,System.Threading.CancellationToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: OsuSharp.OsuApi.GetLastBeatmaps(System.Int32)
  commentId: M:OsuSharp.OsuApi.GetLastBeatmaps(System.Int32)
  id: GetLastBeatmaps(System.Int32)
  parent: OsuSharp.OsuApi
  langs:
  - csharp
  - vb
  name: GetLastBeatmaps(Int32)
  nameWithType: OsuApi.GetLastBeatmaps(Int32)
  fullName: OsuSharp.OsuApi.GetLastBeatmaps(System.Int32)
  type: Method
  source:
    id: GetLastBeatmaps
    path: ''
    startLine: 256
  assemblies:
  - cs.temp.dll
  namespace: OsuSharp
  summary: "\nMethod that returns a list of lasts uploaded <xref href=\"OsuSharp.Endpoints.Beatmap\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public List<Beatmap> GetLastBeatmaps(int limit = 500)
    parameters:
    - id: limit
      type: System.Int32
      description: 'Limit of the output. Default and maximum : 500.'
    return:
      type: System.Collections.Generic.List{OsuSharp.Endpoints.Beatmap}
      description: "\n<xref href=\"System.Collections.Generic.List%601\" data-throw-if-not-resolved=\"false\"></xref>\n"
    content.vb: Public Function GetLastBeatmaps(limit As Integer = 500) As List(Of Beatmap)
  overload: OsuSharp.OsuApi.GetLastBeatmaps*
  implements:
  - OsuSharp.Interfaces.IOsuApi.GetLastBeatmaps(System.Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: OsuSharp.OsuApi.GetLastBeatmapsAsync(System.Int32,System.Threading.CancellationToken)
  commentId: M:OsuSharp.OsuApi.GetLastBeatmapsAsync(System.Int32,System.Threading.CancellationToken)
  id: GetLastBeatmapsAsync(System.Int32,System.Threading.CancellationToken)
  parent: OsuSharp.OsuApi
  langs:
  - csharp
  - vb
  name: GetLastBeatmapsAsync(Int32, CancellationToken)
  nameWithType: OsuApi.GetLastBeatmapsAsync(Int32, CancellationToken)
  fullName: OsuSharp.OsuApi.GetLastBeatmapsAsync(System.Int32, System.Threading.CancellationToken)
  type: Method
  source:
    id: GetLastBeatmapsAsync
    path: ''
    startLine: 274
  assemblies:
  - cs.temp.dll
  namespace: OsuSharp
  summary: "\nMethod that returns a list of lasts uploaded <xref href=\"OsuSharp.Endpoints.Beatmap\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public Task<List<Beatmap>> GetLastBeatmapsAsync(int limit, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: limit
      type: System.Int32
      description: 'Limit of the output. Default and maximum : 500.'
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: Cancellation token
    return:
      type: System.Threading.Tasks.Task{System.Collections.Generic.List{OsuSharp.Endpoints.Beatmap}}
      description: "\n<xref href=\"System.Collections.Generic.List%601\" data-throw-if-not-resolved=\"false\"></xref>\n"
    content.vb: Public Function GetLastBeatmapsAsync(limit As Integer, cancellationToken As CancellationToken = Nothing) As Task(Of List(Of Beatmap))
  overload: OsuSharp.OsuApi.GetLastBeatmapsAsync*
  implements:
  - OsuSharp.Interfaces.IOsuApi.GetLastBeatmapsAsync(System.Int32,System.Threading.CancellationToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: OsuSharp.OsuApi.GetUserByName(System.String,OsuSharp.Misc.GameMode)
  commentId: M:OsuSharp.OsuApi.GetUserByName(System.String,OsuSharp.Misc.GameMode)
  id: GetUserByName(System.String,OsuSharp.Misc.GameMode)
  parent: OsuSharp.OsuApi
  langs:
  - csharp
  - vb
  name: GetUserByName(String, GameMode)
  nameWithType: OsuApi.GetUserByName(String, GameMode)
  fullName: OsuSharp.OsuApi.GetUserByName(System.String, OsuSharp.Misc.GameMode)
  type: Method
  source:
    id: GetUserByName
    path: ''
    startLine: 293
  assemblies:
  - cs.temp.dll
  namespace: OsuSharp
  summary: "\nMethod that returns a <xref href=\"OsuSharp.Endpoints.User\" data-throw-if-not-resolved=\"false\"></xref> by the given Username.\n"
  example: []
  syntax:
    content: public User GetUserByName(string username, GameMode gameMode = GameMode.Standard)
    parameters:
    - id: username
      type: System.String
      description: Username of the user.
    - id: gameMode
      type: OsuSharp.Misc.GameMode
      description: Gamemode of the user. Standard, Taiko, Catch or Mania.
    return:
      type: OsuSharp.Endpoints.User
      description: "\n<xref href=\"OsuSharp.Endpoints.User\" data-throw-if-not-resolved=\"false\"></xref>\n"
    content.vb: Public Function GetUserByName(username As String, gameMode As GameMode = GameMode.Standard) As User
  overload: OsuSharp.OsuApi.GetUserByName*
  implements:
  - OsuSharp.Interfaces.IOsuApi.GetUserByName(System.String,OsuSharp.Misc.GameMode)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: OsuSharp.OsuApi.GetUserByNameAsync(System.String,OsuSharp.Misc.GameMode,System.Threading.CancellationToken)
  commentId: M:OsuSharp.OsuApi.GetUserByNameAsync(System.String,OsuSharp.Misc.GameMode,System.Threading.CancellationToken)
  id: GetUserByNameAsync(System.String,OsuSharp.Misc.GameMode,System.Threading.CancellationToken)
  parent: OsuSharp.OsuApi
  langs:
  - csharp
  - vb
  name: GetUserByNameAsync(String, GameMode, CancellationToken)
  nameWithType: OsuApi.GetUserByNameAsync(String, GameMode, CancellationToken)
  fullName: OsuSharp.OsuApi.GetUserByNameAsync(System.String, OsuSharp.Misc.GameMode, System.Threading.CancellationToken)
  type: Method
  source:
    id: GetUserByNameAsync
    path: ''
    startLine: 318
  assemblies:
  - cs.temp.dll
  namespace: OsuSharp
  summary: "\nMethod that returns a <xref href=\"OsuSharp.Endpoints.User\" data-throw-if-not-resolved=\"false\"></xref> by the given Username.\n"
  example: []
  syntax:
    content: public Task<User> GetUserByNameAsync(string username, GameMode gameMode = GameMode.Standard, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: username
      type: System.String
      description: Username of the user.
    - id: gameMode
      type: OsuSharp.Misc.GameMode
      description: Gamemode of the user. Standard, Taiko, Catch or Mania.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: Cancellation token
    return:
      type: System.Threading.Tasks.Task{OsuSharp.Endpoints.User}
      description: "\n<xref href=\"OsuSharp.Endpoints.User\" data-throw-if-not-resolved=\"false\"></xref>\n"
    content.vb: Public Function GetUserByNameAsync(username As String, gameMode As GameMode = GameMode.Standard, cancellationToken As CancellationToken = Nothing) As Task(Of User)
  overload: OsuSharp.OsuApi.GetUserByNameAsync*
  implements:
  - OsuSharp.Interfaces.IOsuApi.GetUserByNameAsync(System.String,OsuSharp.Misc.GameMode,System.Threading.CancellationToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: OsuSharp.OsuApi.GetUserById(System.Int64,OsuSharp.Misc.GameMode)
  commentId: M:OsuSharp.OsuApi.GetUserById(System.Int64,OsuSharp.Misc.GameMode)
  id: GetUserById(System.Int64,OsuSharp.Misc.GameMode)
  parent: OsuSharp.OsuApi
  langs:
  - csharp
  - vb
  name: GetUserById(Int64, GameMode)
  nameWithType: OsuApi.GetUserById(Int64, GameMode)
  fullName: OsuSharp.OsuApi.GetUserById(System.Int64, OsuSharp.Misc.GameMode)
  type: Method
  source:
    id: GetUserById
    path: ''
    startLine: 345
  assemblies:
  - cs.temp.dll
  namespace: OsuSharp
  summary: "\nMethod that returns a <xref href=\"OsuSharp.Endpoints.User\" data-throw-if-not-resolved=\"false\"></xref> by the given Userid.\n"
  example: []
  syntax:
    content: public User GetUserById(long userid, GameMode gameMode = GameMode.Standard)
    parameters:
    - id: userid
      type: System.Int64
      description: Id of the user.
    - id: gameMode
      type: OsuSharp.Misc.GameMode
      description: Gamemode of the user. Standard, Taiko, Catch or Mania.
    return:
      type: OsuSharp.Endpoints.User
      description: "\n<xref href=\"OsuSharp.Endpoints.User\" data-throw-if-not-resolved=\"false\"></xref>\n"
    content.vb: Public Function GetUserById(userid As Long, gameMode As GameMode = GameMode.Standard) As User
  overload: OsuSharp.OsuApi.GetUserById*
  implements:
  - OsuSharp.Interfaces.IOsuApi.GetUserById(System.Int64,OsuSharp.Misc.GameMode)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: OsuSharp.OsuApi.GetUserByIdAsync(System.Int64,OsuSharp.Misc.GameMode,System.Threading.CancellationToken)
  commentId: M:OsuSharp.OsuApi.GetUserByIdAsync(System.Int64,OsuSharp.Misc.GameMode,System.Threading.CancellationToken)
  id: GetUserByIdAsync(System.Int64,OsuSharp.Misc.GameMode,System.Threading.CancellationToken)
  parent: OsuSharp.OsuApi
  langs:
  - csharp
  - vb
  name: GetUserByIdAsync(Int64, GameMode, CancellationToken)
  nameWithType: OsuApi.GetUserByIdAsync(Int64, GameMode, CancellationToken)
  fullName: OsuSharp.OsuApi.GetUserByIdAsync(System.Int64, OsuSharp.Misc.GameMode, System.Threading.CancellationToken)
  type: Method
  source:
    id: GetUserByIdAsync
    path: ''
    startLine: 367
  assemblies:
  - cs.temp.dll
  namespace: OsuSharp
  summary: "\nMethod that returns a <xref href=\"OsuSharp.Endpoints.User\" data-throw-if-not-resolved=\"false\"></xref> by the given Userid.\n"
  example: []
  syntax:
    content: public Task<User> GetUserByIdAsync(long userid, GameMode gameMode = GameMode.Standard, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: userid
      type: System.Int64
      description: Id of the user.
    - id: gameMode
      type: OsuSharp.Misc.GameMode
      description: Gamemode of the user. Standard, Taiko, Catch or Mania.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: Cancellation token
    return:
      type: System.Threading.Tasks.Task{OsuSharp.Endpoints.User}
      description: "\n<xref href=\"OsuSharp.Endpoints.User\" data-throw-if-not-resolved=\"false\"></xref>\n"
    content.vb: Public Function GetUserByIdAsync(userid As Long, gameMode As GameMode = GameMode.Standard, cancellationToken As CancellationToken = Nothing) As Task(Of User)
  overload: OsuSharp.OsuApi.GetUserByIdAsync*
  implements:
  - OsuSharp.Interfaces.IOsuApi.GetUserByIdAsync(System.Int64,OsuSharp.Misc.GameMode,System.Threading.CancellationToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: OsuSharp.OsuApi.GetScoreByUsername(System.Int64,System.String,OsuSharp.Misc.GameMode)
  commentId: M:OsuSharp.OsuApi.GetScoreByUsername(System.Int64,System.String,OsuSharp.Misc.GameMode)
  id: GetScoreByUsername(System.Int64,System.String,OsuSharp.Misc.GameMode)
  parent: OsuSharp.OsuApi
  langs:
  - csharp
  - vb
  name: GetScoreByUsername(Int64, String, GameMode)
  nameWithType: OsuApi.GetScoreByUsername(Int64, String, GameMode)
  fullName: OsuSharp.OsuApi.GetScoreByUsername(System.Int64, System.String, OsuSharp.Misc.GameMode)
  type: Method
  source:
    id: GetScoreByUsername
    path: ''
    startLine: 391
  assemblies:
  - cs.temp.dll
  namespace: OsuSharp
  summary: "\nMethod that returns a <xref href=\"OsuSharp.Endpoints.Score\" data-throw-if-not-resolved=\"false\"></xref> by the given beatmapid and username.\n"
  example: []
  syntax:
    content: public Score GetScoreByUsername(long beatmapid, string username, GameMode gameMode = GameMode.Standard)
    parameters:
    - id: beatmapid
      type: System.Int64
      description: Id of the beatmap. Must be the id of a difficulty.
    - id: username
      type: System.String
      description: Username of the user.
    - id: gameMode
      type: OsuSharp.Misc.GameMode
      description: Gamemode of the play. Standard, Taiko, Catch or Mania.
    return:
      type: OsuSharp.Endpoints.Score
      description: "\n<xref href=\"OsuSharp.Endpoints.Score\" data-throw-if-not-resolved=\"false\"></xref>\n"
    content.vb: Public Function GetScoreByUsername(beatmapid As Long, username As String, gameMode As GameMode = GameMode.Standard) As Score
  overload: OsuSharp.OsuApi.GetScoreByUsername*
  implements:
  - OsuSharp.Interfaces.IOsuApi.GetScoreByUsername(System.Int64,System.String,OsuSharp.Misc.GameMode)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: OsuSharp.OsuApi.GetScoreByUsernameAsync(System.Int64,System.String,OsuSharp.Misc.GameMode,System.Threading.CancellationToken)
  commentId: M:OsuSharp.OsuApi.GetScoreByUsernameAsync(System.Int64,System.String,OsuSharp.Misc.GameMode,System.Threading.CancellationToken)
  id: GetScoreByUsernameAsync(System.Int64,System.String,OsuSharp.Misc.GameMode,System.Threading.CancellationToken)
  parent: OsuSharp.OsuApi
  langs:
  - csharp
  - vb
  name: GetScoreByUsernameAsync(Int64, String, GameMode, CancellationToken)
  nameWithType: OsuApi.GetScoreByUsernameAsync(Int64, String, GameMode, CancellationToken)
  fullName: OsuSharp.OsuApi.GetScoreByUsernameAsync(System.Int64, System.String, OsuSharp.Misc.GameMode, System.Threading.CancellationToken)
  type: Method
  source:
    id: GetScoreByUsernameAsync
    path: ''
    startLine: 419
  assemblies:
  - cs.temp.dll
  namespace: OsuSharp
  summary: "\nMethod that returns a <xref href=\"OsuSharp.Endpoints.Score\" data-throw-if-not-resolved=\"false\"></xref> by the given beatmapid and username.\n"
  example: []
  syntax:
    content: public Task<Score> GetScoreByUsernameAsync(long beatmapid, string username, GameMode gameMode = GameMode.Standard, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: beatmapid
      type: System.Int64
      description: Id of the beatmap. Must be the id of a difficulty.
    - id: username
      type: System.String
      description: Username of the user.
    - id: gameMode
      type: OsuSharp.Misc.GameMode
      description: Gamemode of the play. Standard, Taiko, Catch or Mania.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: Cancellation token
    return:
      type: System.Threading.Tasks.Task{OsuSharp.Endpoints.Score}
      description: "\n<xref href=\"OsuSharp.Endpoints.Score\" data-throw-if-not-resolved=\"false\"></xref>\n"
    content.vb: Public Function GetScoreByUsernameAsync(beatmapid As Long, username As String, gameMode As GameMode = GameMode.Standard, cancellationToken As CancellationToken = Nothing) As Task(Of Score)
  overload: OsuSharp.OsuApi.GetScoreByUsernameAsync*
  implements:
  - OsuSharp.Interfaces.IOsuApi.GetScoreByUsernameAsync(System.Int64,System.String,OsuSharp.Misc.GameMode,System.Threading.CancellationToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: OsuSharp.OsuApi.GetScoreByUserid(System.Int64,System.UInt64,OsuSharp.Misc.GameMode)
  commentId: M:OsuSharp.OsuApi.GetScoreByUserid(System.Int64,System.UInt64,OsuSharp.Misc.GameMode)
  id: GetScoreByUserid(System.Int64,System.UInt64,OsuSharp.Misc.GameMode)
  parent: OsuSharp.OsuApi
  langs:
  - csharp
  - vb
  name: GetScoreByUserid(Int64, UInt64, GameMode)
  nameWithType: OsuApi.GetScoreByUserid(Int64, UInt64, GameMode)
  fullName: OsuSharp.OsuApi.GetScoreByUserid(System.Int64, System.UInt64, OsuSharp.Misc.GameMode)
  type: Method
  source:
    id: GetScoreByUserid
    path: ''
    startLine: 448
  assemblies:
  - cs.temp.dll
  namespace: OsuSharp
  summary: "\nMethod that returns a <xref href=\"OsuSharp.Endpoints.Score\" data-throw-if-not-resolved=\"false\"></xref> by the given beatmapid and userid.\n"
  example: []
  syntax:
    content: public Score GetScoreByUserid(long beatmapid, ulong userid, GameMode gameMode = GameMode.Standard)
    parameters:
    - id: beatmapid
      type: System.Int64
      description: Id of the beatmap. Must be the id of a difficulty.
    - id: userid
      type: System.UInt64
      description: Id of the user.
    - id: gameMode
      type: OsuSharp.Misc.GameMode
      description: Gamemode of the play. Standard, Taiko, Catch or Mania.
    return:
      type: OsuSharp.Endpoints.Score
      description: "\n<xref href=\"OsuSharp.Endpoints.Score\" data-throw-if-not-resolved=\"false\"></xref>\n"
    content.vb: Public Function GetScoreByUserid(beatmapid As Long, userid As ULong, gameMode As GameMode = GameMode.Standard) As Score
  overload: OsuSharp.OsuApi.GetScoreByUserid*
  implements:
  - OsuSharp.Interfaces.IOsuApi.GetScoreByUserid(System.Int64,System.UInt64,OsuSharp.Misc.GameMode)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: OsuSharp.OsuApi.GetScoreByUseridAsync(System.Int64,System.Int64,OsuSharp.Misc.GameMode,System.Threading.CancellationToken)
  commentId: M:OsuSharp.OsuApi.GetScoreByUseridAsync(System.Int64,System.Int64,OsuSharp.Misc.GameMode,System.Threading.CancellationToken)
  id: GetScoreByUseridAsync(System.Int64,System.Int64,OsuSharp.Misc.GameMode,System.Threading.CancellationToken)
  parent: OsuSharp.OsuApi
  langs:
  - csharp
  - vb
  name: GetScoreByUseridAsync(Int64, Int64, GameMode, CancellationToken)
  nameWithType: OsuApi.GetScoreByUseridAsync(Int64, Int64, GameMode, CancellationToken)
  fullName: OsuSharp.OsuApi.GetScoreByUseridAsync(System.Int64, System.Int64, OsuSharp.Misc.GameMode, System.Threading.CancellationToken)
  type: Method
  source:
    id: GetScoreByUseridAsync
    path: ''
    startLine: 473
  assemblies:
  - cs.temp.dll
  namespace: OsuSharp
  summary: "\nMethod that returns a <xref href=\"OsuSharp.Endpoints.Score\" data-throw-if-not-resolved=\"false\"></xref> by the given beatmapid and userid.\n"
  example: []
  syntax:
    content: public Task<Score> GetScoreByUseridAsync(long beatmapid, long userid, GameMode gameMode = GameMode.Standard, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: beatmapid
      type: System.Int64
      description: Id of the beatmap. Must be the id of a difficulty.
    - id: userid
      type: System.Int64
      description: Id of the user.
    - id: gameMode
      type: OsuSharp.Misc.GameMode
      description: Gamemode of the play. Standard, Taiko, Catch or Mania.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: Cancellation token
    return:
      type: System.Threading.Tasks.Task{OsuSharp.Endpoints.Score}
      description: "\n<xref href=\"OsuSharp.Endpoints.Score\" data-throw-if-not-resolved=\"false\"></xref>\n"
    content.vb: Public Function GetScoreByUseridAsync(beatmapid As Long, userid As Long, gameMode As GameMode = GameMode.Standard, cancellationToken As CancellationToken = Nothing) As Task(Of Score)
  overload: OsuSharp.OsuApi.GetScoreByUseridAsync*
  implements:
  - OsuSharp.Interfaces.IOsuApi.GetScoreByUseridAsync(System.Int64,System.Int64,OsuSharp.Misc.GameMode,System.Threading.CancellationToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: OsuSharp.OsuApi.GetScores(System.Int64,OsuSharp.Misc.GameMode,System.Int32)
  commentId: M:OsuSharp.OsuApi.GetScores(System.Int64,OsuSharp.Misc.GameMode,System.Int32)
  id: GetScores(System.Int64,OsuSharp.Misc.GameMode,System.Int32)
  parent: OsuSharp.OsuApi
  langs:
  - csharp
  - vb
  name: GetScores(Int64, GameMode, Int32)
  nameWithType: OsuApi.GetScores(Int64, GameMode, Int32)
  fullName: OsuSharp.OsuApi.GetScores(System.Int64, OsuSharp.Misc.GameMode, System.Int32)
  type: Method
  source:
    id: GetScores
    path: ''
    startLine: 499
  assemblies:
  - cs.temp.dll
  namespace: OsuSharp
  summary: "\nMethod that returns a list of <xref href=\"OsuSharp.Endpoints.Score\" data-throw-if-not-resolved=\"false\"></xref> by the given beatmapid.\n"
  example: []
  syntax:
    content: public List<Score> GetScores(long beatmapid, GameMode gameMode = GameMode.Standard, int limit = 50)
    parameters:
    - id: beatmapid
      type: System.Int64
      description: Id of the beatmap. Must be the id of a difficulty.
    - id: gameMode
      type: OsuSharp.Misc.GameMode
      description: Gamemode of the play. Standard, Taiko, Catch or Mania.
    - id: limit
      type: System.Int32
      description: 'Limit of the output. Default : 50, minimum : 1, maximum : 100'
    return:
      type: System.Collections.Generic.List{OsuSharp.Endpoints.Score}
      description: "\n<xref href=\"OsuSharp.Endpoints.Score\" data-throw-if-not-resolved=\"false\"></xref>\n"
    content.vb: Public Function GetScores(beatmapid As Long, gameMode As GameMode = GameMode.Standard, limit As Integer = 50) As List(Of Score)
  overload: OsuSharp.OsuApi.GetScores*
  implements:
  - OsuSharp.Interfaces.IOsuApi.GetScores(System.Int64,OsuSharp.Misc.GameMode,System.Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: OsuSharp.OsuApi.GetScoresAsync(System.Int64,OsuSharp.Misc.GameMode,System.Int32,System.Threading.CancellationToken)
  commentId: M:OsuSharp.OsuApi.GetScoresAsync(System.Int64,OsuSharp.Misc.GameMode,System.Int32,System.Threading.CancellationToken)
  id: GetScoresAsync(System.Int64,OsuSharp.Misc.GameMode,System.Int32,System.Threading.CancellationToken)
  parent: OsuSharp.OsuApi
  langs:
  - csharp
  - vb
  name: GetScoresAsync(Int64, GameMode, Int32, CancellationToken)
  nameWithType: OsuApi.GetScoresAsync(Int64, GameMode, Int32, CancellationToken)
  fullName: OsuSharp.OsuApi.GetScoresAsync(System.Int64, OsuSharp.Misc.GameMode, System.Int32, System.Threading.CancellationToken)
  type: Method
  source:
    id: GetScoresAsync
    path: ''
    startLine: 523
  assemblies:
  - cs.temp.dll
  namespace: OsuSharp
  summary: "\nMethod that returns a list of <xref href=\"OsuSharp.Endpoints.Score\" data-throw-if-not-resolved=\"false\"></xref> by the given beatmapid.\n"
  example: []
  syntax:
    content: public Task<List<Score>> GetScoresAsync(long beatmapid, GameMode gameMode = GameMode.Standard, int limit = 50, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: beatmapid
      type: System.Int64
      description: Id of the beatmap. Must be the id of a difficulty.
    - id: gameMode
      type: OsuSharp.Misc.GameMode
      description: Gamemode of the play. Standard, Taiko, Catch or Mania.
    - id: limit
      type: System.Int32
      description: 'Limit of the output. Default : 50, minimum : 1, maximum : 100'
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: Cancellation token
    return:
      type: System.Threading.Tasks.Task{System.Collections.Generic.List{OsuSharp.Endpoints.Score}}
      description: "\n<xref href=\"OsuSharp.Endpoints.Score\" data-throw-if-not-resolved=\"false\"></xref>\n"
    content.vb: Public Function GetScoresAsync(beatmapid As Long, gameMode As GameMode = GameMode.Standard, limit As Integer = 50, cancellationToken As CancellationToken = Nothing) As Task(Of List(Of Score))
  overload: OsuSharp.OsuApi.GetScoresAsync*
  implements:
  - OsuSharp.Interfaces.IOsuApi.GetScoresAsync(System.Int64,OsuSharp.Misc.GameMode,System.Int32,System.Threading.CancellationToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: OsuSharp.OsuApi.GetScoresAndBeatmap(System.Int64,OsuSharp.Misc.GameMode,System.Int32)
  commentId: M:OsuSharp.OsuApi.GetScoresAndBeatmap(System.Int64,OsuSharp.Misc.GameMode,System.Int32)
  id: GetScoresAndBeatmap(System.Int64,OsuSharp.Misc.GameMode,System.Int32)
  parent: OsuSharp.OsuApi
  langs:
  - csharp
  - vb
  name: GetScoresAndBeatmap(Int64, GameMode, Int32)
  nameWithType: OsuApi.GetScoresAndBeatmap(Int64, GameMode, Int32)
  fullName: OsuSharp.OsuApi.GetScoresAndBeatmap(System.Int64, OsuSharp.Misc.GameMode, System.Int32)
  type: Method
  source:
    id: GetScoresAndBeatmap
    path: ''
    startLine: 548
  assemblies:
  - cs.temp.dll
  namespace: OsuSharp
  summary: "\nMethod that returns a list of <xref href=\"OsuSharp.Entities.BeatmapScores\" data-throw-if-not-resolved=\"false\"></xref> by the given beatmapid.\n"
  example: []
  syntax:
    content: public BeatmapScores GetScoresAndBeatmap(long beatmapid, GameMode gameMode = GameMode.Standard, int limit = 50)
    parameters:
    - id: beatmapid
      type: System.Int64
      description: Id of the beatmap. Must be the id of a difficulty.
    - id: gameMode
      type: OsuSharp.Misc.GameMode
      description: Gamemode of the play. Standard, Taiko, Catch or Mania.
    - id: limit
      type: System.Int32
      description: 'Limit of the output. Default : 50, minimum : 1, maximum : 100'
    return:
      type: OsuSharp.Entities.BeatmapScores
      description: "\n<xref href=\"OsuSharp.Entities.BeatmapScores\" data-throw-if-not-resolved=\"false\"></xref>\n"
    content.vb: Public Function GetScoresAndBeatmap(beatmapid As Long, gameMode As GameMode = GameMode.Standard, limit As Integer = 50) As BeatmapScores
  overload: OsuSharp.OsuApi.GetScoresAndBeatmap*
  implements:
  - OsuSharp.Interfaces.IOsuApi.GetScoresAndBeatmap(System.Int64,OsuSharp.Misc.GameMode,System.Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: OsuSharp.OsuApi.GetScoresAndBeatmapAsync(System.Int64,OsuSharp.Misc.GameMode,System.Int32,System.Threading.CancellationToken)
  commentId: M:OsuSharp.OsuApi.GetScoresAndBeatmapAsync(System.Int64,OsuSharp.Misc.GameMode,System.Int32,System.Threading.CancellationToken)
  id: GetScoresAndBeatmapAsync(System.Int64,OsuSharp.Misc.GameMode,System.Int32,System.Threading.CancellationToken)
  parent: OsuSharp.OsuApi
  langs:
  - csharp
  - vb
  name: GetScoresAndBeatmapAsync(Int64, GameMode, Int32, CancellationToken)
  nameWithType: OsuApi.GetScoresAndBeatmapAsync(Int64, GameMode, Int32, CancellationToken)
  fullName: OsuSharp.OsuApi.GetScoresAndBeatmapAsync(System.Int64, OsuSharp.Misc.GameMode, System.Int32, System.Threading.CancellationToken)
  type: Method
  source:
    id: GetScoresAndBeatmapAsync
    path: ''
    startLine: 579
  assemblies:
  - cs.temp.dll
  namespace: OsuSharp
  summary: "\nMethod that returns a list of <xref href=\"OsuSharp.Entities.BeatmapScores\" data-throw-if-not-resolved=\"false\"></xref> by the given beatmapid.\n"
  example: []
  syntax:
    content: public Task<BeatmapScores> GetScoresAndBeatmapAsync(long beatmapid, GameMode gameMode = GameMode.Standard, int limit = 50, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: beatmapid
      type: System.Int64
      description: Id of the beatmap. Must be the id of a difficulty.
    - id: gameMode
      type: OsuSharp.Misc.GameMode
      description: Gamemode of the play. Standard, Taiko, Catch or Mania.
    - id: limit
      type: System.Int32
      description: 'Limit of the output. Default : 50, minimum : 1, maximum : 100'
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: Cancellation token
    return:
      type: System.Threading.Tasks.Task{OsuSharp.Entities.BeatmapScores}
      description: "\n<xref href=\"OsuSharp.Entities.BeatmapScores\" data-throw-if-not-resolved=\"false\"></xref>\n"
    content.vb: Public Function GetScoresAndBeatmapAsync(beatmapid As Long, gameMode As GameMode = GameMode.Standard, limit As Integer = 50, cancellationToken As CancellationToken = Nothing) As Task(Of BeatmapScores)
  overload: OsuSharp.OsuApi.GetScoresAndBeatmapAsync*
  implements:
  - OsuSharp.Interfaces.IOsuApi.GetScoresAndBeatmapAsync(System.Int64,OsuSharp.Misc.GameMode,System.Int32,System.Threading.CancellationToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: OsuSharp.OsuApi.GetScoresWithUsersAndBeatmap(System.Int64,OsuSharp.Misc.GameMode,System.Int32)
  commentId: M:OsuSharp.OsuApi.GetScoresWithUsersAndBeatmap(System.Int64,OsuSharp.Misc.GameMode,System.Int32)
  id: GetScoresWithUsersAndBeatmap(System.Int64,OsuSharp.Misc.GameMode,System.Int32)
  parent: OsuSharp.OsuApi
  langs:
  - csharp
  - vb
  name: GetScoresWithUsersAndBeatmap(Int64, GameMode, Int32)
  nameWithType: OsuApi.GetScoresWithUsersAndBeatmap(Int64, GameMode, Int32)
  fullName: OsuSharp.OsuApi.GetScoresWithUsersAndBeatmap(System.Int64, OsuSharp.Misc.GameMode, System.Int32)
  type: Method
  source:
    id: GetScoresWithUsersAndBeatmap
    path: ''
    startLine: 612
  assemblies:
  - cs.temp.dll
  namespace: OsuSharp
  summary: "\nMethod that returns a list of <xref href=\"OsuSharp.Entities.BeatmapScoresUsers\" data-throw-if-not-resolved=\"false\"></xref> by the given beatmapid.\n"
  example: []
  syntax:
    content: public BeatmapScoresUsers GetScoresWithUsersAndBeatmap(long beatmapid, GameMode gameMode = GameMode.Standard, int limit = 50)
    parameters:
    - id: beatmapid
      type: System.Int64
      description: Id of the beatmap. Must be the id of a difficulty.
    - id: gameMode
      type: OsuSharp.Misc.GameMode
      description: Gamemode of the play. Standard, Taiko, Catch or Mania.
    - id: limit
      type: System.Int32
      description: 'Limit of the output. Default : 50, minimum : 1, maximum : 100'
    return:
      type: OsuSharp.Entities.BeatmapScoresUsers
      description: "\n<xref href=\"OsuSharp.Entities.BeatmapScoresUsers\" data-throw-if-not-resolved=\"false\"></xref>\n"
    content.vb: Public Function GetScoresWithUsersAndBeatmap(beatmapid As Long, gameMode As GameMode = GameMode.Standard, limit As Integer = 50) As BeatmapScoresUsers
  overload: OsuSharp.OsuApi.GetScoresWithUsersAndBeatmap*
  implements:
  - OsuSharp.Interfaces.IOsuApi.GetScoresWithUsersAndBeatmap(System.Int64,OsuSharp.Misc.GameMode,System.Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: OsuSharp.OsuApi.GetScoresWithUsersAndBeatmapAsync(System.Int64,OsuSharp.Misc.GameMode,System.Int32,System.Threading.CancellationToken)
  commentId: M:OsuSharp.OsuApi.GetScoresWithUsersAndBeatmapAsync(System.Int64,OsuSharp.Misc.GameMode,System.Int32,System.Threading.CancellationToken)
  id: GetScoresWithUsersAndBeatmapAsync(System.Int64,OsuSharp.Misc.GameMode,System.Int32,System.Threading.CancellationToken)
  parent: OsuSharp.OsuApi
  langs:
  - csharp
  - vb
  name: GetScoresWithUsersAndBeatmapAsync(Int64, GameMode, Int32, CancellationToken)
  nameWithType: OsuApi.GetScoresWithUsersAndBeatmapAsync(Int64, GameMode, Int32, CancellationToken)
  fullName: OsuSharp.OsuApi.GetScoresWithUsersAndBeatmapAsync(System.Int64, OsuSharp.Misc.GameMode, System.Int32, System.Threading.CancellationToken)
  type: Method
  source:
    id: GetScoresWithUsersAndBeatmapAsync
    path: ''
    startLine: 648
  assemblies:
  - cs.temp.dll
  namespace: OsuSharp
  summary: "\nMethod that returns a list of <xref href=\"OsuSharp.Entities.BeatmapScoresUsers\" data-throw-if-not-resolved=\"false\"></xref> by the given beatmapid.\n"
  example: []
  syntax:
    content: public Task<BeatmapScoresUsers> GetScoresWithUsersAndBeatmapAsync(long beatmapid, GameMode gameMode = GameMode.Standard, int limit = 50, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: beatmapid
      type: System.Int64
      description: Id of the beatmap. Must be the id of a difficulty.
    - id: gameMode
      type: OsuSharp.Misc.GameMode
      description: Gamemode of the play. Standard, Taiko, Catch or Mania.
    - id: limit
      type: System.Int32
      description: 'Limit of the output. Default : 50, minimum : 1, maximum : 100'
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: Cancellation token
    return:
      type: System.Threading.Tasks.Task{OsuSharp.Entities.BeatmapScoresUsers}
      description: "\n<xref href=\"OsuSharp.Entities.BeatmapScoresUsers\" data-throw-if-not-resolved=\"false\"></xref>\n"
    content.vb: Public Function GetScoresWithUsersAndBeatmapAsync(beatmapid As Long, gameMode As GameMode = GameMode.Standard, limit As Integer = 50, cancellationToken As CancellationToken = Nothing) As Task(Of BeatmapScoresUsers)
  overload: OsuSharp.OsuApi.GetScoresWithUsersAndBeatmapAsync*
  implements:
  - OsuSharp.Interfaces.IOsuApi.GetScoresWithUsersAndBeatmapAsync(System.Int64,OsuSharp.Misc.GameMode,System.Int32,System.Threading.CancellationToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: OsuSharp.OsuApi.GetUserBestByUsername(System.String,OsuSharp.Misc.GameMode,System.Int32)
  commentId: M:OsuSharp.OsuApi.GetUserBestByUsername(System.String,OsuSharp.Misc.GameMode,System.Int32)
  id: GetUserBestByUsername(System.String,OsuSharp.Misc.GameMode,System.Int32)
  parent: OsuSharp.OsuApi
  langs:
  - csharp
  - vb
  name: GetUserBestByUsername(String, GameMode, Int32)
  nameWithType: OsuApi.GetUserBestByUsername(String, GameMode, Int32)
  fullName: OsuSharp.OsuApi.GetUserBestByUsername(System.String, OsuSharp.Misc.GameMode, System.Int32)
  type: Method
  source:
    id: GetUserBestByUsername
    path: ''
    startLine: 685
  assemblies:
  - cs.temp.dll
  namespace: OsuSharp
  summary: "\nMethod that returns a list of <xref href=\"OsuSharp.Endpoints.UserBest\" data-throw-if-not-resolved=\"false\"></xref> by the given username.\n"
  example: []
  syntax:
    content: public List<UserBest> GetUserBestByUsername(string username, GameMode gameMode = GameMode.Standard, int limit = 10)
    parameters:
    - id: username
      type: System.String
      description: Username of the user.
    - id: gameMode
      type: OsuSharp.Misc.GameMode
      description: Gamemode of the play. Standard, Taiko, Catch or Mania.
    - id: limit
      type: System.Int32
      description: 'Limit of the output. Default : 10, minimum : 1, maximum : 100'
    return:
      type: System.Collections.Generic.List{OsuSharp.Endpoints.UserBest}
      description: "\n<xref href=\"System.Collections.Generic.List%601\" data-throw-if-not-resolved=\"false\"></xref>\n"
    content.vb: Public Function GetUserBestByUsername(username As String, gameMode As GameMode = GameMode.Standard, limit As Integer = 10) As List(Of UserBest)
  overload: OsuSharp.OsuApi.GetUserBestByUsername*
  implements:
  - OsuSharp.Interfaces.IOsuApi.GetUserBestByUsername(System.String,OsuSharp.Misc.GameMode,System.Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: OsuSharp.OsuApi.GetUserBestByUsernameAsync(System.String,OsuSharp.Misc.GameMode,System.Int32,System.Threading.CancellationToken)
  commentId: M:OsuSharp.OsuApi.GetUserBestByUsernameAsync(System.String,OsuSharp.Misc.GameMode,System.Int32,System.Threading.CancellationToken)
  id: GetUserBestByUsernameAsync(System.String,OsuSharp.Misc.GameMode,System.Int32,System.Threading.CancellationToken)
  parent: OsuSharp.OsuApi
  langs:
  - csharp
  - vb
  name: GetUserBestByUsernameAsync(String, GameMode, Int32, CancellationToken)
  nameWithType: OsuApi.GetUserBestByUsernameAsync(String, GameMode, Int32, CancellationToken)
  fullName: OsuSharp.OsuApi.GetUserBestByUsernameAsync(System.String, OsuSharp.Misc.GameMode, System.Int32, System.Threading.CancellationToken)
  type: Method
  source:
    id: GetUserBestByUsernameAsync
    path: ''
    startLine: 713
  assemblies:
  - cs.temp.dll
  namespace: OsuSharp
  summary: "\nMethod that returns a list of <xref href=\"OsuSharp.Endpoints.UserBest\" data-throw-if-not-resolved=\"false\"></xref> by the given username.\n"
  example: []
  syntax:
    content: public Task<List<UserBest>> GetUserBestByUsernameAsync(string username, GameMode gameMode = GameMode.Standard, int limit = 10, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: username
      type: System.String
      description: Username of the user.
    - id: gameMode
      type: OsuSharp.Misc.GameMode
      description: Gamemode of the play. Standard, Taiko, Catch or Mania.
    - id: limit
      type: System.Int32
      description: 'Limit of the output. Default : 10, minimum : 1, maximum : 100'
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: Cancellation token
    return:
      type: System.Threading.Tasks.Task{System.Collections.Generic.List{OsuSharp.Endpoints.UserBest}}
      description: "\n<xref href=\"System.Collections.Generic.List%601\" data-throw-if-not-resolved=\"false\"></xref>\n"
    content.vb: Public Function GetUserBestByUsernameAsync(username As String, gameMode As GameMode = GameMode.Standard, limit As Integer = 10, cancellationToken As CancellationToken = Nothing) As Task(Of List(Of UserBest))
  overload: OsuSharp.OsuApi.GetUserBestByUsernameAsync*
  implements:
  - OsuSharp.Interfaces.IOsuApi.GetUserBestByUsernameAsync(System.String,OsuSharp.Misc.GameMode,System.Int32,System.Threading.CancellationToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: OsuSharp.OsuApi.GetUserBestAndBeatmapByUsername(System.String,OsuSharp.Misc.GameMode,System.Int32)
  commentId: M:OsuSharp.OsuApi.GetUserBestAndBeatmapByUsername(System.String,OsuSharp.Misc.GameMode,System.Int32)
  id: GetUserBestAndBeatmapByUsername(System.String,OsuSharp.Misc.GameMode,System.Int32)
  parent: OsuSharp.OsuApi
  langs:
  - csharp
  - vb
  name: GetUserBestAndBeatmapByUsername(String, GameMode, Int32)
  nameWithType: OsuApi.GetUserBestAndBeatmapByUsername(String, GameMode, Int32)
  fullName: OsuSharp.OsuApi.GetUserBestAndBeatmapByUsername(System.String, OsuSharp.Misc.GameMode, System.Int32)
  type: Method
  source:
    id: GetUserBestAndBeatmapByUsername
    path: ''
    startLine: 741
  assemblies:
  - cs.temp.dll
  namespace: OsuSharp
  summary: "\nMethod that returns a list of <xref href=\"OsuSharp.Entities.UserBestBeatmap\" data-throw-if-not-resolved=\"false\"></xref> by the given username.\n"
  example: []
  syntax:
    content: public List<UserBestBeatmap> GetUserBestAndBeatmapByUsername(string username, GameMode gameMode = GameMode.Standard, int limit = 10)
    parameters:
    - id: username
      type: System.String
      description: Username of the user.
    - id: gameMode
      type: OsuSharp.Misc.GameMode
      description: Gamemode of the play. Standard, Taiko, Catch or Mania.
    - id: limit
      type: System.Int32
      description: 'Limit of the output. Default : 10, minimum : 1, maximum : 100'
    return:
      type: System.Collections.Generic.List{OsuSharp.Entities.UserBestBeatmap}
      description: "\n<xref href=\"System.Collections.Generic.List%601\" data-throw-if-not-resolved=\"false\"></xref>\n"
    content.vb: Public Function GetUserBestAndBeatmapByUsername(username As String, gameMode As GameMode = GameMode.Standard, limit As Integer = 10) As List(Of UserBestBeatmap)
  overload: OsuSharp.OsuApi.GetUserBestAndBeatmapByUsername*
  implements:
  - OsuSharp.Interfaces.IOsuApi.GetUserBestAndBeatmapByUsername(System.String,OsuSharp.Misc.GameMode,System.Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: OsuSharp.OsuApi.GetUserBestAndBeatmapByUsernameAsync(System.String,OsuSharp.Misc.GameMode,System.Int32,System.Threading.CancellationToken)
  commentId: M:OsuSharp.OsuApi.GetUserBestAndBeatmapByUsernameAsync(System.String,OsuSharp.Misc.GameMode,System.Int32,System.Threading.CancellationToken)
  id: GetUserBestAndBeatmapByUsernameAsync(System.String,OsuSharp.Misc.GameMode,System.Int32,System.Threading.CancellationToken)
  parent: OsuSharp.OsuApi
  langs:
  - csharp
  - vb
  name: GetUserBestAndBeatmapByUsernameAsync(String, GameMode, Int32, CancellationToken)
  nameWithType: OsuApi.GetUserBestAndBeatmapByUsernameAsync(String, GameMode, Int32, CancellationToken)
  fullName: OsuSharp.OsuApi.GetUserBestAndBeatmapByUsernameAsync(System.String, OsuSharp.Misc.GameMode, System.Int32, System.Threading.CancellationToken)
  type: Method
  source:
    id: GetUserBestAndBeatmapByUsernameAsync
    path: ''
    startLine: 778
  assemblies:
  - cs.temp.dll
  namespace: OsuSharp
  summary: "\nMethod that returns a list of <xref href=\"OsuSharp.Entities.UserBestBeatmap\" data-throw-if-not-resolved=\"false\"></xref> by the given username.\n"
  example: []
  syntax:
    content: public Task<List<UserBestBeatmap>> GetUserBestAndBeatmapByUsernameAsync(string username, GameMode gameMode = GameMode.Standard, int limit = 10, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: username
      type: System.String
      description: Username of the user.
    - id: gameMode
      type: OsuSharp.Misc.GameMode
      description: Gamemode of the play. Standard, Taiko, Catch or Mania.
    - id: limit
      type: System.Int32
      description: 'Limit of the output. Default : 10, minimum : 1, maximum : 100'
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: Cancellation token
    return:
      type: System.Threading.Tasks.Task{System.Collections.Generic.List{OsuSharp.Entities.UserBestBeatmap}}
      description: "\n<xref href=\"System.Collections.Generic.List%601\" data-throw-if-not-resolved=\"false\"></xref>\n"
    content.vb: Public Function GetUserBestAndBeatmapByUsernameAsync(username As String, gameMode As GameMode = GameMode.Standard, limit As Integer = 10, cancellationToken As CancellationToken = Nothing) As Task(Of List(Of UserBestBeatmap))
  overload: OsuSharp.OsuApi.GetUserBestAndBeatmapByUsernameAsync*
  implements:
  - OsuSharp.Interfaces.IOsuApi.GetUserBestAndBeatmapByUsernameAsync(System.String,OsuSharp.Misc.GameMode,System.Int32,System.Threading.CancellationToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: OsuSharp.OsuApi.GetUserBestByUserid(System.Int64,OsuSharp.Misc.GameMode,System.Int32)
  commentId: M:OsuSharp.OsuApi.GetUserBestByUserid(System.Int64,OsuSharp.Misc.GameMode,System.Int32)
  id: GetUserBestByUserid(System.Int64,OsuSharp.Misc.GameMode,System.Int32)
  parent: OsuSharp.OsuApi
  langs:
  - csharp
  - vb
  name: GetUserBestByUserid(Int64, GameMode, Int32)
  nameWithType: OsuApi.GetUserBestByUserid(Int64, GameMode, Int32)
  fullName: OsuSharp.OsuApi.GetUserBestByUserid(System.Int64, OsuSharp.Misc.GameMode, System.Int32)
  type: Method
  source:
    id: GetUserBestByUserid
    path: ''
    startLine: 816
  assemblies:
  - cs.temp.dll
  namespace: OsuSharp
  summary: "\nMethod that returns a list of <xref href=\"OsuSharp.Endpoints.UserBest\" data-throw-if-not-resolved=\"false\"></xref> by the given userid.\n"
  example: []
  syntax:
    content: public List<UserBest> GetUserBestByUserid(long userid, GameMode gameMode = GameMode.Standard, int limit = 10)
    parameters:
    - id: userid
      type: System.Int64
      description: Id of the user.
    - id: gameMode
      type: OsuSharp.Misc.GameMode
      description: Gamemode of the play. Standard, Taiko, Catch or Mania.
    - id: limit
      type: System.Int32
      description: 'Limit of the output. Default : 10, minimum : 1, maximum : 100'
    return:
      type: System.Collections.Generic.List{OsuSharp.Endpoints.UserBest}
      description: "\n<xref href=\"System.Collections.Generic.List%601\" data-throw-if-not-resolved=\"false\"></xref>\n"
    content.vb: Public Function GetUserBestByUserid(userid As Long, gameMode As GameMode = GameMode.Standard, limit As Integer = 10) As List(Of UserBest)
  overload: OsuSharp.OsuApi.GetUserBestByUserid*
  implements:
  - OsuSharp.Interfaces.IOsuApi.GetUserBestByUserid(System.Int64,OsuSharp.Misc.GameMode,System.Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: OsuSharp.OsuApi.GetUserBestByUseridAsync(System.Int64,OsuSharp.Misc.GameMode,System.Int32,System.Threading.CancellationToken)
  commentId: M:OsuSharp.OsuApi.GetUserBestByUseridAsync(System.Int64,OsuSharp.Misc.GameMode,System.Int32,System.Threading.CancellationToken)
  id: GetUserBestByUseridAsync(System.Int64,OsuSharp.Misc.GameMode,System.Int32,System.Threading.CancellationToken)
  parent: OsuSharp.OsuApi
  langs:
  - csharp
  - vb
  name: GetUserBestByUseridAsync(Int64, GameMode, Int32, CancellationToken)
  nameWithType: OsuApi.GetUserBestByUseridAsync(Int64, GameMode, Int32, CancellationToken)
  fullName: OsuSharp.OsuApi.GetUserBestByUseridAsync(System.Int64, OsuSharp.Misc.GameMode, System.Int32, System.Threading.CancellationToken)
  type: Method
  source:
    id: GetUserBestByUseridAsync
    path: ''
    startLine: 840
  assemblies:
  - cs.temp.dll
  namespace: OsuSharp
  summary: "\nMethod that returns a list of <xref href=\"OsuSharp.Endpoints.UserBest\" data-throw-if-not-resolved=\"false\"></xref> by the given userid.\n"
  example: []
  syntax:
    content: public Task<List<UserBest>> GetUserBestByUseridAsync(long userid, GameMode gameMode = GameMode.Standard, int limit = 10, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: userid
      type: System.Int64
      description: Id of the user.
    - id: gameMode
      type: OsuSharp.Misc.GameMode
      description: Gamemode of the play. Standard, Taiko, Catch or Mania.
    - id: limit
      type: System.Int32
      description: 'Limit of the output. Default : 10, minimum : 1, maximum : 100'
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: Cancellation token
    return:
      type: System.Threading.Tasks.Task{System.Collections.Generic.List{OsuSharp.Endpoints.UserBest}}
      description: "\n<xref href=\"System.Collections.Generic.List%601\" data-throw-if-not-resolved=\"false\"></xref>\n"
    content.vb: Public Function GetUserBestByUseridAsync(userid As Long, gameMode As GameMode = GameMode.Standard, limit As Integer = 10, cancellationToken As CancellationToken = Nothing) As Task(Of List(Of UserBest))
  overload: OsuSharp.OsuApi.GetUserBestByUseridAsync*
  implements:
  - OsuSharp.Interfaces.IOsuApi.GetUserBestByUseridAsync(System.Int64,OsuSharp.Misc.GameMode,System.Int32,System.Threading.CancellationToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: OsuSharp.OsuApi.GetUserBestAndBeatmapByUserid(System.Int64,OsuSharp.Misc.GameMode,System.Int32)
  commentId: M:OsuSharp.OsuApi.GetUserBestAndBeatmapByUserid(System.Int64,OsuSharp.Misc.GameMode,System.Int32)
  id: GetUserBestAndBeatmapByUserid(System.Int64,OsuSharp.Misc.GameMode,System.Int32)
  parent: OsuSharp.OsuApi
  langs:
  - csharp
  - vb
  name: GetUserBestAndBeatmapByUserid(Int64, GameMode, Int32)
  nameWithType: OsuApi.GetUserBestAndBeatmapByUserid(Int64, GameMode, Int32)
  fullName: OsuSharp.OsuApi.GetUserBestAndBeatmapByUserid(System.Int64, OsuSharp.Misc.GameMode, System.Int32)
  type: Method
  source:
    id: GetUserBestAndBeatmapByUserid
    path: ''
    startLine: 865
  assemblies:
  - cs.temp.dll
  namespace: OsuSharp
  summary: "\nMethod that returns a list of <xref href=\"OsuSharp.Entities.UserBestBeatmap\" data-throw-if-not-resolved=\"false\"></xref> by the given username.\n"
  example: []
  syntax:
    content: public List<UserBestBeatmap> GetUserBestAndBeatmapByUserid(long userid, GameMode gameMode = GameMode.Standard, int limit = 10)
    parameters:
    - id: userid
      type: System.Int64
      description: Id of the user.
    - id: gameMode
      type: OsuSharp.Misc.GameMode
      description: Gamemode of the play. Standard, Taiko, Catch or Mania.
    - id: limit
      type: System.Int32
      description: 'Limit of the output. Default : 10, minimum : 1, maximum : 100'
    return:
      type: System.Collections.Generic.List{OsuSharp.Entities.UserBestBeatmap}
      description: "\n<xref href=\"System.Collections.Generic.List%601\" data-throw-if-not-resolved=\"false\"></xref>\n"
    content.vb: Public Function GetUserBestAndBeatmapByUserid(userid As Long, gameMode As GameMode = GameMode.Standard, limit As Integer = 10) As List(Of UserBestBeatmap)
  overload: OsuSharp.OsuApi.GetUserBestAndBeatmapByUserid*
  implements:
  - OsuSharp.Interfaces.IOsuApi.GetUserBestAndBeatmapByUserid(System.Int64,OsuSharp.Misc.GameMode,System.Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: OsuSharp.OsuApi.GetUserBestAndBeatmapByUseridAsync(System.Int64,OsuSharp.Misc.GameMode,System.Int32,System.Threading.CancellationToken)
  commentId: M:OsuSharp.OsuApi.GetUserBestAndBeatmapByUseridAsync(System.Int64,OsuSharp.Misc.GameMode,System.Int32,System.Threading.CancellationToken)
  id: GetUserBestAndBeatmapByUseridAsync(System.Int64,OsuSharp.Misc.GameMode,System.Int32,System.Threading.CancellationToken)
  parent: OsuSharp.OsuApi
  langs:
  - csharp
  - vb
  name: GetUserBestAndBeatmapByUseridAsync(Int64, GameMode, Int32, CancellationToken)
  nameWithType: OsuApi.GetUserBestAndBeatmapByUseridAsync(Int64, GameMode, Int32, CancellationToken)
  fullName: OsuSharp.OsuApi.GetUserBestAndBeatmapByUseridAsync(System.Int64, OsuSharp.Misc.GameMode, System.Int32, System.Threading.CancellationToken)
  type: Method
  source:
    id: GetUserBestAndBeatmapByUseridAsync
    path: ''
    startLine: 899
  assemblies:
  - cs.temp.dll
  namespace: OsuSharp
  summary: "\nMethod that returns a list of <xref href=\"OsuSharp.Entities.UserBestBeatmap\" data-throw-if-not-resolved=\"false\"></xref> by the given username.\n"
  example: []
  syntax:
    content: public Task<List<UserBestBeatmap>> GetUserBestAndBeatmapByUseridAsync(long userid, GameMode gameMode = GameMode.Standard, int limit = 10, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: userid
      type: System.Int64
      description: Id of the user.
    - id: gameMode
      type: OsuSharp.Misc.GameMode
      description: Gamemode of the play. Standard, Taiko, Catch or Mania.
    - id: limit
      type: System.Int32
      description: 'Limit of the output. Default : 10, minimum : 1, maximum : 100'
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: Cancellation token
    return:
      type: System.Threading.Tasks.Task{System.Collections.Generic.List{OsuSharp.Entities.UserBestBeatmap}}
      description: "\n<xref href=\"System.Collections.Generic.List%601\" data-throw-if-not-resolved=\"false\"></xref>\n"
    content.vb: Public Function GetUserBestAndBeatmapByUseridAsync(userid As Long, gameMode As GameMode = GameMode.Standard, limit As Integer = 10, cancellationToken As CancellationToken = Nothing) As Task(Of List(Of UserBestBeatmap))
  overload: OsuSharp.OsuApi.GetUserBestAndBeatmapByUseridAsync*
  implements:
  - OsuSharp.Interfaces.IOsuApi.GetUserBestAndBeatmapByUseridAsync(System.Int64,OsuSharp.Misc.GameMode,System.Int32,System.Threading.CancellationToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: OsuSharp.OsuApi.GetUserRecentByUsername(System.String,OsuSharp.Misc.GameMode,System.Int32)
  commentId: M:OsuSharp.OsuApi.GetUserRecentByUsername(System.String,OsuSharp.Misc.GameMode,System.Int32)
  id: GetUserRecentByUsername(System.String,OsuSharp.Misc.GameMode,System.Int32)
  parent: OsuSharp.OsuApi
  langs:
  - csharp
  - vb
  name: GetUserRecentByUsername(String, GameMode, Int32)
  nameWithType: OsuApi.GetUserRecentByUsername(String, GameMode, Int32)
  fullName: OsuSharp.OsuApi.GetUserRecentByUsername(System.String, OsuSharp.Misc.GameMode, System.Int32)
  type: Method
  source:
    id: GetUserRecentByUsername
    path: ''
    startLine: 934
  assemblies:
  - cs.temp.dll
  namespace: OsuSharp
  summary: "\nMethod that returns a list of <xref href=\"OsuSharp.Endpoints.UserRecent\" data-throw-if-not-resolved=\"false\"></xref> by the given username.\n"
  example: []
  syntax:
    content: public List<UserRecent> GetUserRecentByUsername(string username, GameMode gameMode = GameMode.Standard, int limit = 10)
    parameters:
    - id: username
      type: System.String
      description: Username of the user.
    - id: gameMode
      type: OsuSharp.Misc.GameMode
      description: Gamemode of the play. Standard, Taiko, Catch or Mania.
    - id: limit
      type: System.Int32
      description: 'Limit of the output. Default : 10, minimum : 1, maximum : 100'
    return:
      type: System.Collections.Generic.List{OsuSharp.Endpoints.UserRecent}
      description: "\n<xref href=\"System.Collections.Generic.List%601\" data-throw-if-not-resolved=\"false\"></xref>\n"
    content.vb: Public Function GetUserRecentByUsername(username As String, gameMode As GameMode = GameMode.Standard, limit As Integer = 10) As List(Of UserRecent)
  overload: OsuSharp.OsuApi.GetUserRecentByUsername*
  implements:
  - OsuSharp.Interfaces.IOsuApi.GetUserRecentByUsername(System.String,OsuSharp.Misc.GameMode,System.Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: OsuSharp.OsuApi.GetUserRecentByUsernameAsync(System.String,OsuSharp.Misc.GameMode,System.Int32,System.Threading.CancellationToken)
  commentId: M:OsuSharp.OsuApi.GetUserRecentByUsernameAsync(System.String,OsuSharp.Misc.GameMode,System.Int32,System.Threading.CancellationToken)
  id: GetUserRecentByUsernameAsync(System.String,OsuSharp.Misc.GameMode,System.Int32,System.Threading.CancellationToken)
  parent: OsuSharp.OsuApi
  langs:
  - csharp
  - vb
  name: GetUserRecentByUsernameAsync(String, GameMode, Int32, CancellationToken)
  nameWithType: OsuApi.GetUserRecentByUsernameAsync(String, GameMode, Int32, CancellationToken)
  fullName: OsuSharp.OsuApi.GetUserRecentByUsernameAsync(System.String, OsuSharp.Misc.GameMode, System.Int32, System.Threading.CancellationToken)
  type: Method
  source:
    id: GetUserRecentByUsernameAsync
    path: ''
    startLine: 962
  assemblies:
  - cs.temp.dll
  namespace: OsuSharp
  summary: "\nMethod that returns a list of <xref href=\"OsuSharp.Endpoints.UserRecent\" data-throw-if-not-resolved=\"false\"></xref> by the given username.\n"
  example: []
  syntax:
    content: public Task<List<UserRecent>> GetUserRecentByUsernameAsync(string username, GameMode gameMode = GameMode.Standard, int limit = 10, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: username
      type: System.String
      description: Username of the user.
    - id: gameMode
      type: OsuSharp.Misc.GameMode
      description: Gamemode of the play. Standard, Taiko, Catch or Mania.
    - id: limit
      type: System.Int32
      description: 'Limit of the output. Default : 10, minimum : 1, maximum : 100'
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: Cancellation token
    return:
      type: System.Threading.Tasks.Task{System.Collections.Generic.List{OsuSharp.Endpoints.UserRecent}}
      description: "\n<xref href=\"System.Collections.Generic.List%601\" data-throw-if-not-resolved=\"false\"></xref>\n"
    content.vb: Public Function GetUserRecentByUsernameAsync(username As String, gameMode As GameMode = GameMode.Standard, limit As Integer = 10, cancellationToken As CancellationToken = Nothing) As Task(Of List(Of UserRecent))
  overload: OsuSharp.OsuApi.GetUserRecentByUsernameAsync*
  implements:
  - OsuSharp.Interfaces.IOsuApi.GetUserRecentByUsernameAsync(System.String,OsuSharp.Misc.GameMode,System.Int32,System.Threading.CancellationToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: OsuSharp.OsuApi.GetUserRecentAndBeatmapByUsername(System.String,OsuSharp.Misc.GameMode,System.Int32)
  commentId: M:OsuSharp.OsuApi.GetUserRecentAndBeatmapByUsername(System.String,OsuSharp.Misc.GameMode,System.Int32)
  id: GetUserRecentAndBeatmapByUsername(System.String,OsuSharp.Misc.GameMode,System.Int32)
  parent: OsuSharp.OsuApi
  langs:
  - csharp
  - vb
  name: GetUserRecentAndBeatmapByUsername(String, GameMode, Int32)
  nameWithType: OsuApi.GetUserRecentAndBeatmapByUsername(String, GameMode, Int32)
  fullName: OsuSharp.OsuApi.GetUserRecentAndBeatmapByUsername(System.String, OsuSharp.Misc.GameMode, System.Int32)
  type: Method
  source:
    id: GetUserRecentAndBeatmapByUsername
    path: ''
    startLine: 990
  assemblies:
  - cs.temp.dll
  namespace: OsuSharp
  summary: "\nMethod that returns a list of <xref href=\"OsuSharp.Entities.UserRecentBeatmap\" data-throw-if-not-resolved=\"false\"></xref> by the given username.\n"
  example: []
  syntax:
    content: public List<UserRecentBeatmap> GetUserRecentAndBeatmapByUsername(string username, GameMode gameMode = GameMode.Standard, int limit = 10)
    parameters:
    - id: username
      type: System.String
      description: Username of the user.
    - id: gameMode
      type: OsuSharp.Misc.GameMode
      description: Gamemode of the play. Standard, Taiko, Catch or Mania.
    - id: limit
      type: System.Int32
      description: 'Limit of the output. Default : 10, minimum : 1, maximum : 100'
    return:
      type: System.Collections.Generic.List{OsuSharp.Entities.UserRecentBeatmap}
      description: "\n<xref href=\"System.Collections.Generic.List%601\" data-throw-if-not-resolved=\"false\"></xref>\n"
    content.vb: Public Function GetUserRecentAndBeatmapByUsername(username As String, gameMode As GameMode = GameMode.Standard, limit As Integer = 10) As List(Of UserRecentBeatmap)
  overload: OsuSharp.OsuApi.GetUserRecentAndBeatmapByUsername*
  implements:
  - OsuSharp.Interfaces.IOsuApi.GetUserRecentAndBeatmapByUsername(System.String,OsuSharp.Misc.GameMode,System.Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: OsuSharp.OsuApi.GetUserRecentAndBeatmapByUsernameAsync(System.String,OsuSharp.Misc.GameMode,System.Int32,System.Threading.CancellationToken)
  commentId: M:OsuSharp.OsuApi.GetUserRecentAndBeatmapByUsernameAsync(System.String,OsuSharp.Misc.GameMode,System.Int32,System.Threading.CancellationToken)
  id: GetUserRecentAndBeatmapByUsernameAsync(System.String,OsuSharp.Misc.GameMode,System.Int32,System.Threading.CancellationToken)
  parent: OsuSharp.OsuApi
  langs:
  - csharp
  - vb
  name: GetUserRecentAndBeatmapByUsernameAsync(String, GameMode, Int32, CancellationToken)
  nameWithType: OsuApi.GetUserRecentAndBeatmapByUsernameAsync(String, GameMode, Int32, CancellationToken)
  fullName: OsuSharp.OsuApi.GetUserRecentAndBeatmapByUsernameAsync(System.String, OsuSharp.Misc.GameMode, System.Int32, System.Threading.CancellationToken)
  type: Method
  source:
    id: GetUserRecentAndBeatmapByUsernameAsync
    path: ''
    startLine: 1027
  assemblies:
  - cs.temp.dll
  namespace: OsuSharp
  summary: "\nMethod that returns a list of <xref href=\"OsuSharp.Entities.UserRecentBeatmap\" data-throw-if-not-resolved=\"false\"></xref> by the given username.\n"
  example: []
  syntax:
    content: public Task<List<UserRecentBeatmap>> GetUserRecentAndBeatmapByUsernameAsync(string username, GameMode gameMode = GameMode.Standard, int limit = 10, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: username
      type: System.String
      description: Username of the user.
    - id: gameMode
      type: OsuSharp.Misc.GameMode
      description: Gamemode of the play. Standard, Taiko, Catch or Mania.
    - id: limit
      type: System.Int32
      description: 'Limit of the output. Default : 10, minimum : 1, maximum : 100'
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: Cancellation token
    return:
      type: System.Threading.Tasks.Task{System.Collections.Generic.List{OsuSharp.Entities.UserRecentBeatmap}}
      description: "\n<xref href=\"System.Collections.Generic.List%601\" data-throw-if-not-resolved=\"false\"></xref>\n"
    content.vb: Public Function GetUserRecentAndBeatmapByUsernameAsync(username As String, gameMode As GameMode = GameMode.Standard, limit As Integer = 10, cancellationToken As CancellationToken = Nothing) As Task(Of List(Of UserRecentBeatmap))
  overload: OsuSharp.OsuApi.GetUserRecentAndBeatmapByUsernameAsync*
  implements:
  - OsuSharp.Interfaces.IOsuApi.GetUserRecentAndBeatmapByUsernameAsync(System.String,OsuSharp.Misc.GameMode,System.Int32,System.Threading.CancellationToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: OsuSharp.OsuApi.GetUserRecentByUserid(System.Int64,OsuSharp.Misc.GameMode,System.Int32)
  commentId: M:OsuSharp.OsuApi.GetUserRecentByUserid(System.Int64,OsuSharp.Misc.GameMode,System.Int32)
  id: GetUserRecentByUserid(System.Int64,OsuSharp.Misc.GameMode,System.Int32)
  parent: OsuSharp.OsuApi
  langs:
  - csharp
  - vb
  name: GetUserRecentByUserid(Int64, GameMode, Int32)
  nameWithType: OsuApi.GetUserRecentByUserid(Int64, GameMode, Int32)
  fullName: OsuSharp.OsuApi.GetUserRecentByUserid(System.Int64, OsuSharp.Misc.GameMode, System.Int32)
  type: Method
  source:
    id: GetUserRecentByUserid
    path: ''
    startLine: 1065
  assemblies:
  - cs.temp.dll
  namespace: OsuSharp
  summary: "\nMethod that returns a list of <xref href=\"OsuSharp.Endpoints.UserRecent\" data-throw-if-not-resolved=\"false\"></xref> by the given userid.\n"
  example: []
  syntax:
    content: public List<UserRecent> GetUserRecentByUserid(long userid, GameMode gameMode = GameMode.Standard, int limit = 10)
    parameters:
    - id: userid
      type: System.Int64
      description: Id of the user.
    - id: gameMode
      type: OsuSharp.Misc.GameMode
      description: Gamemode of the play. Standard, Taiko, Catch or Mania.
    - id: limit
      type: System.Int32
      description: 'Limit of the output. Default : 10, minimum : 1, maximum : 100'
    return:
      type: System.Collections.Generic.List{OsuSharp.Endpoints.UserRecent}
      description: "\n<xref href=\"System.Collections.Generic.List%601\" data-throw-if-not-resolved=\"false\"></xref>\n"
    content.vb: Public Function GetUserRecentByUserid(userid As Long, gameMode As GameMode = GameMode.Standard, limit As Integer = 10) As List(Of UserRecent)
  overload: OsuSharp.OsuApi.GetUserRecentByUserid*
  implements:
  - OsuSharp.Interfaces.IOsuApi.GetUserRecentByUserid(System.Int64,OsuSharp.Misc.GameMode,System.Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: OsuSharp.OsuApi.GetUserRecentByUseridAsync(System.Int64,OsuSharp.Misc.GameMode,System.Int32,System.Threading.CancellationToken)
  commentId: M:OsuSharp.OsuApi.GetUserRecentByUseridAsync(System.Int64,OsuSharp.Misc.GameMode,System.Int32,System.Threading.CancellationToken)
  id: GetUserRecentByUseridAsync(System.Int64,OsuSharp.Misc.GameMode,System.Int32,System.Threading.CancellationToken)
  parent: OsuSharp.OsuApi
  langs:
  - csharp
  - vb
  name: GetUserRecentByUseridAsync(Int64, GameMode, Int32, CancellationToken)
  nameWithType: OsuApi.GetUserRecentByUseridAsync(Int64, GameMode, Int32, CancellationToken)
  fullName: OsuSharp.OsuApi.GetUserRecentByUseridAsync(System.Int64, OsuSharp.Misc.GameMode, System.Int32, System.Threading.CancellationToken)
  type: Method
  source:
    id: GetUserRecentByUseridAsync
    path: ''
    startLine: 1090
  assemblies:
  - cs.temp.dll
  namespace: OsuSharp
  summary: "\nMethod that returns a list of <xref href=\"OsuSharp.Endpoints.UserRecent\" data-throw-if-not-resolved=\"false\"></xref> by the given userid.\n"
  example: []
  syntax:
    content: public Task<List<UserRecent>> GetUserRecentByUseridAsync(long userid, GameMode gameMode = GameMode.Standard, int limit = 10, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: userid
      type: System.Int64
      description: Id of the user.
    - id: gameMode
      type: OsuSharp.Misc.GameMode
      description: Gamemode of the play. Standard, Taiko, Catch or Mania.
    - id: limit
      type: System.Int32
      description: 'Limit of the output. Default : 10, minimum : 1, maximum : 100'
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: Cancellation token
    return:
      type: System.Threading.Tasks.Task{System.Collections.Generic.List{OsuSharp.Endpoints.UserRecent}}
      description: "\n<xref href=\"System.Collections.Generic.List%601\" data-throw-if-not-resolved=\"false\"></xref>\n"
    content.vb: Public Function GetUserRecentByUseridAsync(userid As Long, gameMode As GameMode = GameMode.Standard, limit As Integer = 10, cancellationToken As CancellationToken = Nothing) As Task(Of List(Of UserRecent))
  overload: OsuSharp.OsuApi.GetUserRecentByUseridAsync*
  implements:
  - OsuSharp.Interfaces.IOsuApi.GetUserRecentByUseridAsync(System.Int64,OsuSharp.Misc.GameMode,System.Int32,System.Threading.CancellationToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: OsuSharp.OsuApi.GetUserRecentAndBeatmapByUserid(System.Int64,OsuSharp.Misc.GameMode,System.Int32)
  commentId: M:OsuSharp.OsuApi.GetUserRecentAndBeatmapByUserid(System.Int64,OsuSharp.Misc.GameMode,System.Int32)
  id: GetUserRecentAndBeatmapByUserid(System.Int64,OsuSharp.Misc.GameMode,System.Int32)
  parent: OsuSharp.OsuApi
  langs:
  - csharp
  - vb
  name: GetUserRecentAndBeatmapByUserid(Int64, GameMode, Int32)
  nameWithType: OsuApi.GetUserRecentAndBeatmapByUserid(Int64, GameMode, Int32)
  fullName: OsuSharp.OsuApi.GetUserRecentAndBeatmapByUserid(System.Int64, OsuSharp.Misc.GameMode, System.Int32)
  type: Method
  source:
    id: GetUserRecentAndBeatmapByUserid
    path: ''
    startLine: 1115
  assemblies:
  - cs.temp.dll
  namespace: OsuSharp
  summary: "\nMethod that returns a list of <xref href=\"OsuSharp.Entities.UserRecentBeatmap\" data-throw-if-not-resolved=\"false\"></xref> by the given userid.\n"
  example: []
  syntax:
    content: public List<UserRecentBeatmap> GetUserRecentAndBeatmapByUserid(long userid, GameMode gameMode = GameMode.Standard, int limit = 10)
    parameters:
    - id: userid
      type: System.Int64
      description: Id of the user.
    - id: gameMode
      type: OsuSharp.Misc.GameMode
      description: Gamemode of the play. Standard, Taiko, Catch or Mania.
    - id: limit
      type: System.Int32
      description: 'Limit of the output. Default : 10, minimum : 1, maximum : 100'
    return:
      type: System.Collections.Generic.List{OsuSharp.Entities.UserRecentBeatmap}
      description: "\n<xref href=\"System.Collections.Generic.List%601\" data-throw-if-not-resolved=\"false\"></xref>\n"
    content.vb: Public Function GetUserRecentAndBeatmapByUserid(userid As Long, gameMode As GameMode = GameMode.Standard, limit As Integer = 10) As List(Of UserRecentBeatmap)
  overload: OsuSharp.OsuApi.GetUserRecentAndBeatmapByUserid*
  implements:
  - OsuSharp.Interfaces.IOsuApi.GetUserRecentAndBeatmapByUserid(System.Int64,OsuSharp.Misc.GameMode,System.Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: OsuSharp.OsuApi.GetUserRecentAndBeatmapByUseridAsync(System.Int64,OsuSharp.Misc.GameMode,System.Int32,System.Threading.CancellationToken)
  commentId: M:OsuSharp.OsuApi.GetUserRecentAndBeatmapByUseridAsync(System.Int64,OsuSharp.Misc.GameMode,System.Int32,System.Threading.CancellationToken)
  id: GetUserRecentAndBeatmapByUseridAsync(System.Int64,OsuSharp.Misc.GameMode,System.Int32,System.Threading.CancellationToken)
  parent: OsuSharp.OsuApi
  langs:
  - csharp
  - vb
  name: GetUserRecentAndBeatmapByUseridAsync(Int64, GameMode, Int32, CancellationToken)
  nameWithType: OsuApi.GetUserRecentAndBeatmapByUseridAsync(Int64, GameMode, Int32, CancellationToken)
  fullName: OsuSharp.OsuApi.GetUserRecentAndBeatmapByUseridAsync(System.Int64, OsuSharp.Misc.GameMode, System.Int32, System.Threading.CancellationToken)
  type: Method
  source:
    id: GetUserRecentAndBeatmapByUseridAsync
    path: ''
    startLine: 1149
  assemblies:
  - cs.temp.dll
  namespace: OsuSharp
  summary: "\nMethod that returns a list of <xref href=\"OsuSharp.Entities.UserRecentBeatmap\" data-throw-if-not-resolved=\"false\"></xref> by the given userid.\n"
  example: []
  syntax:
    content: public Task<List<UserRecentBeatmap>> GetUserRecentAndBeatmapByUseridAsync(long userid, GameMode gameMode = GameMode.Standard, int limit = 10, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: userid
      type: System.Int64
      description: Id of the user.
    - id: gameMode
      type: OsuSharp.Misc.GameMode
      description: Gamemode of the play. Standard, Taiko, Catch or Mania.
    - id: limit
      type: System.Int32
      description: 'Limit of the output. Default : 10, minimum : 1, maximum : 100'
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: Cancellation token
    return:
      type: System.Threading.Tasks.Task{System.Collections.Generic.List{OsuSharp.Entities.UserRecentBeatmap}}
      description: "\n<xref href=\"System.Collections.Generic.List%601\" data-throw-if-not-resolved=\"false\"></xref>\n"
    content.vb: Public Function GetUserRecentAndBeatmapByUseridAsync(userid As Long, gameMode As GameMode = GameMode.Standard, limit As Integer = 10, cancellationToken As CancellationToken = Nothing) As Task(Of List(Of UserRecentBeatmap))
  overload: OsuSharp.OsuApi.GetUserRecentAndBeatmapByUseridAsync*
  implements:
  - OsuSharp.Interfaces.IOsuApi.GetUserRecentAndBeatmapByUseridAsync(System.Int64,OsuSharp.Misc.GameMode,System.Int32,System.Threading.CancellationToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: OsuSharp.OsuApi.GetMatch(System.Int64)
  commentId: M:OsuSharp.OsuApi.GetMatch(System.Int64)
  id: GetMatch(System.Int64)
  parent: OsuSharp.OsuApi
  langs:
  - csharp
  - vb
  name: GetMatch(Int64)
  nameWithType: OsuApi.GetMatch(Int64)
  fullName: OsuSharp.OsuApi.GetMatch(System.Int64)
  type: Method
  source:
    id: GetMatch
    path: ''
    startLine: 1181
  assemblies:
  - cs.temp.dll
  namespace: OsuSharp
  summary: "\nMethod that returns a <xref href=\"OsuSharp.Endpoints.Multiplayer\" data-throw-if-not-resolved=\"false\"></xref> by the given matchid.\n"
  example: []
  syntax:
    content: public Multiplayer GetMatch(long matchid)
    parameters:
    - id: matchid
      type: System.Int64
      description: Id of the match.
    return:
      type: OsuSharp.Endpoints.Multiplayer
      description: "\n<xref href=\"OsuSharp.Endpoints.Multiplayer\" data-throw-if-not-resolved=\"false\"></xref>\n"
    content.vb: Public Function GetMatch(matchid As Long) As Multiplayer
  overload: OsuSharp.OsuApi.GetMatch*
  implements:
  - OsuSharp.Interfaces.IOsuApi.GetMatch(System.Int64)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: OsuSharp.OsuApi.GetMatchAsync(System.Int64,System.Threading.CancellationToken)
  commentId: M:OsuSharp.OsuApi.GetMatchAsync(System.Int64,System.Threading.CancellationToken)
  id: GetMatchAsync(System.Int64,System.Threading.CancellationToken)
  parent: OsuSharp.OsuApi
  langs:
  - csharp
  - vb
  name: GetMatchAsync(Int64, CancellationToken)
  nameWithType: OsuApi.GetMatchAsync(Int64, CancellationToken)
  fullName: OsuSharp.OsuApi.GetMatchAsync(System.Int64, System.Threading.CancellationToken)
  type: Method
  source:
    id: GetMatchAsync
    path: ''
    startLine: 1199
  assemblies:
  - cs.temp.dll
  namespace: OsuSharp
  summary: "\nMethod that returns a <xref href=\"OsuSharp.Endpoints.Multiplayer\" data-throw-if-not-resolved=\"false\"></xref> by the given matchid.\n"
  example: []
  syntax:
    content: public Task<Multiplayer> GetMatchAsync(long matchid, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: matchid
      type: System.Int64
      description: Id of the match.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: Cancellation token
    return:
      type: System.Threading.Tasks.Task{OsuSharp.Endpoints.Multiplayer}
      description: "\n<xref href=\"OsuSharp.Endpoints.Multiplayer\" data-throw-if-not-resolved=\"false\"></xref>\n"
    content.vb: Public Function GetMatchAsync(matchid As Long, cancellationToken As CancellationToken = Nothing) As Task(Of Multiplayer)
  overload: OsuSharp.OsuApi.GetMatchAsync*
  implements:
  - OsuSharp.Interfaces.IOsuApi.GetMatchAsync(System.Int64,System.Threading.CancellationToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: OsuSharp.OsuApi.GetReplayByUsername(System.Int64,System.String,OsuSharp.Misc.GameMode)
  commentId: M:OsuSharp.OsuApi.GetReplayByUsername(System.Int64,System.String,OsuSharp.Misc.GameMode)
  id: GetReplayByUsername(System.Int64,System.String,OsuSharp.Misc.GameMode)
  parent: OsuSharp.OsuApi
  langs:
  - csharp
  - vb
  name: GetReplayByUsername(Int64, String, GameMode)
  nameWithType: OsuApi.GetReplayByUsername(Int64, String, GameMode)
  fullName: OsuSharp.OsuApi.GetReplayByUsername(System.Int64, System.String, OsuSharp.Misc.GameMode)
  type: Method
  source:
    id: GetReplayByUsername
    path: ''
    startLine: 1220
  assemblies:
  - cs.temp.dll
  namespace: OsuSharp
  summary: "\nMethod that returns a <xref href=\"OsuSharp.Endpoints.Replay\" data-throw-if-not-resolved=\"false\"></xref> by the given beatmapid and username.\n"
  example: []
  syntax:
    content: public Replay GetReplayByUsername(long beatmapid, string username, GameMode gameMode = GameMode.Standard)
    parameters:
    - id: beatmapid
      type: System.Int64
      description: Id of the beatmap. Must be the id of a difficulty.
    - id: username
      type: System.String
      description: Username of the user.
    - id: gameMode
      type: OsuSharp.Misc.GameMode
      description: Gamemode of the play. Standard, Taiko, Catch or Mania.
    return:
      type: OsuSharp.Endpoints.Replay
      description: "\n<xref href=\"OsuSharp.Endpoints.Replay\" data-throw-if-not-resolved=\"false\"></xref>\n"
    content.vb: Public Function GetReplayByUsername(beatmapid As Long, username As String, gameMode As GameMode = GameMode.Standard) As Replay
  overload: OsuSharp.OsuApi.GetReplayByUsername*
  implements:
  - OsuSharp.Interfaces.IOsuApi.GetReplayByUsername(System.Int64,System.String,OsuSharp.Misc.GameMode)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: OsuSharp.OsuApi.GetReplayByUsernameAsync(System.Int64,System.String,OsuSharp.Misc.GameMode,System.Threading.CancellationToken)
  commentId: M:OsuSharp.OsuApi.GetReplayByUsernameAsync(System.Int64,System.String,OsuSharp.Misc.GameMode,System.Threading.CancellationToken)
  id: GetReplayByUsernameAsync(System.Int64,System.String,OsuSharp.Misc.GameMode,System.Threading.CancellationToken)
  parent: OsuSharp.OsuApi
  langs:
  - csharp
  - vb
  name: GetReplayByUsernameAsync(Int64, String, GameMode, CancellationToken)
  nameWithType: OsuApi.GetReplayByUsernameAsync(Int64, String, GameMode, CancellationToken)
  fullName: OsuSharp.OsuApi.GetReplayByUsernameAsync(System.Int64, System.String, OsuSharp.Misc.GameMode, System.Threading.CancellationToken)
  type: Method
  source:
    id: GetReplayByUsernameAsync
    path: ''
    startLine: 1247
  assemblies:
  - cs.temp.dll
  namespace: OsuSharp
  summary: "\nMethod that returns a <xref href=\"OsuSharp.Endpoints.Replay\" data-throw-if-not-resolved=\"false\"></xref> by the given beatmapid and username.\n"
  example: []
  syntax:
    content: public Task<Replay> GetReplayByUsernameAsync(long beatmapid, string username, GameMode gameMode = GameMode.Standard, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: beatmapid
      type: System.Int64
      description: Id of the beatmap. Must be the id of a difficulty.
    - id: username
      type: System.String
      description: Username of the user.
    - id: gameMode
      type: OsuSharp.Misc.GameMode
      description: Gamemode of the play. Standard, Taiko, Catch or Mania.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: Cancellation token
    return:
      type: System.Threading.Tasks.Task{OsuSharp.Endpoints.Replay}
      description: "\n<xref href=\"OsuSharp.Endpoints.Replay\" data-throw-if-not-resolved=\"false\"></xref>\n"
    content.vb: Public Function GetReplayByUsernameAsync(beatmapid As Long, username As String, gameMode As GameMode = GameMode.Standard, cancellationToken As CancellationToken = Nothing) As Task(Of Replay)
  overload: OsuSharp.OsuApi.GetReplayByUsernameAsync*
  implements:
  - OsuSharp.Interfaces.IOsuApi.GetReplayByUsernameAsync(System.Int64,System.String,OsuSharp.Misc.GameMode,System.Threading.CancellationToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: OsuSharp.OsuApi.GetReplayByUserid(System.Int64,System.Int64,OsuSharp.Misc.GameMode)
  commentId: M:OsuSharp.OsuApi.GetReplayByUserid(System.Int64,System.Int64,OsuSharp.Misc.GameMode)
  id: GetReplayByUserid(System.Int64,System.Int64,OsuSharp.Misc.GameMode)
  parent: OsuSharp.OsuApi
  langs:
  - csharp
  - vb
  name: GetReplayByUserid(Int64, Int64, GameMode)
  nameWithType: OsuApi.GetReplayByUserid(Int64, Int64, GameMode)
  fullName: OsuSharp.OsuApi.GetReplayByUserid(System.Int64, System.Int64, OsuSharp.Misc.GameMode)
  type: Method
  source:
    id: GetReplayByUserid
    path: ''
    startLine: 1275
  assemblies:
  - cs.temp.dll
  namespace: OsuSharp
  summary: "\nMethod that returns a <xref href=\"OsuSharp.Endpoints.Replay\" data-throw-if-not-resolved=\"false\"></xref> by the given beatmapid and userid.\n"
  example: []
  syntax:
    content: public Replay GetReplayByUserid(long beatmapid, long userid, GameMode gameMode = GameMode.Standard)
    parameters:
    - id: beatmapid
      type: System.Int64
      description: Id of the beatmap. Must be the id of a difficulty.
    - id: userid
      type: System.Int64
      description: Id of the user.
    - id: gameMode
      type: OsuSharp.Misc.GameMode
      description: Gamemode of the play. Standard, Taiko, Catch or Mania.
    return:
      type: OsuSharp.Endpoints.Replay
      description: "\n<xref href=\"OsuSharp.Endpoints.Replay\" data-throw-if-not-resolved=\"false\"></xref>\n"
    content.vb: Public Function GetReplayByUserid(beatmapid As Long, userid As Long, gameMode As GameMode = GameMode.Standard) As Replay
  overload: OsuSharp.OsuApi.GetReplayByUserid*
  implements:
  - OsuSharp.Interfaces.IOsuApi.GetReplayByUserid(System.Int64,System.Int64,OsuSharp.Misc.GameMode)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: OsuSharp.OsuApi.GetReplayByUseridAsync(System.Int64,System.Int64,OsuSharp.Misc.GameMode,System.Threading.CancellationToken)
  commentId: M:OsuSharp.OsuApi.GetReplayByUseridAsync(System.Int64,System.Int64,OsuSharp.Misc.GameMode,System.Threading.CancellationToken)
  id: GetReplayByUseridAsync(System.Int64,System.Int64,OsuSharp.Misc.GameMode,System.Threading.CancellationToken)
  parent: OsuSharp.OsuApi
  langs:
  - csharp
  - vb
  name: GetReplayByUseridAsync(Int64, Int64, GameMode, CancellationToken)
  nameWithType: OsuApi.GetReplayByUseridAsync(Int64, Int64, GameMode, CancellationToken)
  fullName: OsuSharp.OsuApi.GetReplayByUseridAsync(System.Int64, System.Int64, OsuSharp.Misc.GameMode, System.Threading.CancellationToken)
  type: Method
  source:
    id: GetReplayByUseridAsync
    path: ''
    startLine: 1299
  assemblies:
  - cs.temp.dll
  namespace: OsuSharp
  summary: "\nMethod that returns a <xref href=\"OsuSharp.Endpoints.Replay\" data-throw-if-not-resolved=\"false\"></xref> by the given beatmapid and userid.\n"
  example: []
  syntax:
    content: public Task<Replay> GetReplayByUseridAsync(long beatmapid, long userid, GameMode gameMode = GameMode.Standard, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: beatmapid
      type: System.Int64
      description: Id of the beatmap. Must be the id of a difficulty.
    - id: userid
      type: System.Int64
      description: Id of the user.
    - id: gameMode
      type: OsuSharp.Misc.GameMode
      description: Gamemode of the play. Standard, Taiko, Catch or Mania.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: Cancellation token
    return:
      type: System.Threading.Tasks.Task{OsuSharp.Endpoints.Replay}
      description: "\n<xref href=\"OsuSharp.Endpoints.Replay\" data-throw-if-not-resolved=\"false\"></xref>\n"
    content.vb: Public Function GetReplayByUseridAsync(beatmapid As Long, userid As Long, gameMode As GameMode = GameMode.Standard, cancellationToken As CancellationToken = Nothing) As Task(Of Replay)
  overload: OsuSharp.OsuApi.GetReplayByUseridAsync*
  implements:
  - OsuSharp.Interfaces.IOsuApi.GetReplayByUseridAsync(System.Int64,System.Int64,OsuSharp.Misc.GameMode,System.Threading.CancellationToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: OsuSharp
  commentId: N:OsuSharp
  name: OsuSharp
  nameWithType: OsuSharp
  fullName: OsuSharp
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: OsuSharp.Interfaces.IOsuApi
  commentId: T:OsuSharp.Interfaces.IOsuApi
  parent: OsuSharp.Interfaces
  name: IOsuApi
  nameWithType: IOsuApi
  fullName: OsuSharp.Interfaces.IOsuApi
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: OsuSharp.Interfaces
  commentId: N:OsuSharp.Interfaces
  name: OsuSharp.Interfaces
  nameWithType: OsuSharp.Interfaces
  fullName: OsuSharp.Interfaces
- uid: OsuSharp.OsuApi.ApiKey*
  commentId: Overload:OsuSharp.OsuApi.ApiKey
  name: ApiKey
  nameWithType: OsuApi.ApiKey
  fullName: OsuSharp.OsuApi.ApiKey
- uid: OsuSharp.Interfaces.IOsuApi.ApiKey
  commentId: P:OsuSharp.Interfaces.IOsuApi.ApiKey
  parent: OsuSharp.Interfaces.IOsuApi
  name: ApiKey
  nameWithType: IOsuApi.ApiKey
  fullName: OsuSharp.Interfaces.IOsuApi.ApiKey
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: OsuSharp.OsuApi.ModsSeparator*
  commentId: Overload:OsuSharp.OsuApi.ModsSeparator
  name: ModsSeparator
  nameWithType: OsuApi.ModsSeparator
  fullName: OsuSharp.OsuApi.ModsSeparator
- uid: OsuSharp.Interfaces.IOsuApi.ModsSeparator
  commentId: P:OsuSharp.Interfaces.IOsuApi.ModsSeparator
  parent: OsuSharp.Interfaces.IOsuApi
  name: ModsSeparator
  nameWithType: IOsuApi.ModsSeparator
  fullName: OsuSharp.Interfaces.IOsuApi.ModsSeparator
- uid: OsuSharp.OsuApi.Logger*
  commentId: Overload:OsuSharp.OsuApi.Logger
  name: Logger
  nameWithType: OsuApi.Logger
  fullName: OsuSharp.OsuApi.Logger
- uid: OsuSharp.Interfaces.IOsuApi.Logger
  commentId: P:OsuSharp.Interfaces.IOsuApi.Logger
  parent: OsuSharp.Interfaces.IOsuApi
  name: Logger
  nameWithType: IOsuApi.Logger
  fullName: OsuSharp.Interfaces.IOsuApi.Logger
- uid: OsuSharp.Interfaces.IOsuSharpLogger
  commentId: T:OsuSharp.Interfaces.IOsuSharpLogger
  parent: OsuSharp.Interfaces
  name: IOsuSharpLogger
  nameWithType: IOsuSharpLogger
  fullName: OsuSharp.Interfaces.IOsuSharpLogger
- uid: OsuSharp.OsuApi.#ctor*
  commentId: Overload:OsuSharp.OsuApi.#ctor
  name: OsuApi
  nameWithType: OsuApi.OsuApi
  fullName: OsuSharp.OsuApi.OsuApi
- uid: OsuSharp.Interfaces.IOsuSharpConfiguration
  commentId: T:OsuSharp.Interfaces.IOsuSharpConfiguration
  parent: OsuSharp.Interfaces
  name: IOsuSharpConfiguration
  nameWithType: IOsuSharpConfiguration
  fullName: OsuSharp.Interfaces.IOsuSharpConfiguration
- uid: OsuSharp.OsuApi.Default*
  commentId: Overload:OsuSharp.OsuApi.Default
  name: Default
  nameWithType: OsuApi.Default
  fullName: OsuSharp.OsuApi.Default
- uid: OsuSharp.OsuApi
  commentId: T:OsuSharp.OsuApi
  parent: OsuSharp
  name: OsuApi
  nameWithType: OsuApi
  fullName: OsuSharp.OsuApi
- uid: OsuSharp.Endpoints.Beatmap
  commentId: T:OsuSharp.Endpoints.Beatmap
  parent: OsuSharp.Endpoints
  name: Beatmap
  nameWithType: Beatmap
  fullName: OsuSharp.Endpoints.Beatmap
- uid: OsuSharp.OsuApi.GetBeatmap*
  commentId: Overload:OsuSharp.OsuApi.GetBeatmap
  name: GetBeatmap
  nameWithType: OsuApi.GetBeatmap
  fullName: OsuSharp.OsuApi.GetBeatmap
- uid: OsuSharp.Interfaces.IOsuApi.GetBeatmap(System.Int64,OsuSharp.Misc.BeatmapType,OsuSharp.Misc.GameMode)
  commentId: M:OsuSharp.Interfaces.IOsuApi.GetBeatmap(System.Int64,OsuSharp.Misc.BeatmapType,OsuSharp.Misc.GameMode)
  parent: OsuSharp.Interfaces.IOsuApi
  isExternal: true
  name: GetBeatmap(Int64, BeatmapType, GameMode)
  nameWithType: IOsuApi.GetBeatmap(Int64, BeatmapType, GameMode)
  fullName: OsuSharp.Interfaces.IOsuApi.GetBeatmap(System.Int64, OsuSharp.Misc.BeatmapType, OsuSharp.Misc.GameMode)
  spec.csharp:
  - uid: OsuSharp.Interfaces.IOsuApi.GetBeatmap(System.Int64,OsuSharp.Misc.BeatmapType,OsuSharp.Misc.GameMode)
    name: GetBeatmap
    nameWithType: IOsuApi.GetBeatmap
    fullName: OsuSharp.Interfaces.IOsuApi.GetBeatmap
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: OsuSharp.Misc.BeatmapType
    name: BeatmapType
    nameWithType: BeatmapType
    fullName: OsuSharp.Misc.BeatmapType
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: OsuSharp.Misc.GameMode
    name: GameMode
    nameWithType: GameMode
    fullName: OsuSharp.Misc.GameMode
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OsuSharp.Interfaces.IOsuApi.GetBeatmap(System.Int64,OsuSharp.Misc.BeatmapType,OsuSharp.Misc.GameMode)
    name: GetBeatmap
    nameWithType: IOsuApi.GetBeatmap
    fullName: OsuSharp.Interfaces.IOsuApi.GetBeatmap
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: OsuSharp.Misc.BeatmapType
    name: BeatmapType
    nameWithType: BeatmapType
    fullName: OsuSharp.Misc.BeatmapType
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: OsuSharp.Misc.GameMode
    name: GameMode
    nameWithType: GameMode
    fullName: OsuSharp.Misc.GameMode
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: OsuSharp.Misc.BeatmapType
  commentId: T:OsuSharp.Misc.BeatmapType
  parent: OsuSharp.Misc
  name: BeatmapType
  nameWithType: BeatmapType
  fullName: OsuSharp.Misc.BeatmapType
- uid: OsuSharp.Misc.GameMode
  commentId: T:OsuSharp.Misc.GameMode
  parent: OsuSharp.Misc
  name: GameMode
  nameWithType: GameMode
  fullName: OsuSharp.Misc.GameMode
- uid: OsuSharp.Endpoints
  commentId: N:OsuSharp.Endpoints
  name: OsuSharp.Endpoints
  nameWithType: OsuSharp.Endpoints
  fullName: OsuSharp.Endpoints
- uid: OsuSharp.Misc
  commentId: N:OsuSharp.Misc
  name: OsuSharp.Misc
  nameWithType: OsuSharp.Misc
  fullName: OsuSharp.Misc
- uid: OsuSharp.OsuApi.GetBeatmapAsync*
  commentId: Overload:OsuSharp.OsuApi.GetBeatmapAsync
  name: GetBeatmapAsync
  nameWithType: OsuApi.GetBeatmapAsync
  fullName: OsuSharp.OsuApi.GetBeatmapAsync
- uid: OsuSharp.Interfaces.IOsuApi.GetBeatmapAsync(System.Int64,OsuSharp.Misc.BeatmapType,OsuSharp.Misc.GameMode,System.Threading.CancellationToken)
  commentId: M:OsuSharp.Interfaces.IOsuApi.GetBeatmapAsync(System.Int64,OsuSharp.Misc.BeatmapType,OsuSharp.Misc.GameMode,System.Threading.CancellationToken)
  parent: OsuSharp.Interfaces.IOsuApi
  isExternal: true
  name: GetBeatmapAsync(Int64, BeatmapType, GameMode, CancellationToken)
  nameWithType: IOsuApi.GetBeatmapAsync(Int64, BeatmapType, GameMode, CancellationToken)
  fullName: OsuSharp.Interfaces.IOsuApi.GetBeatmapAsync(System.Int64, OsuSharp.Misc.BeatmapType, OsuSharp.Misc.GameMode, System.Threading.CancellationToken)
  spec.csharp:
  - uid: OsuSharp.Interfaces.IOsuApi.GetBeatmapAsync(System.Int64,OsuSharp.Misc.BeatmapType,OsuSharp.Misc.GameMode,System.Threading.CancellationToken)
    name: GetBeatmapAsync
    nameWithType: IOsuApi.GetBeatmapAsync
    fullName: OsuSharp.Interfaces.IOsuApi.GetBeatmapAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: OsuSharp.Misc.BeatmapType
    name: BeatmapType
    nameWithType: BeatmapType
    fullName: OsuSharp.Misc.BeatmapType
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: OsuSharp.Misc.GameMode
    name: GameMode
    nameWithType: GameMode
    fullName: OsuSharp.Misc.GameMode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OsuSharp.Interfaces.IOsuApi.GetBeatmapAsync(System.Int64,OsuSharp.Misc.BeatmapType,OsuSharp.Misc.GameMode,System.Threading.CancellationToken)
    name: GetBeatmapAsync
    nameWithType: IOsuApi.GetBeatmapAsync
    fullName: OsuSharp.Interfaces.IOsuApi.GetBeatmapAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: OsuSharp.Misc.BeatmapType
    name: BeatmapType
    nameWithType: BeatmapType
    fullName: OsuSharp.Misc.BeatmapType
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: OsuSharp.Misc.GameMode
    name: GameMode
    nameWithType: GameMode
    fullName: OsuSharp.Misc.GameMode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task{OsuSharp.Endpoints.Beatmap}
  commentId: T:System.Threading.Tasks.Task{OsuSharp.Endpoints.Beatmap}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<Beatmap>
  nameWithType: Task<Beatmap>
  fullName: System.Threading.Tasks.Task<OsuSharp.Endpoints.Beatmap>
  nameWithType.vb: Task(Of Beatmap)
  fullName.vb: System.Threading.Tasks.Task(Of OsuSharp.Endpoints.Beatmap)
  name.vb: Task(Of Beatmap)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: OsuSharp.Endpoints.Beatmap
    name: Beatmap
    nameWithType: Beatmap
    fullName: OsuSharp.Endpoints.Beatmap
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: OsuSharp.Endpoints.Beatmap
    name: Beatmap
    nameWithType: Beatmap
    fullName: OsuSharp.Endpoints.Beatmap
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: true
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: OsuSharp.OsuApi.GetBeatmapsByCreator*
  commentId: Overload:OsuSharp.OsuApi.GetBeatmapsByCreator
  name: GetBeatmapsByCreator
  nameWithType: OsuApi.GetBeatmapsByCreator
  fullName: OsuSharp.OsuApi.GetBeatmapsByCreator
- uid: OsuSharp.Interfaces.IOsuApi.GetBeatmapsByCreator(System.String,OsuSharp.Misc.GameMode,System.Int32)
  commentId: M:OsuSharp.Interfaces.IOsuApi.GetBeatmapsByCreator(System.String,OsuSharp.Misc.GameMode,System.Int32)
  parent: OsuSharp.Interfaces.IOsuApi
  isExternal: true
  name: GetBeatmapsByCreator(String, GameMode, Int32)
  nameWithType: IOsuApi.GetBeatmapsByCreator(String, GameMode, Int32)
  fullName: OsuSharp.Interfaces.IOsuApi.GetBeatmapsByCreator(System.String, OsuSharp.Misc.GameMode, System.Int32)
  spec.csharp:
  - uid: OsuSharp.Interfaces.IOsuApi.GetBeatmapsByCreator(System.String,OsuSharp.Misc.GameMode,System.Int32)
    name: GetBeatmapsByCreator
    nameWithType: IOsuApi.GetBeatmapsByCreator
    fullName: OsuSharp.Interfaces.IOsuApi.GetBeatmapsByCreator
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: OsuSharp.Misc.GameMode
    name: GameMode
    nameWithType: GameMode
    fullName: OsuSharp.Misc.GameMode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OsuSharp.Interfaces.IOsuApi.GetBeatmapsByCreator(System.String,OsuSharp.Misc.GameMode,System.Int32)
    name: GetBeatmapsByCreator
    nameWithType: IOsuApi.GetBeatmapsByCreator
    fullName: OsuSharp.Interfaces.IOsuApi.GetBeatmapsByCreator
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: OsuSharp.Misc.GameMode
    name: GameMode
    nameWithType: GameMode
    fullName: OsuSharp.Misc.GameMode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Collections.Generic.List{OsuSharp.Endpoints.Beatmap}
  commentId: T:System.Collections.Generic.List{OsuSharp.Endpoints.Beatmap}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<Beatmap>
  nameWithType: List<Beatmap>
  fullName: System.Collections.Generic.List<OsuSharp.Endpoints.Beatmap>
  nameWithType.vb: List(Of Beatmap)
  fullName.vb: System.Collections.Generic.List(Of OsuSharp.Endpoints.Beatmap)
  name.vb: List(Of Beatmap)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: OsuSharp.Endpoints.Beatmap
    name: Beatmap
    nameWithType: Beatmap
    fullName: OsuSharp.Endpoints.Beatmap
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: OsuSharp.Endpoints.Beatmap
    name: Beatmap
    nameWithType: Beatmap
    fullName: OsuSharp.Endpoints.Beatmap
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: OsuSharp.OsuApi.GetBeatmapsByCreatorAsync*
  commentId: Overload:OsuSharp.OsuApi.GetBeatmapsByCreatorAsync
  name: GetBeatmapsByCreatorAsync
  nameWithType: OsuApi.GetBeatmapsByCreatorAsync
  fullName: OsuSharp.OsuApi.GetBeatmapsByCreatorAsync
- uid: OsuSharp.Interfaces.IOsuApi.GetBeatmapsByCreatorAsync(System.String,OsuSharp.Misc.GameMode,System.Int32,System.Threading.CancellationToken)
  commentId: M:OsuSharp.Interfaces.IOsuApi.GetBeatmapsByCreatorAsync(System.String,OsuSharp.Misc.GameMode,System.Int32,System.Threading.CancellationToken)
  parent: OsuSharp.Interfaces.IOsuApi
  isExternal: true
  name: GetBeatmapsByCreatorAsync(String, GameMode, Int32, CancellationToken)
  nameWithType: IOsuApi.GetBeatmapsByCreatorAsync(String, GameMode, Int32, CancellationToken)
  fullName: OsuSharp.Interfaces.IOsuApi.GetBeatmapsByCreatorAsync(System.String, OsuSharp.Misc.GameMode, System.Int32, System.Threading.CancellationToken)
  spec.csharp:
  - uid: OsuSharp.Interfaces.IOsuApi.GetBeatmapsByCreatorAsync(System.String,OsuSharp.Misc.GameMode,System.Int32,System.Threading.CancellationToken)
    name: GetBeatmapsByCreatorAsync
    nameWithType: IOsuApi.GetBeatmapsByCreatorAsync
    fullName: OsuSharp.Interfaces.IOsuApi.GetBeatmapsByCreatorAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: OsuSharp.Misc.GameMode
    name: GameMode
    nameWithType: GameMode
    fullName: OsuSharp.Misc.GameMode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OsuSharp.Interfaces.IOsuApi.GetBeatmapsByCreatorAsync(System.String,OsuSharp.Misc.GameMode,System.Int32,System.Threading.CancellationToken)
    name: GetBeatmapsByCreatorAsync
    nameWithType: IOsuApi.GetBeatmapsByCreatorAsync
    fullName: OsuSharp.Interfaces.IOsuApi.GetBeatmapsByCreatorAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: OsuSharp.Misc.GameMode
    name: GameMode
    nameWithType: GameMode
    fullName: OsuSharp.Misc.GameMode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task{System.Collections.Generic.List{OsuSharp.Endpoints.Beatmap}}
  commentId: T:System.Threading.Tasks.Task{System.Collections.Generic.List{OsuSharp.Endpoints.Beatmap}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<List<Beatmap>>
  nameWithType: Task<List<Beatmap>>
  fullName: System.Threading.Tasks.Task<System.Collections.Generic.List<OsuSharp.Endpoints.Beatmap>>
  nameWithType.vb: Task(Of List(Of Beatmap))
  fullName.vb: System.Threading.Tasks.Task(Of System.Collections.Generic.List(Of OsuSharp.Endpoints.Beatmap))
  name.vb: Task(Of List(Of Beatmap))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: OsuSharp.Endpoints.Beatmap
    name: Beatmap
    nameWithType: Beatmap
    fullName: OsuSharp.Endpoints.Beatmap
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: OsuSharp.Endpoints.Beatmap
    name: Beatmap
    nameWithType: Beatmap
    fullName: OsuSharp.Endpoints.Beatmap
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: OsuSharp.OsuApi.GetBeatmaps*
  commentId: Overload:OsuSharp.OsuApi.GetBeatmaps
  name: GetBeatmaps
  nameWithType: OsuApi.GetBeatmaps
  fullName: OsuSharp.OsuApi.GetBeatmaps
- uid: OsuSharp.Interfaces.IOsuApi.GetBeatmaps(System.Int64,OsuSharp.Misc.BeatmapType,OsuSharp.Misc.GameMode,System.Int32)
  commentId: M:OsuSharp.Interfaces.IOsuApi.GetBeatmaps(System.Int64,OsuSharp.Misc.BeatmapType,OsuSharp.Misc.GameMode,System.Int32)
  parent: OsuSharp.Interfaces.IOsuApi
  isExternal: true
  name: GetBeatmaps(Int64, BeatmapType, GameMode, Int32)
  nameWithType: IOsuApi.GetBeatmaps(Int64, BeatmapType, GameMode, Int32)
  fullName: OsuSharp.Interfaces.IOsuApi.GetBeatmaps(System.Int64, OsuSharp.Misc.BeatmapType, OsuSharp.Misc.GameMode, System.Int32)
  spec.csharp:
  - uid: OsuSharp.Interfaces.IOsuApi.GetBeatmaps(System.Int64,OsuSharp.Misc.BeatmapType,OsuSharp.Misc.GameMode,System.Int32)
    name: GetBeatmaps
    nameWithType: IOsuApi.GetBeatmaps
    fullName: OsuSharp.Interfaces.IOsuApi.GetBeatmaps
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: OsuSharp.Misc.BeatmapType
    name: BeatmapType
    nameWithType: BeatmapType
    fullName: OsuSharp.Misc.BeatmapType
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: OsuSharp.Misc.GameMode
    name: GameMode
    nameWithType: GameMode
    fullName: OsuSharp.Misc.GameMode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OsuSharp.Interfaces.IOsuApi.GetBeatmaps(System.Int64,OsuSharp.Misc.BeatmapType,OsuSharp.Misc.GameMode,System.Int32)
    name: GetBeatmaps
    nameWithType: IOsuApi.GetBeatmaps
    fullName: OsuSharp.Interfaces.IOsuApi.GetBeatmaps
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: OsuSharp.Misc.BeatmapType
    name: BeatmapType
    nameWithType: BeatmapType
    fullName: OsuSharp.Misc.BeatmapType
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: OsuSharp.Misc.GameMode
    name: GameMode
    nameWithType: GameMode
    fullName: OsuSharp.Misc.GameMode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: OsuSharp.OsuApi.GetBeatmapsAsync*
  commentId: Overload:OsuSharp.OsuApi.GetBeatmapsAsync
  name: GetBeatmapsAsync
  nameWithType: OsuApi.GetBeatmapsAsync
  fullName: OsuSharp.OsuApi.GetBeatmapsAsync
- uid: OsuSharp.Interfaces.IOsuApi.GetBeatmapsAsync(System.Int64,OsuSharp.Misc.BeatmapType,OsuSharp.Misc.GameMode,System.Int32,System.Threading.CancellationToken)
  commentId: M:OsuSharp.Interfaces.IOsuApi.GetBeatmapsAsync(System.Int64,OsuSharp.Misc.BeatmapType,OsuSharp.Misc.GameMode,System.Int32,System.Threading.CancellationToken)
  parent: OsuSharp.Interfaces.IOsuApi
  isExternal: true
  name: GetBeatmapsAsync(Int64, BeatmapType, GameMode, Int32, CancellationToken)
  nameWithType: IOsuApi.GetBeatmapsAsync(Int64, BeatmapType, GameMode, Int32, CancellationToken)
  fullName: OsuSharp.Interfaces.IOsuApi.GetBeatmapsAsync(System.Int64, OsuSharp.Misc.BeatmapType, OsuSharp.Misc.GameMode, System.Int32, System.Threading.CancellationToken)
  spec.csharp:
  - uid: OsuSharp.Interfaces.IOsuApi.GetBeatmapsAsync(System.Int64,OsuSharp.Misc.BeatmapType,OsuSharp.Misc.GameMode,System.Int32,System.Threading.CancellationToken)
    name: GetBeatmapsAsync
    nameWithType: IOsuApi.GetBeatmapsAsync
    fullName: OsuSharp.Interfaces.IOsuApi.GetBeatmapsAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: OsuSharp.Misc.BeatmapType
    name: BeatmapType
    nameWithType: BeatmapType
    fullName: OsuSharp.Misc.BeatmapType
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: OsuSharp.Misc.GameMode
    name: GameMode
    nameWithType: GameMode
    fullName: OsuSharp.Misc.GameMode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OsuSharp.Interfaces.IOsuApi.GetBeatmapsAsync(System.Int64,OsuSharp.Misc.BeatmapType,OsuSharp.Misc.GameMode,System.Int32,System.Threading.CancellationToken)
    name: GetBeatmapsAsync
    nameWithType: IOsuApi.GetBeatmapsAsync
    fullName: OsuSharp.Interfaces.IOsuApi.GetBeatmapsAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: OsuSharp.Misc.BeatmapType
    name: BeatmapType
    nameWithType: BeatmapType
    fullName: OsuSharp.Misc.BeatmapType
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: OsuSharp.Misc.GameMode
    name: GameMode
    nameWithType: GameMode
    fullName: OsuSharp.Misc.GameMode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: OsuSharp.OsuApi.GetLastBeatmaps*
  commentId: Overload:OsuSharp.OsuApi.GetLastBeatmaps
  name: GetLastBeatmaps
  nameWithType: OsuApi.GetLastBeatmaps
  fullName: OsuSharp.OsuApi.GetLastBeatmaps
- uid: OsuSharp.Interfaces.IOsuApi.GetLastBeatmaps(System.Int32)
  commentId: M:OsuSharp.Interfaces.IOsuApi.GetLastBeatmaps(System.Int32)
  parent: OsuSharp.Interfaces.IOsuApi
  isExternal: true
  name: GetLastBeatmaps(Int32)
  nameWithType: IOsuApi.GetLastBeatmaps(Int32)
  fullName: OsuSharp.Interfaces.IOsuApi.GetLastBeatmaps(System.Int32)
  spec.csharp:
  - uid: OsuSharp.Interfaces.IOsuApi.GetLastBeatmaps(System.Int32)
    name: GetLastBeatmaps
    nameWithType: IOsuApi.GetLastBeatmaps
    fullName: OsuSharp.Interfaces.IOsuApi.GetLastBeatmaps
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OsuSharp.Interfaces.IOsuApi.GetLastBeatmaps(System.Int32)
    name: GetLastBeatmaps
    nameWithType: IOsuApi.GetLastBeatmaps
    fullName: OsuSharp.Interfaces.IOsuApi.GetLastBeatmaps
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: OsuSharp.OsuApi.GetLastBeatmapsAsync*
  commentId: Overload:OsuSharp.OsuApi.GetLastBeatmapsAsync
  name: GetLastBeatmapsAsync
  nameWithType: OsuApi.GetLastBeatmapsAsync
  fullName: OsuSharp.OsuApi.GetLastBeatmapsAsync
- uid: OsuSharp.Interfaces.IOsuApi.GetLastBeatmapsAsync(System.Int32,System.Threading.CancellationToken)
  commentId: M:OsuSharp.Interfaces.IOsuApi.GetLastBeatmapsAsync(System.Int32,System.Threading.CancellationToken)
  parent: OsuSharp.Interfaces.IOsuApi
  isExternal: true
  name: GetLastBeatmapsAsync(Int32, CancellationToken)
  nameWithType: IOsuApi.GetLastBeatmapsAsync(Int32, CancellationToken)
  fullName: OsuSharp.Interfaces.IOsuApi.GetLastBeatmapsAsync(System.Int32, System.Threading.CancellationToken)
  spec.csharp:
  - uid: OsuSharp.Interfaces.IOsuApi.GetLastBeatmapsAsync(System.Int32,System.Threading.CancellationToken)
    name: GetLastBeatmapsAsync
    nameWithType: IOsuApi.GetLastBeatmapsAsync
    fullName: OsuSharp.Interfaces.IOsuApi.GetLastBeatmapsAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OsuSharp.Interfaces.IOsuApi.GetLastBeatmapsAsync(System.Int32,System.Threading.CancellationToken)
    name: GetLastBeatmapsAsync
    nameWithType: IOsuApi.GetLastBeatmapsAsync
    fullName: OsuSharp.Interfaces.IOsuApi.GetLastBeatmapsAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: OsuSharp.Endpoints.User
  commentId: T:OsuSharp.Endpoints.User
  parent: OsuSharp.Endpoints
  name: User
  nameWithType: User
  fullName: OsuSharp.Endpoints.User
- uid: OsuSharp.OsuApi.GetUserByName*
  commentId: Overload:OsuSharp.OsuApi.GetUserByName
  name: GetUserByName
  nameWithType: OsuApi.GetUserByName
  fullName: OsuSharp.OsuApi.GetUserByName
- uid: OsuSharp.Interfaces.IOsuApi.GetUserByName(System.String,OsuSharp.Misc.GameMode)
  commentId: M:OsuSharp.Interfaces.IOsuApi.GetUserByName(System.String,OsuSharp.Misc.GameMode)
  parent: OsuSharp.Interfaces.IOsuApi
  isExternal: true
  name: GetUserByName(String, GameMode)
  nameWithType: IOsuApi.GetUserByName(String, GameMode)
  fullName: OsuSharp.Interfaces.IOsuApi.GetUserByName(System.String, OsuSharp.Misc.GameMode)
  spec.csharp:
  - uid: OsuSharp.Interfaces.IOsuApi.GetUserByName(System.String,OsuSharp.Misc.GameMode)
    name: GetUserByName
    nameWithType: IOsuApi.GetUserByName
    fullName: OsuSharp.Interfaces.IOsuApi.GetUserByName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: OsuSharp.Misc.GameMode
    name: GameMode
    nameWithType: GameMode
    fullName: OsuSharp.Misc.GameMode
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OsuSharp.Interfaces.IOsuApi.GetUserByName(System.String,OsuSharp.Misc.GameMode)
    name: GetUserByName
    nameWithType: IOsuApi.GetUserByName
    fullName: OsuSharp.Interfaces.IOsuApi.GetUserByName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: OsuSharp.Misc.GameMode
    name: GameMode
    nameWithType: GameMode
    fullName: OsuSharp.Misc.GameMode
  - name: )
    nameWithType: )
    fullName: )
- uid: OsuSharp.OsuApi.GetUserByNameAsync*
  commentId: Overload:OsuSharp.OsuApi.GetUserByNameAsync
  name: GetUserByNameAsync
  nameWithType: OsuApi.GetUserByNameAsync
  fullName: OsuSharp.OsuApi.GetUserByNameAsync
- uid: OsuSharp.Interfaces.IOsuApi.GetUserByNameAsync(System.String,OsuSharp.Misc.GameMode,System.Threading.CancellationToken)
  commentId: M:OsuSharp.Interfaces.IOsuApi.GetUserByNameAsync(System.String,OsuSharp.Misc.GameMode,System.Threading.CancellationToken)
  parent: OsuSharp.Interfaces.IOsuApi
  isExternal: true
  name: GetUserByNameAsync(String, GameMode, CancellationToken)
  nameWithType: IOsuApi.GetUserByNameAsync(String, GameMode, CancellationToken)
  fullName: OsuSharp.Interfaces.IOsuApi.GetUserByNameAsync(System.String, OsuSharp.Misc.GameMode, System.Threading.CancellationToken)
  spec.csharp:
  - uid: OsuSharp.Interfaces.IOsuApi.GetUserByNameAsync(System.String,OsuSharp.Misc.GameMode,System.Threading.CancellationToken)
    name: GetUserByNameAsync
    nameWithType: IOsuApi.GetUserByNameAsync
    fullName: OsuSharp.Interfaces.IOsuApi.GetUserByNameAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: OsuSharp.Misc.GameMode
    name: GameMode
    nameWithType: GameMode
    fullName: OsuSharp.Misc.GameMode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OsuSharp.Interfaces.IOsuApi.GetUserByNameAsync(System.String,OsuSharp.Misc.GameMode,System.Threading.CancellationToken)
    name: GetUserByNameAsync
    nameWithType: IOsuApi.GetUserByNameAsync
    fullName: OsuSharp.Interfaces.IOsuApi.GetUserByNameAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: OsuSharp.Misc.GameMode
    name: GameMode
    nameWithType: GameMode
    fullName: OsuSharp.Misc.GameMode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task{OsuSharp.Endpoints.User}
  commentId: T:System.Threading.Tasks.Task{OsuSharp.Endpoints.User}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<User>
  nameWithType: Task<User>
  fullName: System.Threading.Tasks.Task<OsuSharp.Endpoints.User>
  nameWithType.vb: Task(Of User)
  fullName.vb: System.Threading.Tasks.Task(Of OsuSharp.Endpoints.User)
  name.vb: Task(Of User)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: OsuSharp.Endpoints.User
    name: User
    nameWithType: User
    fullName: OsuSharp.Endpoints.User
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: OsuSharp.Endpoints.User
    name: User
    nameWithType: User
    fullName: OsuSharp.Endpoints.User
  - name: )
    nameWithType: )
    fullName: )
- uid: OsuSharp.OsuApi.GetUserById*
  commentId: Overload:OsuSharp.OsuApi.GetUserById
  name: GetUserById
  nameWithType: OsuApi.GetUserById
  fullName: OsuSharp.OsuApi.GetUserById
- uid: OsuSharp.Interfaces.IOsuApi.GetUserById(System.Int64,OsuSharp.Misc.GameMode)
  commentId: M:OsuSharp.Interfaces.IOsuApi.GetUserById(System.Int64,OsuSharp.Misc.GameMode)
  parent: OsuSharp.Interfaces.IOsuApi
  isExternal: true
  name: GetUserById(Int64, GameMode)
  nameWithType: IOsuApi.GetUserById(Int64, GameMode)
  fullName: OsuSharp.Interfaces.IOsuApi.GetUserById(System.Int64, OsuSharp.Misc.GameMode)
  spec.csharp:
  - uid: OsuSharp.Interfaces.IOsuApi.GetUserById(System.Int64,OsuSharp.Misc.GameMode)
    name: GetUserById
    nameWithType: IOsuApi.GetUserById
    fullName: OsuSharp.Interfaces.IOsuApi.GetUserById
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: OsuSharp.Misc.GameMode
    name: GameMode
    nameWithType: GameMode
    fullName: OsuSharp.Misc.GameMode
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OsuSharp.Interfaces.IOsuApi.GetUserById(System.Int64,OsuSharp.Misc.GameMode)
    name: GetUserById
    nameWithType: IOsuApi.GetUserById
    fullName: OsuSharp.Interfaces.IOsuApi.GetUserById
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: OsuSharp.Misc.GameMode
    name: GameMode
    nameWithType: GameMode
    fullName: OsuSharp.Misc.GameMode
  - name: )
    nameWithType: )
    fullName: )
- uid: OsuSharp.OsuApi.GetUserByIdAsync*
  commentId: Overload:OsuSharp.OsuApi.GetUserByIdAsync
  name: GetUserByIdAsync
  nameWithType: OsuApi.GetUserByIdAsync
  fullName: OsuSharp.OsuApi.GetUserByIdAsync
- uid: OsuSharp.Interfaces.IOsuApi.GetUserByIdAsync(System.Int64,OsuSharp.Misc.GameMode,System.Threading.CancellationToken)
  commentId: M:OsuSharp.Interfaces.IOsuApi.GetUserByIdAsync(System.Int64,OsuSharp.Misc.GameMode,System.Threading.CancellationToken)
  parent: OsuSharp.Interfaces.IOsuApi
  isExternal: true
  name: GetUserByIdAsync(Int64, GameMode, CancellationToken)
  nameWithType: IOsuApi.GetUserByIdAsync(Int64, GameMode, CancellationToken)
  fullName: OsuSharp.Interfaces.IOsuApi.GetUserByIdAsync(System.Int64, OsuSharp.Misc.GameMode, System.Threading.CancellationToken)
  spec.csharp:
  - uid: OsuSharp.Interfaces.IOsuApi.GetUserByIdAsync(System.Int64,OsuSharp.Misc.GameMode,System.Threading.CancellationToken)
    name: GetUserByIdAsync
    nameWithType: IOsuApi.GetUserByIdAsync
    fullName: OsuSharp.Interfaces.IOsuApi.GetUserByIdAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: OsuSharp.Misc.GameMode
    name: GameMode
    nameWithType: GameMode
    fullName: OsuSharp.Misc.GameMode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OsuSharp.Interfaces.IOsuApi.GetUserByIdAsync(System.Int64,OsuSharp.Misc.GameMode,System.Threading.CancellationToken)
    name: GetUserByIdAsync
    nameWithType: IOsuApi.GetUserByIdAsync
    fullName: OsuSharp.Interfaces.IOsuApi.GetUserByIdAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: OsuSharp.Misc.GameMode
    name: GameMode
    nameWithType: GameMode
    fullName: OsuSharp.Misc.GameMode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: OsuSharp.Endpoints.Score
  commentId: T:OsuSharp.Endpoints.Score
  parent: OsuSharp.Endpoints
  name: Score
  nameWithType: Score
  fullName: OsuSharp.Endpoints.Score
- uid: OsuSharp.OsuApi.GetScoreByUsername*
  commentId: Overload:OsuSharp.OsuApi.GetScoreByUsername
  name: GetScoreByUsername
  nameWithType: OsuApi.GetScoreByUsername
  fullName: OsuSharp.OsuApi.GetScoreByUsername
- uid: OsuSharp.Interfaces.IOsuApi.GetScoreByUsername(System.Int64,System.String,OsuSharp.Misc.GameMode)
  commentId: M:OsuSharp.Interfaces.IOsuApi.GetScoreByUsername(System.Int64,System.String,OsuSharp.Misc.GameMode)
  parent: OsuSharp.Interfaces.IOsuApi
  isExternal: true
  name: GetScoreByUsername(Int64, String, GameMode)
  nameWithType: IOsuApi.GetScoreByUsername(Int64, String, GameMode)
  fullName: OsuSharp.Interfaces.IOsuApi.GetScoreByUsername(System.Int64, System.String, OsuSharp.Misc.GameMode)
  spec.csharp:
  - uid: OsuSharp.Interfaces.IOsuApi.GetScoreByUsername(System.Int64,System.String,OsuSharp.Misc.GameMode)
    name: GetScoreByUsername
    nameWithType: IOsuApi.GetScoreByUsername
    fullName: OsuSharp.Interfaces.IOsuApi.GetScoreByUsername
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: OsuSharp.Misc.GameMode
    name: GameMode
    nameWithType: GameMode
    fullName: OsuSharp.Misc.GameMode
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OsuSharp.Interfaces.IOsuApi.GetScoreByUsername(System.Int64,System.String,OsuSharp.Misc.GameMode)
    name: GetScoreByUsername
    nameWithType: IOsuApi.GetScoreByUsername
    fullName: OsuSharp.Interfaces.IOsuApi.GetScoreByUsername
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: OsuSharp.Misc.GameMode
    name: GameMode
    nameWithType: GameMode
    fullName: OsuSharp.Misc.GameMode
  - name: )
    nameWithType: )
    fullName: )
- uid: OsuSharp.OsuApi.GetScoreByUsernameAsync*
  commentId: Overload:OsuSharp.OsuApi.GetScoreByUsernameAsync
  name: GetScoreByUsernameAsync
  nameWithType: OsuApi.GetScoreByUsernameAsync
  fullName: OsuSharp.OsuApi.GetScoreByUsernameAsync
- uid: OsuSharp.Interfaces.IOsuApi.GetScoreByUsernameAsync(System.Int64,System.String,OsuSharp.Misc.GameMode,System.Threading.CancellationToken)
  commentId: M:OsuSharp.Interfaces.IOsuApi.GetScoreByUsernameAsync(System.Int64,System.String,OsuSharp.Misc.GameMode,System.Threading.CancellationToken)
  parent: OsuSharp.Interfaces.IOsuApi
  isExternal: true
  name: GetScoreByUsernameAsync(Int64, String, GameMode, CancellationToken)
  nameWithType: IOsuApi.GetScoreByUsernameAsync(Int64, String, GameMode, CancellationToken)
  fullName: OsuSharp.Interfaces.IOsuApi.GetScoreByUsernameAsync(System.Int64, System.String, OsuSharp.Misc.GameMode, System.Threading.CancellationToken)
  spec.csharp:
  - uid: OsuSharp.Interfaces.IOsuApi.GetScoreByUsernameAsync(System.Int64,System.String,OsuSharp.Misc.GameMode,System.Threading.CancellationToken)
    name: GetScoreByUsernameAsync
    nameWithType: IOsuApi.GetScoreByUsernameAsync
    fullName: OsuSharp.Interfaces.IOsuApi.GetScoreByUsernameAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: OsuSharp.Misc.GameMode
    name: GameMode
    nameWithType: GameMode
    fullName: OsuSharp.Misc.GameMode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OsuSharp.Interfaces.IOsuApi.GetScoreByUsernameAsync(System.Int64,System.String,OsuSharp.Misc.GameMode,System.Threading.CancellationToken)
    name: GetScoreByUsernameAsync
    nameWithType: IOsuApi.GetScoreByUsernameAsync
    fullName: OsuSharp.Interfaces.IOsuApi.GetScoreByUsernameAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: OsuSharp.Misc.GameMode
    name: GameMode
    nameWithType: GameMode
    fullName: OsuSharp.Misc.GameMode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task{OsuSharp.Endpoints.Score}
  commentId: T:System.Threading.Tasks.Task{OsuSharp.Endpoints.Score}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<Score>
  nameWithType: Task<Score>
  fullName: System.Threading.Tasks.Task<OsuSharp.Endpoints.Score>
  nameWithType.vb: Task(Of Score)
  fullName.vb: System.Threading.Tasks.Task(Of OsuSharp.Endpoints.Score)
  name.vb: Task(Of Score)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: OsuSharp.Endpoints.Score
    name: Score
    nameWithType: Score
    fullName: OsuSharp.Endpoints.Score
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: OsuSharp.Endpoints.Score
    name: Score
    nameWithType: Score
    fullName: OsuSharp.Endpoints.Score
  - name: )
    nameWithType: )
    fullName: )
- uid: OsuSharp.OsuApi.GetScoreByUserid*
  commentId: Overload:OsuSharp.OsuApi.GetScoreByUserid
  name: GetScoreByUserid
  nameWithType: OsuApi.GetScoreByUserid
  fullName: OsuSharp.OsuApi.GetScoreByUserid
- uid: OsuSharp.Interfaces.IOsuApi.GetScoreByUserid(System.Int64,System.UInt64,OsuSharp.Misc.GameMode)
  commentId: M:OsuSharp.Interfaces.IOsuApi.GetScoreByUserid(System.Int64,System.UInt64,OsuSharp.Misc.GameMode)
  parent: OsuSharp.Interfaces.IOsuApi
  isExternal: true
  name: GetScoreByUserid(Int64, UInt64, GameMode)
  nameWithType: IOsuApi.GetScoreByUserid(Int64, UInt64, GameMode)
  fullName: OsuSharp.Interfaces.IOsuApi.GetScoreByUserid(System.Int64, System.UInt64, OsuSharp.Misc.GameMode)
  spec.csharp:
  - uid: OsuSharp.Interfaces.IOsuApi.GetScoreByUserid(System.Int64,System.UInt64,OsuSharp.Misc.GameMode)
    name: GetScoreByUserid
    nameWithType: IOsuApi.GetScoreByUserid
    fullName: OsuSharp.Interfaces.IOsuApi.GetScoreByUserid
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.UInt64
    name: UInt64
    nameWithType: UInt64
    fullName: System.UInt64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: OsuSharp.Misc.GameMode
    name: GameMode
    nameWithType: GameMode
    fullName: OsuSharp.Misc.GameMode
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OsuSharp.Interfaces.IOsuApi.GetScoreByUserid(System.Int64,System.UInt64,OsuSharp.Misc.GameMode)
    name: GetScoreByUserid
    nameWithType: IOsuApi.GetScoreByUserid
    fullName: OsuSharp.Interfaces.IOsuApi.GetScoreByUserid
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.UInt64
    name: UInt64
    nameWithType: UInt64
    fullName: System.UInt64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: OsuSharp.Misc.GameMode
    name: GameMode
    nameWithType: GameMode
    fullName: OsuSharp.Misc.GameMode
  - name: )
    nameWithType: )
    fullName: )
- uid: System.UInt64
  commentId: T:System.UInt64
  parent: System
  isExternal: true
  name: UInt64
  nameWithType: UInt64
  fullName: System.UInt64
- uid: OsuSharp.OsuApi.GetScoreByUseridAsync*
  commentId: Overload:OsuSharp.OsuApi.GetScoreByUseridAsync
  name: GetScoreByUseridAsync
  nameWithType: OsuApi.GetScoreByUseridAsync
  fullName: OsuSharp.OsuApi.GetScoreByUseridAsync
- uid: OsuSharp.Interfaces.IOsuApi.GetScoreByUseridAsync(System.Int64,System.Int64,OsuSharp.Misc.GameMode,System.Threading.CancellationToken)
  commentId: M:OsuSharp.Interfaces.IOsuApi.GetScoreByUseridAsync(System.Int64,System.Int64,OsuSharp.Misc.GameMode,System.Threading.CancellationToken)
  parent: OsuSharp.Interfaces.IOsuApi
  isExternal: true
  name: GetScoreByUseridAsync(Int64, Int64, GameMode, CancellationToken)
  nameWithType: IOsuApi.GetScoreByUseridAsync(Int64, Int64, GameMode, CancellationToken)
  fullName: OsuSharp.Interfaces.IOsuApi.GetScoreByUseridAsync(System.Int64, System.Int64, OsuSharp.Misc.GameMode, System.Threading.CancellationToken)
  spec.csharp:
  - uid: OsuSharp.Interfaces.IOsuApi.GetScoreByUseridAsync(System.Int64,System.Int64,OsuSharp.Misc.GameMode,System.Threading.CancellationToken)
    name: GetScoreByUseridAsync
    nameWithType: IOsuApi.GetScoreByUseridAsync
    fullName: OsuSharp.Interfaces.IOsuApi.GetScoreByUseridAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: OsuSharp.Misc.GameMode
    name: GameMode
    nameWithType: GameMode
    fullName: OsuSharp.Misc.GameMode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OsuSharp.Interfaces.IOsuApi.GetScoreByUseridAsync(System.Int64,System.Int64,OsuSharp.Misc.GameMode,System.Threading.CancellationToken)
    name: GetScoreByUseridAsync
    nameWithType: IOsuApi.GetScoreByUseridAsync
    fullName: OsuSharp.Interfaces.IOsuApi.GetScoreByUseridAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: OsuSharp.Misc.GameMode
    name: GameMode
    nameWithType: GameMode
    fullName: OsuSharp.Misc.GameMode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: OsuSharp.OsuApi.GetScores*
  commentId: Overload:OsuSharp.OsuApi.GetScores
  name: GetScores
  nameWithType: OsuApi.GetScores
  fullName: OsuSharp.OsuApi.GetScores
- uid: OsuSharp.Interfaces.IOsuApi.GetScores(System.Int64,OsuSharp.Misc.GameMode,System.Int32)
  commentId: M:OsuSharp.Interfaces.IOsuApi.GetScores(System.Int64,OsuSharp.Misc.GameMode,System.Int32)
  parent: OsuSharp.Interfaces.IOsuApi
  isExternal: true
  name: GetScores(Int64, GameMode, Int32)
  nameWithType: IOsuApi.GetScores(Int64, GameMode, Int32)
  fullName: OsuSharp.Interfaces.IOsuApi.GetScores(System.Int64, OsuSharp.Misc.GameMode, System.Int32)
  spec.csharp:
  - uid: OsuSharp.Interfaces.IOsuApi.GetScores(System.Int64,OsuSharp.Misc.GameMode,System.Int32)
    name: GetScores
    nameWithType: IOsuApi.GetScores
    fullName: OsuSharp.Interfaces.IOsuApi.GetScores
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: OsuSharp.Misc.GameMode
    name: GameMode
    nameWithType: GameMode
    fullName: OsuSharp.Misc.GameMode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OsuSharp.Interfaces.IOsuApi.GetScores(System.Int64,OsuSharp.Misc.GameMode,System.Int32)
    name: GetScores
    nameWithType: IOsuApi.GetScores
    fullName: OsuSharp.Interfaces.IOsuApi.GetScores
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: OsuSharp.Misc.GameMode
    name: GameMode
    nameWithType: GameMode
    fullName: OsuSharp.Misc.GameMode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{OsuSharp.Endpoints.Score}
  commentId: T:System.Collections.Generic.List{OsuSharp.Endpoints.Score}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<Score>
  nameWithType: List<Score>
  fullName: System.Collections.Generic.List<OsuSharp.Endpoints.Score>
  nameWithType.vb: List(Of Score)
  fullName.vb: System.Collections.Generic.List(Of OsuSharp.Endpoints.Score)
  name.vb: List(Of Score)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: OsuSharp.Endpoints.Score
    name: Score
    nameWithType: Score
    fullName: OsuSharp.Endpoints.Score
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: OsuSharp.Endpoints.Score
    name: Score
    nameWithType: Score
    fullName: OsuSharp.Endpoints.Score
  - name: )
    nameWithType: )
    fullName: )
- uid: OsuSharp.OsuApi.GetScoresAsync*
  commentId: Overload:OsuSharp.OsuApi.GetScoresAsync
  name: GetScoresAsync
  nameWithType: OsuApi.GetScoresAsync
  fullName: OsuSharp.OsuApi.GetScoresAsync
- uid: OsuSharp.Interfaces.IOsuApi.GetScoresAsync(System.Int64,OsuSharp.Misc.GameMode,System.Int32,System.Threading.CancellationToken)
  commentId: M:OsuSharp.Interfaces.IOsuApi.GetScoresAsync(System.Int64,OsuSharp.Misc.GameMode,System.Int32,System.Threading.CancellationToken)
  parent: OsuSharp.Interfaces.IOsuApi
  isExternal: true
  name: GetScoresAsync(Int64, GameMode, Int32, CancellationToken)
  nameWithType: IOsuApi.GetScoresAsync(Int64, GameMode, Int32, CancellationToken)
  fullName: OsuSharp.Interfaces.IOsuApi.GetScoresAsync(System.Int64, OsuSharp.Misc.GameMode, System.Int32, System.Threading.CancellationToken)
  spec.csharp:
  - uid: OsuSharp.Interfaces.IOsuApi.GetScoresAsync(System.Int64,OsuSharp.Misc.GameMode,System.Int32,System.Threading.CancellationToken)
    name: GetScoresAsync
    nameWithType: IOsuApi.GetScoresAsync
    fullName: OsuSharp.Interfaces.IOsuApi.GetScoresAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: OsuSharp.Misc.GameMode
    name: GameMode
    nameWithType: GameMode
    fullName: OsuSharp.Misc.GameMode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OsuSharp.Interfaces.IOsuApi.GetScoresAsync(System.Int64,OsuSharp.Misc.GameMode,System.Int32,System.Threading.CancellationToken)
    name: GetScoresAsync
    nameWithType: IOsuApi.GetScoresAsync
    fullName: OsuSharp.Interfaces.IOsuApi.GetScoresAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: OsuSharp.Misc.GameMode
    name: GameMode
    nameWithType: GameMode
    fullName: OsuSharp.Misc.GameMode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task{System.Collections.Generic.List{OsuSharp.Endpoints.Score}}
  commentId: T:System.Threading.Tasks.Task{System.Collections.Generic.List{OsuSharp.Endpoints.Score}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<List<Score>>
  nameWithType: Task<List<Score>>
  fullName: System.Threading.Tasks.Task<System.Collections.Generic.List<OsuSharp.Endpoints.Score>>
  nameWithType.vb: Task(Of List(Of Score))
  fullName.vb: System.Threading.Tasks.Task(Of System.Collections.Generic.List(Of OsuSharp.Endpoints.Score))
  name.vb: Task(Of List(Of Score))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: OsuSharp.Endpoints.Score
    name: Score
    nameWithType: Score
    fullName: OsuSharp.Endpoints.Score
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: OsuSharp.Endpoints.Score
    name: Score
    nameWithType: Score
    fullName: OsuSharp.Endpoints.Score
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: OsuSharp.Entities.BeatmapScores
  commentId: T:OsuSharp.Entities.BeatmapScores
  parent: OsuSharp.Entities
  name: BeatmapScores
  nameWithType: BeatmapScores
  fullName: OsuSharp.Entities.BeatmapScores
- uid: OsuSharp.OsuApi.GetScoresAndBeatmap*
  commentId: Overload:OsuSharp.OsuApi.GetScoresAndBeatmap
  name: GetScoresAndBeatmap
  nameWithType: OsuApi.GetScoresAndBeatmap
  fullName: OsuSharp.OsuApi.GetScoresAndBeatmap
- uid: OsuSharp.Interfaces.IOsuApi.GetScoresAndBeatmap(System.Int64,OsuSharp.Misc.GameMode,System.Int32)
  commentId: M:OsuSharp.Interfaces.IOsuApi.GetScoresAndBeatmap(System.Int64,OsuSharp.Misc.GameMode,System.Int32)
  parent: OsuSharp.Interfaces.IOsuApi
  isExternal: true
  name: GetScoresAndBeatmap(Int64, GameMode, Int32)
  nameWithType: IOsuApi.GetScoresAndBeatmap(Int64, GameMode, Int32)
  fullName: OsuSharp.Interfaces.IOsuApi.GetScoresAndBeatmap(System.Int64, OsuSharp.Misc.GameMode, System.Int32)
  spec.csharp:
  - uid: OsuSharp.Interfaces.IOsuApi.GetScoresAndBeatmap(System.Int64,OsuSharp.Misc.GameMode,System.Int32)
    name: GetScoresAndBeatmap
    nameWithType: IOsuApi.GetScoresAndBeatmap
    fullName: OsuSharp.Interfaces.IOsuApi.GetScoresAndBeatmap
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: OsuSharp.Misc.GameMode
    name: GameMode
    nameWithType: GameMode
    fullName: OsuSharp.Misc.GameMode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OsuSharp.Interfaces.IOsuApi.GetScoresAndBeatmap(System.Int64,OsuSharp.Misc.GameMode,System.Int32)
    name: GetScoresAndBeatmap
    nameWithType: IOsuApi.GetScoresAndBeatmap
    fullName: OsuSharp.Interfaces.IOsuApi.GetScoresAndBeatmap
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: OsuSharp.Misc.GameMode
    name: GameMode
    nameWithType: GameMode
    fullName: OsuSharp.Misc.GameMode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: OsuSharp.Entities
  commentId: N:OsuSharp.Entities
  name: OsuSharp.Entities
  nameWithType: OsuSharp.Entities
  fullName: OsuSharp.Entities
- uid: OsuSharp.OsuApi.GetScoresAndBeatmapAsync*
  commentId: Overload:OsuSharp.OsuApi.GetScoresAndBeatmapAsync
  name: GetScoresAndBeatmapAsync
  nameWithType: OsuApi.GetScoresAndBeatmapAsync
  fullName: OsuSharp.OsuApi.GetScoresAndBeatmapAsync
- uid: OsuSharp.Interfaces.IOsuApi.GetScoresAndBeatmapAsync(System.Int64,OsuSharp.Misc.GameMode,System.Int32,System.Threading.CancellationToken)
  commentId: M:OsuSharp.Interfaces.IOsuApi.GetScoresAndBeatmapAsync(System.Int64,OsuSharp.Misc.GameMode,System.Int32,System.Threading.CancellationToken)
  parent: OsuSharp.Interfaces.IOsuApi
  isExternal: true
  name: GetScoresAndBeatmapAsync(Int64, GameMode, Int32, CancellationToken)
  nameWithType: IOsuApi.GetScoresAndBeatmapAsync(Int64, GameMode, Int32, CancellationToken)
  fullName: OsuSharp.Interfaces.IOsuApi.GetScoresAndBeatmapAsync(System.Int64, OsuSharp.Misc.GameMode, System.Int32, System.Threading.CancellationToken)
  spec.csharp:
  - uid: OsuSharp.Interfaces.IOsuApi.GetScoresAndBeatmapAsync(System.Int64,OsuSharp.Misc.GameMode,System.Int32,System.Threading.CancellationToken)
    name: GetScoresAndBeatmapAsync
    nameWithType: IOsuApi.GetScoresAndBeatmapAsync
    fullName: OsuSharp.Interfaces.IOsuApi.GetScoresAndBeatmapAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: OsuSharp.Misc.GameMode
    name: GameMode
    nameWithType: GameMode
    fullName: OsuSharp.Misc.GameMode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OsuSharp.Interfaces.IOsuApi.GetScoresAndBeatmapAsync(System.Int64,OsuSharp.Misc.GameMode,System.Int32,System.Threading.CancellationToken)
    name: GetScoresAndBeatmapAsync
    nameWithType: IOsuApi.GetScoresAndBeatmapAsync
    fullName: OsuSharp.Interfaces.IOsuApi.GetScoresAndBeatmapAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: OsuSharp.Misc.GameMode
    name: GameMode
    nameWithType: GameMode
    fullName: OsuSharp.Misc.GameMode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task{OsuSharp.Entities.BeatmapScores}
  commentId: T:System.Threading.Tasks.Task{OsuSharp.Entities.BeatmapScores}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<BeatmapScores>
  nameWithType: Task<BeatmapScores>
  fullName: System.Threading.Tasks.Task<OsuSharp.Entities.BeatmapScores>
  nameWithType.vb: Task(Of BeatmapScores)
  fullName.vb: System.Threading.Tasks.Task(Of OsuSharp.Entities.BeatmapScores)
  name.vb: Task(Of BeatmapScores)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: OsuSharp.Entities.BeatmapScores
    name: BeatmapScores
    nameWithType: BeatmapScores
    fullName: OsuSharp.Entities.BeatmapScores
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: OsuSharp.Entities.BeatmapScores
    name: BeatmapScores
    nameWithType: BeatmapScores
    fullName: OsuSharp.Entities.BeatmapScores
  - name: )
    nameWithType: )
    fullName: )
- uid: OsuSharp.Entities.BeatmapScoresUsers
  commentId: T:OsuSharp.Entities.BeatmapScoresUsers
  parent: OsuSharp.Entities
  name: BeatmapScoresUsers
  nameWithType: BeatmapScoresUsers
  fullName: OsuSharp.Entities.BeatmapScoresUsers
- uid: OsuSharp.OsuApi.GetScoresWithUsersAndBeatmap*
  commentId: Overload:OsuSharp.OsuApi.GetScoresWithUsersAndBeatmap
  name: GetScoresWithUsersAndBeatmap
  nameWithType: OsuApi.GetScoresWithUsersAndBeatmap
  fullName: OsuSharp.OsuApi.GetScoresWithUsersAndBeatmap
- uid: OsuSharp.Interfaces.IOsuApi.GetScoresWithUsersAndBeatmap(System.Int64,OsuSharp.Misc.GameMode,System.Int32)
  commentId: M:OsuSharp.Interfaces.IOsuApi.GetScoresWithUsersAndBeatmap(System.Int64,OsuSharp.Misc.GameMode,System.Int32)
  parent: OsuSharp.Interfaces.IOsuApi
  isExternal: true
  name: GetScoresWithUsersAndBeatmap(Int64, GameMode, Int32)
  nameWithType: IOsuApi.GetScoresWithUsersAndBeatmap(Int64, GameMode, Int32)
  fullName: OsuSharp.Interfaces.IOsuApi.GetScoresWithUsersAndBeatmap(System.Int64, OsuSharp.Misc.GameMode, System.Int32)
  spec.csharp:
  - uid: OsuSharp.Interfaces.IOsuApi.GetScoresWithUsersAndBeatmap(System.Int64,OsuSharp.Misc.GameMode,System.Int32)
    name: GetScoresWithUsersAndBeatmap
    nameWithType: IOsuApi.GetScoresWithUsersAndBeatmap
    fullName: OsuSharp.Interfaces.IOsuApi.GetScoresWithUsersAndBeatmap
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: OsuSharp.Misc.GameMode
    name: GameMode
    nameWithType: GameMode
    fullName: OsuSharp.Misc.GameMode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OsuSharp.Interfaces.IOsuApi.GetScoresWithUsersAndBeatmap(System.Int64,OsuSharp.Misc.GameMode,System.Int32)
    name: GetScoresWithUsersAndBeatmap
    nameWithType: IOsuApi.GetScoresWithUsersAndBeatmap
    fullName: OsuSharp.Interfaces.IOsuApi.GetScoresWithUsersAndBeatmap
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: OsuSharp.Misc.GameMode
    name: GameMode
    nameWithType: GameMode
    fullName: OsuSharp.Misc.GameMode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: OsuSharp.OsuApi.GetScoresWithUsersAndBeatmapAsync*
  commentId: Overload:OsuSharp.OsuApi.GetScoresWithUsersAndBeatmapAsync
  name: GetScoresWithUsersAndBeatmapAsync
  nameWithType: OsuApi.GetScoresWithUsersAndBeatmapAsync
  fullName: OsuSharp.OsuApi.GetScoresWithUsersAndBeatmapAsync
- uid: OsuSharp.Interfaces.IOsuApi.GetScoresWithUsersAndBeatmapAsync(System.Int64,OsuSharp.Misc.GameMode,System.Int32,System.Threading.CancellationToken)
  commentId: M:OsuSharp.Interfaces.IOsuApi.GetScoresWithUsersAndBeatmapAsync(System.Int64,OsuSharp.Misc.GameMode,System.Int32,System.Threading.CancellationToken)
  parent: OsuSharp.Interfaces.IOsuApi
  isExternal: true
  name: GetScoresWithUsersAndBeatmapAsync(Int64, GameMode, Int32, CancellationToken)
  nameWithType: IOsuApi.GetScoresWithUsersAndBeatmapAsync(Int64, GameMode, Int32, CancellationToken)
  fullName: OsuSharp.Interfaces.IOsuApi.GetScoresWithUsersAndBeatmapAsync(System.Int64, OsuSharp.Misc.GameMode, System.Int32, System.Threading.CancellationToken)
  spec.csharp:
  - uid: OsuSharp.Interfaces.IOsuApi.GetScoresWithUsersAndBeatmapAsync(System.Int64,OsuSharp.Misc.GameMode,System.Int32,System.Threading.CancellationToken)
    name: GetScoresWithUsersAndBeatmapAsync
    nameWithType: IOsuApi.GetScoresWithUsersAndBeatmapAsync
    fullName: OsuSharp.Interfaces.IOsuApi.GetScoresWithUsersAndBeatmapAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: OsuSharp.Misc.GameMode
    name: GameMode
    nameWithType: GameMode
    fullName: OsuSharp.Misc.GameMode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OsuSharp.Interfaces.IOsuApi.GetScoresWithUsersAndBeatmapAsync(System.Int64,OsuSharp.Misc.GameMode,System.Int32,System.Threading.CancellationToken)
    name: GetScoresWithUsersAndBeatmapAsync
    nameWithType: IOsuApi.GetScoresWithUsersAndBeatmapAsync
    fullName: OsuSharp.Interfaces.IOsuApi.GetScoresWithUsersAndBeatmapAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: OsuSharp.Misc.GameMode
    name: GameMode
    nameWithType: GameMode
    fullName: OsuSharp.Misc.GameMode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task{OsuSharp.Entities.BeatmapScoresUsers}
  commentId: T:System.Threading.Tasks.Task{OsuSharp.Entities.BeatmapScoresUsers}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<BeatmapScoresUsers>
  nameWithType: Task<BeatmapScoresUsers>
  fullName: System.Threading.Tasks.Task<OsuSharp.Entities.BeatmapScoresUsers>
  nameWithType.vb: Task(Of BeatmapScoresUsers)
  fullName.vb: System.Threading.Tasks.Task(Of OsuSharp.Entities.BeatmapScoresUsers)
  name.vb: Task(Of BeatmapScoresUsers)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: OsuSharp.Entities.BeatmapScoresUsers
    name: BeatmapScoresUsers
    nameWithType: BeatmapScoresUsers
    fullName: OsuSharp.Entities.BeatmapScoresUsers
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: OsuSharp.Entities.BeatmapScoresUsers
    name: BeatmapScoresUsers
    nameWithType: BeatmapScoresUsers
    fullName: OsuSharp.Entities.BeatmapScoresUsers
  - name: )
    nameWithType: )
    fullName: )
- uid: OsuSharp.Endpoints.UserBest
  commentId: T:OsuSharp.Endpoints.UserBest
  parent: OsuSharp.Endpoints
  name: UserBest
  nameWithType: UserBest
  fullName: OsuSharp.Endpoints.UserBest
- uid: OsuSharp.OsuApi.GetUserBestByUsername*
  commentId: Overload:OsuSharp.OsuApi.GetUserBestByUsername
  name: GetUserBestByUsername
  nameWithType: OsuApi.GetUserBestByUsername
  fullName: OsuSharp.OsuApi.GetUserBestByUsername
- uid: OsuSharp.Interfaces.IOsuApi.GetUserBestByUsername(System.String,OsuSharp.Misc.GameMode,System.Int32)
  commentId: M:OsuSharp.Interfaces.IOsuApi.GetUserBestByUsername(System.String,OsuSharp.Misc.GameMode,System.Int32)
  parent: OsuSharp.Interfaces.IOsuApi
  isExternal: true
  name: GetUserBestByUsername(String, GameMode, Int32)
  nameWithType: IOsuApi.GetUserBestByUsername(String, GameMode, Int32)
  fullName: OsuSharp.Interfaces.IOsuApi.GetUserBestByUsername(System.String, OsuSharp.Misc.GameMode, System.Int32)
  spec.csharp:
  - uid: OsuSharp.Interfaces.IOsuApi.GetUserBestByUsername(System.String,OsuSharp.Misc.GameMode,System.Int32)
    name: GetUserBestByUsername
    nameWithType: IOsuApi.GetUserBestByUsername
    fullName: OsuSharp.Interfaces.IOsuApi.GetUserBestByUsername
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: OsuSharp.Misc.GameMode
    name: GameMode
    nameWithType: GameMode
    fullName: OsuSharp.Misc.GameMode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OsuSharp.Interfaces.IOsuApi.GetUserBestByUsername(System.String,OsuSharp.Misc.GameMode,System.Int32)
    name: GetUserBestByUsername
    nameWithType: IOsuApi.GetUserBestByUsername
    fullName: OsuSharp.Interfaces.IOsuApi.GetUserBestByUsername
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: OsuSharp.Misc.GameMode
    name: GameMode
    nameWithType: GameMode
    fullName: OsuSharp.Misc.GameMode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{OsuSharp.Endpoints.UserBest}
  commentId: T:System.Collections.Generic.List{OsuSharp.Endpoints.UserBest}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<UserBest>
  nameWithType: List<UserBest>
  fullName: System.Collections.Generic.List<OsuSharp.Endpoints.UserBest>
  nameWithType.vb: List(Of UserBest)
  fullName.vb: System.Collections.Generic.List(Of OsuSharp.Endpoints.UserBest)
  name.vb: List(Of UserBest)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: OsuSharp.Endpoints.UserBest
    name: UserBest
    nameWithType: UserBest
    fullName: OsuSharp.Endpoints.UserBest
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: OsuSharp.Endpoints.UserBest
    name: UserBest
    nameWithType: UserBest
    fullName: OsuSharp.Endpoints.UserBest
  - name: )
    nameWithType: )
    fullName: )
- uid: OsuSharp.OsuApi.GetUserBestByUsernameAsync*
  commentId: Overload:OsuSharp.OsuApi.GetUserBestByUsernameAsync
  name: GetUserBestByUsernameAsync
  nameWithType: OsuApi.GetUserBestByUsernameAsync
  fullName: OsuSharp.OsuApi.GetUserBestByUsernameAsync
- uid: OsuSharp.Interfaces.IOsuApi.GetUserBestByUsernameAsync(System.String,OsuSharp.Misc.GameMode,System.Int32,System.Threading.CancellationToken)
  commentId: M:OsuSharp.Interfaces.IOsuApi.GetUserBestByUsernameAsync(System.String,OsuSharp.Misc.GameMode,System.Int32,System.Threading.CancellationToken)
  parent: OsuSharp.Interfaces.IOsuApi
  isExternal: true
  name: GetUserBestByUsernameAsync(String, GameMode, Int32, CancellationToken)
  nameWithType: IOsuApi.GetUserBestByUsernameAsync(String, GameMode, Int32, CancellationToken)
  fullName: OsuSharp.Interfaces.IOsuApi.GetUserBestByUsernameAsync(System.String, OsuSharp.Misc.GameMode, System.Int32, System.Threading.CancellationToken)
  spec.csharp:
  - uid: OsuSharp.Interfaces.IOsuApi.GetUserBestByUsernameAsync(System.String,OsuSharp.Misc.GameMode,System.Int32,System.Threading.CancellationToken)
    name: GetUserBestByUsernameAsync
    nameWithType: IOsuApi.GetUserBestByUsernameAsync
    fullName: OsuSharp.Interfaces.IOsuApi.GetUserBestByUsernameAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: OsuSharp.Misc.GameMode
    name: GameMode
    nameWithType: GameMode
    fullName: OsuSharp.Misc.GameMode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OsuSharp.Interfaces.IOsuApi.GetUserBestByUsernameAsync(System.String,OsuSharp.Misc.GameMode,System.Int32,System.Threading.CancellationToken)
    name: GetUserBestByUsernameAsync
    nameWithType: IOsuApi.GetUserBestByUsernameAsync
    fullName: OsuSharp.Interfaces.IOsuApi.GetUserBestByUsernameAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: OsuSharp.Misc.GameMode
    name: GameMode
    nameWithType: GameMode
    fullName: OsuSharp.Misc.GameMode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task{System.Collections.Generic.List{OsuSharp.Endpoints.UserBest}}
  commentId: T:System.Threading.Tasks.Task{System.Collections.Generic.List{OsuSharp.Endpoints.UserBest}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<List<UserBest>>
  nameWithType: Task<List<UserBest>>
  fullName: System.Threading.Tasks.Task<System.Collections.Generic.List<OsuSharp.Endpoints.UserBest>>
  nameWithType.vb: Task(Of List(Of UserBest))
  fullName.vb: System.Threading.Tasks.Task(Of System.Collections.Generic.List(Of OsuSharp.Endpoints.UserBest))
  name.vb: Task(Of List(Of UserBest))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: OsuSharp.Endpoints.UserBest
    name: UserBest
    nameWithType: UserBest
    fullName: OsuSharp.Endpoints.UserBest
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: OsuSharp.Endpoints.UserBest
    name: UserBest
    nameWithType: UserBest
    fullName: OsuSharp.Endpoints.UserBest
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: OsuSharp.Entities.UserBestBeatmap
  commentId: T:OsuSharp.Entities.UserBestBeatmap
  name: UserBestBeatmap
  nameWithType: UserBestBeatmap
  fullName: OsuSharp.Entities.UserBestBeatmap
- uid: OsuSharp.OsuApi.GetUserBestAndBeatmapByUsername*
  commentId: Overload:OsuSharp.OsuApi.GetUserBestAndBeatmapByUsername
  name: GetUserBestAndBeatmapByUsername
  nameWithType: OsuApi.GetUserBestAndBeatmapByUsername
  fullName: OsuSharp.OsuApi.GetUserBestAndBeatmapByUsername
- uid: OsuSharp.Interfaces.IOsuApi.GetUserBestAndBeatmapByUsername(System.String,OsuSharp.Misc.GameMode,System.Int32)
  commentId: M:OsuSharp.Interfaces.IOsuApi.GetUserBestAndBeatmapByUsername(System.String,OsuSharp.Misc.GameMode,System.Int32)
  parent: OsuSharp.Interfaces.IOsuApi
  isExternal: true
  name: GetUserBestAndBeatmapByUsername(String, GameMode, Int32)
  nameWithType: IOsuApi.GetUserBestAndBeatmapByUsername(String, GameMode, Int32)
  fullName: OsuSharp.Interfaces.IOsuApi.GetUserBestAndBeatmapByUsername(System.String, OsuSharp.Misc.GameMode, System.Int32)
  spec.csharp:
  - uid: OsuSharp.Interfaces.IOsuApi.GetUserBestAndBeatmapByUsername(System.String,OsuSharp.Misc.GameMode,System.Int32)
    name: GetUserBestAndBeatmapByUsername
    nameWithType: IOsuApi.GetUserBestAndBeatmapByUsername
    fullName: OsuSharp.Interfaces.IOsuApi.GetUserBestAndBeatmapByUsername
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: OsuSharp.Misc.GameMode
    name: GameMode
    nameWithType: GameMode
    fullName: OsuSharp.Misc.GameMode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OsuSharp.Interfaces.IOsuApi.GetUserBestAndBeatmapByUsername(System.String,OsuSharp.Misc.GameMode,System.Int32)
    name: GetUserBestAndBeatmapByUsername
    nameWithType: IOsuApi.GetUserBestAndBeatmapByUsername
    fullName: OsuSharp.Interfaces.IOsuApi.GetUserBestAndBeatmapByUsername
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: OsuSharp.Misc.GameMode
    name: GameMode
    nameWithType: GameMode
    fullName: OsuSharp.Misc.GameMode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{OsuSharp.Entities.UserBestBeatmap}
  commentId: T:System.Collections.Generic.List{OsuSharp.Entities.UserBestBeatmap}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<UserBestBeatmap>
  nameWithType: List<UserBestBeatmap>
  fullName: System.Collections.Generic.List<OsuSharp.Entities.UserBestBeatmap>
  nameWithType.vb: List(Of UserBestBeatmap)
  fullName.vb: System.Collections.Generic.List(Of OsuSharp.Entities.UserBestBeatmap)
  name.vb: List(Of UserBestBeatmap)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: OsuSharp.Entities.UserBestBeatmap
    name: UserBestBeatmap
    nameWithType: UserBestBeatmap
    fullName: OsuSharp.Entities.UserBestBeatmap
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: OsuSharp.Entities.UserBestBeatmap
    name: UserBestBeatmap
    nameWithType: UserBestBeatmap
    fullName: OsuSharp.Entities.UserBestBeatmap
  - name: )
    nameWithType: )
    fullName: )
- uid: OsuSharp.OsuApi.GetUserBestAndBeatmapByUsernameAsync*
  commentId: Overload:OsuSharp.OsuApi.GetUserBestAndBeatmapByUsernameAsync
  name: GetUserBestAndBeatmapByUsernameAsync
  nameWithType: OsuApi.GetUserBestAndBeatmapByUsernameAsync
  fullName: OsuSharp.OsuApi.GetUserBestAndBeatmapByUsernameAsync
- uid: OsuSharp.Interfaces.IOsuApi.GetUserBestAndBeatmapByUsernameAsync(System.String,OsuSharp.Misc.GameMode,System.Int32,System.Threading.CancellationToken)
  commentId: M:OsuSharp.Interfaces.IOsuApi.GetUserBestAndBeatmapByUsernameAsync(System.String,OsuSharp.Misc.GameMode,System.Int32,System.Threading.CancellationToken)
  parent: OsuSharp.Interfaces.IOsuApi
  isExternal: true
  name: GetUserBestAndBeatmapByUsernameAsync(String, GameMode, Int32, CancellationToken)
  nameWithType: IOsuApi.GetUserBestAndBeatmapByUsernameAsync(String, GameMode, Int32, CancellationToken)
  fullName: OsuSharp.Interfaces.IOsuApi.GetUserBestAndBeatmapByUsernameAsync(System.String, OsuSharp.Misc.GameMode, System.Int32, System.Threading.CancellationToken)
  spec.csharp:
  - uid: OsuSharp.Interfaces.IOsuApi.GetUserBestAndBeatmapByUsernameAsync(System.String,OsuSharp.Misc.GameMode,System.Int32,System.Threading.CancellationToken)
    name: GetUserBestAndBeatmapByUsernameAsync
    nameWithType: IOsuApi.GetUserBestAndBeatmapByUsernameAsync
    fullName: OsuSharp.Interfaces.IOsuApi.GetUserBestAndBeatmapByUsernameAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: OsuSharp.Misc.GameMode
    name: GameMode
    nameWithType: GameMode
    fullName: OsuSharp.Misc.GameMode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OsuSharp.Interfaces.IOsuApi.GetUserBestAndBeatmapByUsernameAsync(System.String,OsuSharp.Misc.GameMode,System.Int32,System.Threading.CancellationToken)
    name: GetUserBestAndBeatmapByUsernameAsync
    nameWithType: IOsuApi.GetUserBestAndBeatmapByUsernameAsync
    fullName: OsuSharp.Interfaces.IOsuApi.GetUserBestAndBeatmapByUsernameAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: OsuSharp.Misc.GameMode
    name: GameMode
    nameWithType: GameMode
    fullName: OsuSharp.Misc.GameMode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task{System.Collections.Generic.List{OsuSharp.Entities.UserBestBeatmap}}
  commentId: T:System.Threading.Tasks.Task{System.Collections.Generic.List{OsuSharp.Entities.UserBestBeatmap}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<List<UserBestBeatmap>>
  nameWithType: Task<List<UserBestBeatmap>>
  fullName: System.Threading.Tasks.Task<System.Collections.Generic.List<OsuSharp.Entities.UserBestBeatmap>>
  nameWithType.vb: Task(Of List(Of UserBestBeatmap))
  fullName.vb: System.Threading.Tasks.Task(Of System.Collections.Generic.List(Of OsuSharp.Entities.UserBestBeatmap))
  name.vb: Task(Of List(Of UserBestBeatmap))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: OsuSharp.Entities.UserBestBeatmap
    name: UserBestBeatmap
    nameWithType: UserBestBeatmap
    fullName: OsuSharp.Entities.UserBestBeatmap
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: OsuSharp.Entities.UserBestBeatmap
    name: UserBestBeatmap
    nameWithType: UserBestBeatmap
    fullName: OsuSharp.Entities.UserBestBeatmap
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: OsuSharp.OsuApi.GetUserBestByUserid*
  commentId: Overload:OsuSharp.OsuApi.GetUserBestByUserid
  name: GetUserBestByUserid
  nameWithType: OsuApi.GetUserBestByUserid
  fullName: OsuSharp.OsuApi.GetUserBestByUserid
- uid: OsuSharp.Interfaces.IOsuApi.GetUserBestByUserid(System.Int64,OsuSharp.Misc.GameMode,System.Int32)
  commentId: M:OsuSharp.Interfaces.IOsuApi.GetUserBestByUserid(System.Int64,OsuSharp.Misc.GameMode,System.Int32)
  parent: OsuSharp.Interfaces.IOsuApi
  isExternal: true
  name: GetUserBestByUserid(Int64, GameMode, Int32)
  nameWithType: IOsuApi.GetUserBestByUserid(Int64, GameMode, Int32)
  fullName: OsuSharp.Interfaces.IOsuApi.GetUserBestByUserid(System.Int64, OsuSharp.Misc.GameMode, System.Int32)
  spec.csharp:
  - uid: OsuSharp.Interfaces.IOsuApi.GetUserBestByUserid(System.Int64,OsuSharp.Misc.GameMode,System.Int32)
    name: GetUserBestByUserid
    nameWithType: IOsuApi.GetUserBestByUserid
    fullName: OsuSharp.Interfaces.IOsuApi.GetUserBestByUserid
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: OsuSharp.Misc.GameMode
    name: GameMode
    nameWithType: GameMode
    fullName: OsuSharp.Misc.GameMode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OsuSharp.Interfaces.IOsuApi.GetUserBestByUserid(System.Int64,OsuSharp.Misc.GameMode,System.Int32)
    name: GetUserBestByUserid
    nameWithType: IOsuApi.GetUserBestByUserid
    fullName: OsuSharp.Interfaces.IOsuApi.GetUserBestByUserid
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: OsuSharp.Misc.GameMode
    name: GameMode
    nameWithType: GameMode
    fullName: OsuSharp.Misc.GameMode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: OsuSharp.OsuApi.GetUserBestByUseridAsync*
  commentId: Overload:OsuSharp.OsuApi.GetUserBestByUseridAsync
  name: GetUserBestByUseridAsync
  nameWithType: OsuApi.GetUserBestByUseridAsync
  fullName: OsuSharp.OsuApi.GetUserBestByUseridAsync
- uid: OsuSharp.Interfaces.IOsuApi.GetUserBestByUseridAsync(System.Int64,OsuSharp.Misc.GameMode,System.Int32,System.Threading.CancellationToken)
  commentId: M:OsuSharp.Interfaces.IOsuApi.GetUserBestByUseridAsync(System.Int64,OsuSharp.Misc.GameMode,System.Int32,System.Threading.CancellationToken)
  parent: OsuSharp.Interfaces.IOsuApi
  isExternal: true
  name: GetUserBestByUseridAsync(Int64, GameMode, Int32, CancellationToken)
  nameWithType: IOsuApi.GetUserBestByUseridAsync(Int64, GameMode, Int32, CancellationToken)
  fullName: OsuSharp.Interfaces.IOsuApi.GetUserBestByUseridAsync(System.Int64, OsuSharp.Misc.GameMode, System.Int32, System.Threading.CancellationToken)
  spec.csharp:
  - uid: OsuSharp.Interfaces.IOsuApi.GetUserBestByUseridAsync(System.Int64,OsuSharp.Misc.GameMode,System.Int32,System.Threading.CancellationToken)
    name: GetUserBestByUseridAsync
    nameWithType: IOsuApi.GetUserBestByUseridAsync
    fullName: OsuSharp.Interfaces.IOsuApi.GetUserBestByUseridAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: OsuSharp.Misc.GameMode
    name: GameMode
    nameWithType: GameMode
    fullName: OsuSharp.Misc.GameMode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OsuSharp.Interfaces.IOsuApi.GetUserBestByUseridAsync(System.Int64,OsuSharp.Misc.GameMode,System.Int32,System.Threading.CancellationToken)
    name: GetUserBestByUseridAsync
    nameWithType: IOsuApi.GetUserBestByUseridAsync
    fullName: OsuSharp.Interfaces.IOsuApi.GetUserBestByUseridAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: OsuSharp.Misc.GameMode
    name: GameMode
    nameWithType: GameMode
    fullName: OsuSharp.Misc.GameMode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: OsuSharp.OsuApi.GetUserBestAndBeatmapByUserid*
  commentId: Overload:OsuSharp.OsuApi.GetUserBestAndBeatmapByUserid
  name: GetUserBestAndBeatmapByUserid
  nameWithType: OsuApi.GetUserBestAndBeatmapByUserid
  fullName: OsuSharp.OsuApi.GetUserBestAndBeatmapByUserid
- uid: OsuSharp.Interfaces.IOsuApi.GetUserBestAndBeatmapByUserid(System.Int64,OsuSharp.Misc.GameMode,System.Int32)
  commentId: M:OsuSharp.Interfaces.IOsuApi.GetUserBestAndBeatmapByUserid(System.Int64,OsuSharp.Misc.GameMode,System.Int32)
  parent: OsuSharp.Interfaces.IOsuApi
  isExternal: true
  name: GetUserBestAndBeatmapByUserid(Int64, GameMode, Int32)
  nameWithType: IOsuApi.GetUserBestAndBeatmapByUserid(Int64, GameMode, Int32)
  fullName: OsuSharp.Interfaces.IOsuApi.GetUserBestAndBeatmapByUserid(System.Int64, OsuSharp.Misc.GameMode, System.Int32)
  spec.csharp:
  - uid: OsuSharp.Interfaces.IOsuApi.GetUserBestAndBeatmapByUserid(System.Int64,OsuSharp.Misc.GameMode,System.Int32)
    name: GetUserBestAndBeatmapByUserid
    nameWithType: IOsuApi.GetUserBestAndBeatmapByUserid
    fullName: OsuSharp.Interfaces.IOsuApi.GetUserBestAndBeatmapByUserid
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: OsuSharp.Misc.GameMode
    name: GameMode
    nameWithType: GameMode
    fullName: OsuSharp.Misc.GameMode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OsuSharp.Interfaces.IOsuApi.GetUserBestAndBeatmapByUserid(System.Int64,OsuSharp.Misc.GameMode,System.Int32)
    name: GetUserBestAndBeatmapByUserid
    nameWithType: IOsuApi.GetUserBestAndBeatmapByUserid
    fullName: OsuSharp.Interfaces.IOsuApi.GetUserBestAndBeatmapByUserid
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: OsuSharp.Misc.GameMode
    name: GameMode
    nameWithType: GameMode
    fullName: OsuSharp.Misc.GameMode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: OsuSharp.OsuApi.GetUserBestAndBeatmapByUseridAsync*
  commentId: Overload:OsuSharp.OsuApi.GetUserBestAndBeatmapByUseridAsync
  name: GetUserBestAndBeatmapByUseridAsync
  nameWithType: OsuApi.GetUserBestAndBeatmapByUseridAsync
  fullName: OsuSharp.OsuApi.GetUserBestAndBeatmapByUseridAsync
- uid: OsuSharp.Interfaces.IOsuApi.GetUserBestAndBeatmapByUseridAsync(System.Int64,OsuSharp.Misc.GameMode,System.Int32,System.Threading.CancellationToken)
  commentId: M:OsuSharp.Interfaces.IOsuApi.GetUserBestAndBeatmapByUseridAsync(System.Int64,OsuSharp.Misc.GameMode,System.Int32,System.Threading.CancellationToken)
  parent: OsuSharp.Interfaces.IOsuApi
  isExternal: true
  name: GetUserBestAndBeatmapByUseridAsync(Int64, GameMode, Int32, CancellationToken)
  nameWithType: IOsuApi.GetUserBestAndBeatmapByUseridAsync(Int64, GameMode, Int32, CancellationToken)
  fullName: OsuSharp.Interfaces.IOsuApi.GetUserBestAndBeatmapByUseridAsync(System.Int64, OsuSharp.Misc.GameMode, System.Int32, System.Threading.CancellationToken)
  spec.csharp:
  - uid: OsuSharp.Interfaces.IOsuApi.GetUserBestAndBeatmapByUseridAsync(System.Int64,OsuSharp.Misc.GameMode,System.Int32,System.Threading.CancellationToken)
    name: GetUserBestAndBeatmapByUseridAsync
    nameWithType: IOsuApi.GetUserBestAndBeatmapByUseridAsync
    fullName: OsuSharp.Interfaces.IOsuApi.GetUserBestAndBeatmapByUseridAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: OsuSharp.Misc.GameMode
    name: GameMode
    nameWithType: GameMode
    fullName: OsuSharp.Misc.GameMode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OsuSharp.Interfaces.IOsuApi.GetUserBestAndBeatmapByUseridAsync(System.Int64,OsuSharp.Misc.GameMode,System.Int32,System.Threading.CancellationToken)
    name: GetUserBestAndBeatmapByUseridAsync
    nameWithType: IOsuApi.GetUserBestAndBeatmapByUseridAsync
    fullName: OsuSharp.Interfaces.IOsuApi.GetUserBestAndBeatmapByUseridAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: OsuSharp.Misc.GameMode
    name: GameMode
    nameWithType: GameMode
    fullName: OsuSharp.Misc.GameMode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: OsuSharp.Endpoints.UserRecent
  commentId: T:OsuSharp.Endpoints.UserRecent
  parent: OsuSharp.Endpoints
  name: UserRecent
  nameWithType: UserRecent
  fullName: OsuSharp.Endpoints.UserRecent
- uid: OsuSharp.OsuApi.GetUserRecentByUsername*
  commentId: Overload:OsuSharp.OsuApi.GetUserRecentByUsername
  name: GetUserRecentByUsername
  nameWithType: OsuApi.GetUserRecentByUsername
  fullName: OsuSharp.OsuApi.GetUserRecentByUsername
- uid: OsuSharp.Interfaces.IOsuApi.GetUserRecentByUsername(System.String,OsuSharp.Misc.GameMode,System.Int32)
  commentId: M:OsuSharp.Interfaces.IOsuApi.GetUserRecentByUsername(System.String,OsuSharp.Misc.GameMode,System.Int32)
  parent: OsuSharp.Interfaces.IOsuApi
  isExternal: true
  name: GetUserRecentByUsername(String, GameMode, Int32)
  nameWithType: IOsuApi.GetUserRecentByUsername(String, GameMode, Int32)
  fullName: OsuSharp.Interfaces.IOsuApi.GetUserRecentByUsername(System.String, OsuSharp.Misc.GameMode, System.Int32)
  spec.csharp:
  - uid: OsuSharp.Interfaces.IOsuApi.GetUserRecentByUsername(System.String,OsuSharp.Misc.GameMode,System.Int32)
    name: GetUserRecentByUsername
    nameWithType: IOsuApi.GetUserRecentByUsername
    fullName: OsuSharp.Interfaces.IOsuApi.GetUserRecentByUsername
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: OsuSharp.Misc.GameMode
    name: GameMode
    nameWithType: GameMode
    fullName: OsuSharp.Misc.GameMode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OsuSharp.Interfaces.IOsuApi.GetUserRecentByUsername(System.String,OsuSharp.Misc.GameMode,System.Int32)
    name: GetUserRecentByUsername
    nameWithType: IOsuApi.GetUserRecentByUsername
    fullName: OsuSharp.Interfaces.IOsuApi.GetUserRecentByUsername
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: OsuSharp.Misc.GameMode
    name: GameMode
    nameWithType: GameMode
    fullName: OsuSharp.Misc.GameMode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{OsuSharp.Endpoints.UserRecent}
  commentId: T:System.Collections.Generic.List{OsuSharp.Endpoints.UserRecent}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<UserRecent>
  nameWithType: List<UserRecent>
  fullName: System.Collections.Generic.List<OsuSharp.Endpoints.UserRecent>
  nameWithType.vb: List(Of UserRecent)
  fullName.vb: System.Collections.Generic.List(Of OsuSharp.Endpoints.UserRecent)
  name.vb: List(Of UserRecent)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: OsuSharp.Endpoints.UserRecent
    name: UserRecent
    nameWithType: UserRecent
    fullName: OsuSharp.Endpoints.UserRecent
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: OsuSharp.Endpoints.UserRecent
    name: UserRecent
    nameWithType: UserRecent
    fullName: OsuSharp.Endpoints.UserRecent
  - name: )
    nameWithType: )
    fullName: )
- uid: OsuSharp.OsuApi.GetUserRecentByUsernameAsync*
  commentId: Overload:OsuSharp.OsuApi.GetUserRecentByUsernameAsync
  name: GetUserRecentByUsernameAsync
  nameWithType: OsuApi.GetUserRecentByUsernameAsync
  fullName: OsuSharp.OsuApi.GetUserRecentByUsernameAsync
- uid: OsuSharp.Interfaces.IOsuApi.GetUserRecentByUsernameAsync(System.String,OsuSharp.Misc.GameMode,System.Int32,System.Threading.CancellationToken)
  commentId: M:OsuSharp.Interfaces.IOsuApi.GetUserRecentByUsernameAsync(System.String,OsuSharp.Misc.GameMode,System.Int32,System.Threading.CancellationToken)
  parent: OsuSharp.Interfaces.IOsuApi
  isExternal: true
  name: GetUserRecentByUsernameAsync(String, GameMode, Int32, CancellationToken)
  nameWithType: IOsuApi.GetUserRecentByUsernameAsync(String, GameMode, Int32, CancellationToken)
  fullName: OsuSharp.Interfaces.IOsuApi.GetUserRecentByUsernameAsync(System.String, OsuSharp.Misc.GameMode, System.Int32, System.Threading.CancellationToken)
  spec.csharp:
  - uid: OsuSharp.Interfaces.IOsuApi.GetUserRecentByUsernameAsync(System.String,OsuSharp.Misc.GameMode,System.Int32,System.Threading.CancellationToken)
    name: GetUserRecentByUsernameAsync
    nameWithType: IOsuApi.GetUserRecentByUsernameAsync
    fullName: OsuSharp.Interfaces.IOsuApi.GetUserRecentByUsernameAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: OsuSharp.Misc.GameMode
    name: GameMode
    nameWithType: GameMode
    fullName: OsuSharp.Misc.GameMode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OsuSharp.Interfaces.IOsuApi.GetUserRecentByUsernameAsync(System.String,OsuSharp.Misc.GameMode,System.Int32,System.Threading.CancellationToken)
    name: GetUserRecentByUsernameAsync
    nameWithType: IOsuApi.GetUserRecentByUsernameAsync
    fullName: OsuSharp.Interfaces.IOsuApi.GetUserRecentByUsernameAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: OsuSharp.Misc.GameMode
    name: GameMode
    nameWithType: GameMode
    fullName: OsuSharp.Misc.GameMode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task{System.Collections.Generic.List{OsuSharp.Endpoints.UserRecent}}
  commentId: T:System.Threading.Tasks.Task{System.Collections.Generic.List{OsuSharp.Endpoints.UserRecent}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<List<UserRecent>>
  nameWithType: Task<List<UserRecent>>
  fullName: System.Threading.Tasks.Task<System.Collections.Generic.List<OsuSharp.Endpoints.UserRecent>>
  nameWithType.vb: Task(Of List(Of UserRecent))
  fullName.vb: System.Threading.Tasks.Task(Of System.Collections.Generic.List(Of OsuSharp.Endpoints.UserRecent))
  name.vb: Task(Of List(Of UserRecent))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: OsuSharp.Endpoints.UserRecent
    name: UserRecent
    nameWithType: UserRecent
    fullName: OsuSharp.Endpoints.UserRecent
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: OsuSharp.Endpoints.UserRecent
    name: UserRecent
    nameWithType: UserRecent
    fullName: OsuSharp.Endpoints.UserRecent
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: OsuSharp.Entities.UserRecentBeatmap
  commentId: T:OsuSharp.Entities.UserRecentBeatmap
  name: UserRecentBeatmap
  nameWithType: UserRecentBeatmap
  fullName: OsuSharp.Entities.UserRecentBeatmap
- uid: OsuSharp.OsuApi.GetUserRecentAndBeatmapByUsername*
  commentId: Overload:OsuSharp.OsuApi.GetUserRecentAndBeatmapByUsername
  name: GetUserRecentAndBeatmapByUsername
  nameWithType: OsuApi.GetUserRecentAndBeatmapByUsername
  fullName: OsuSharp.OsuApi.GetUserRecentAndBeatmapByUsername
- uid: OsuSharp.Interfaces.IOsuApi.GetUserRecentAndBeatmapByUsername(System.String,OsuSharp.Misc.GameMode,System.Int32)
  commentId: M:OsuSharp.Interfaces.IOsuApi.GetUserRecentAndBeatmapByUsername(System.String,OsuSharp.Misc.GameMode,System.Int32)
  parent: OsuSharp.Interfaces.IOsuApi
  isExternal: true
  name: GetUserRecentAndBeatmapByUsername(String, GameMode, Int32)
  nameWithType: IOsuApi.GetUserRecentAndBeatmapByUsername(String, GameMode, Int32)
  fullName: OsuSharp.Interfaces.IOsuApi.GetUserRecentAndBeatmapByUsername(System.String, OsuSharp.Misc.GameMode, System.Int32)
  spec.csharp:
  - uid: OsuSharp.Interfaces.IOsuApi.GetUserRecentAndBeatmapByUsername(System.String,OsuSharp.Misc.GameMode,System.Int32)
    name: GetUserRecentAndBeatmapByUsername
    nameWithType: IOsuApi.GetUserRecentAndBeatmapByUsername
    fullName: OsuSharp.Interfaces.IOsuApi.GetUserRecentAndBeatmapByUsername
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: OsuSharp.Misc.GameMode
    name: GameMode
    nameWithType: GameMode
    fullName: OsuSharp.Misc.GameMode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OsuSharp.Interfaces.IOsuApi.GetUserRecentAndBeatmapByUsername(System.String,OsuSharp.Misc.GameMode,System.Int32)
    name: GetUserRecentAndBeatmapByUsername
    nameWithType: IOsuApi.GetUserRecentAndBeatmapByUsername
    fullName: OsuSharp.Interfaces.IOsuApi.GetUserRecentAndBeatmapByUsername
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: OsuSharp.Misc.GameMode
    name: GameMode
    nameWithType: GameMode
    fullName: OsuSharp.Misc.GameMode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{OsuSharp.Entities.UserRecentBeatmap}
  commentId: T:System.Collections.Generic.List{OsuSharp.Entities.UserRecentBeatmap}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<UserRecentBeatmap>
  nameWithType: List<UserRecentBeatmap>
  fullName: System.Collections.Generic.List<OsuSharp.Entities.UserRecentBeatmap>
  nameWithType.vb: List(Of UserRecentBeatmap)
  fullName.vb: System.Collections.Generic.List(Of OsuSharp.Entities.UserRecentBeatmap)
  name.vb: List(Of UserRecentBeatmap)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: OsuSharp.Entities.UserRecentBeatmap
    name: UserRecentBeatmap
    nameWithType: UserRecentBeatmap
    fullName: OsuSharp.Entities.UserRecentBeatmap
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: OsuSharp.Entities.UserRecentBeatmap
    name: UserRecentBeatmap
    nameWithType: UserRecentBeatmap
    fullName: OsuSharp.Entities.UserRecentBeatmap
  - name: )
    nameWithType: )
    fullName: )
- uid: OsuSharp.OsuApi.GetUserRecentAndBeatmapByUsernameAsync*
  commentId: Overload:OsuSharp.OsuApi.GetUserRecentAndBeatmapByUsernameAsync
  name: GetUserRecentAndBeatmapByUsernameAsync
  nameWithType: OsuApi.GetUserRecentAndBeatmapByUsernameAsync
  fullName: OsuSharp.OsuApi.GetUserRecentAndBeatmapByUsernameAsync
- uid: OsuSharp.Interfaces.IOsuApi.GetUserRecentAndBeatmapByUsernameAsync(System.String,OsuSharp.Misc.GameMode,System.Int32,System.Threading.CancellationToken)
  commentId: M:OsuSharp.Interfaces.IOsuApi.GetUserRecentAndBeatmapByUsernameAsync(System.String,OsuSharp.Misc.GameMode,System.Int32,System.Threading.CancellationToken)
  parent: OsuSharp.Interfaces.IOsuApi
  isExternal: true
  name: GetUserRecentAndBeatmapByUsernameAsync(String, GameMode, Int32, CancellationToken)
  nameWithType: IOsuApi.GetUserRecentAndBeatmapByUsernameAsync(String, GameMode, Int32, CancellationToken)
  fullName: OsuSharp.Interfaces.IOsuApi.GetUserRecentAndBeatmapByUsernameAsync(System.String, OsuSharp.Misc.GameMode, System.Int32, System.Threading.CancellationToken)
  spec.csharp:
  - uid: OsuSharp.Interfaces.IOsuApi.GetUserRecentAndBeatmapByUsernameAsync(System.String,OsuSharp.Misc.GameMode,System.Int32,System.Threading.CancellationToken)
    name: GetUserRecentAndBeatmapByUsernameAsync
    nameWithType: IOsuApi.GetUserRecentAndBeatmapByUsernameAsync
    fullName: OsuSharp.Interfaces.IOsuApi.GetUserRecentAndBeatmapByUsernameAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: OsuSharp.Misc.GameMode
    name: GameMode
    nameWithType: GameMode
    fullName: OsuSharp.Misc.GameMode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OsuSharp.Interfaces.IOsuApi.GetUserRecentAndBeatmapByUsernameAsync(System.String,OsuSharp.Misc.GameMode,System.Int32,System.Threading.CancellationToken)
    name: GetUserRecentAndBeatmapByUsernameAsync
    nameWithType: IOsuApi.GetUserRecentAndBeatmapByUsernameAsync
    fullName: OsuSharp.Interfaces.IOsuApi.GetUserRecentAndBeatmapByUsernameAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: OsuSharp.Misc.GameMode
    name: GameMode
    nameWithType: GameMode
    fullName: OsuSharp.Misc.GameMode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task{System.Collections.Generic.List{OsuSharp.Entities.UserRecentBeatmap}}
  commentId: T:System.Threading.Tasks.Task{System.Collections.Generic.List{OsuSharp.Entities.UserRecentBeatmap}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<List<UserRecentBeatmap>>
  nameWithType: Task<List<UserRecentBeatmap>>
  fullName: System.Threading.Tasks.Task<System.Collections.Generic.List<OsuSharp.Entities.UserRecentBeatmap>>
  nameWithType.vb: Task(Of List(Of UserRecentBeatmap))
  fullName.vb: System.Threading.Tasks.Task(Of System.Collections.Generic.List(Of OsuSharp.Entities.UserRecentBeatmap))
  name.vb: Task(Of List(Of UserRecentBeatmap))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: OsuSharp.Entities.UserRecentBeatmap
    name: UserRecentBeatmap
    nameWithType: UserRecentBeatmap
    fullName: OsuSharp.Entities.UserRecentBeatmap
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: OsuSharp.Entities.UserRecentBeatmap
    name: UserRecentBeatmap
    nameWithType: UserRecentBeatmap
    fullName: OsuSharp.Entities.UserRecentBeatmap
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: OsuSharp.OsuApi.GetUserRecentByUserid*
  commentId: Overload:OsuSharp.OsuApi.GetUserRecentByUserid
  name: GetUserRecentByUserid
  nameWithType: OsuApi.GetUserRecentByUserid
  fullName: OsuSharp.OsuApi.GetUserRecentByUserid
- uid: OsuSharp.Interfaces.IOsuApi.GetUserRecentByUserid(System.Int64,OsuSharp.Misc.GameMode,System.Int32)
  commentId: M:OsuSharp.Interfaces.IOsuApi.GetUserRecentByUserid(System.Int64,OsuSharp.Misc.GameMode,System.Int32)
  parent: OsuSharp.Interfaces.IOsuApi
  isExternal: true
  name: GetUserRecentByUserid(Int64, GameMode, Int32)
  nameWithType: IOsuApi.GetUserRecentByUserid(Int64, GameMode, Int32)
  fullName: OsuSharp.Interfaces.IOsuApi.GetUserRecentByUserid(System.Int64, OsuSharp.Misc.GameMode, System.Int32)
  spec.csharp:
  - uid: OsuSharp.Interfaces.IOsuApi.GetUserRecentByUserid(System.Int64,OsuSharp.Misc.GameMode,System.Int32)
    name: GetUserRecentByUserid
    nameWithType: IOsuApi.GetUserRecentByUserid
    fullName: OsuSharp.Interfaces.IOsuApi.GetUserRecentByUserid
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: OsuSharp.Misc.GameMode
    name: GameMode
    nameWithType: GameMode
    fullName: OsuSharp.Misc.GameMode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OsuSharp.Interfaces.IOsuApi.GetUserRecentByUserid(System.Int64,OsuSharp.Misc.GameMode,System.Int32)
    name: GetUserRecentByUserid
    nameWithType: IOsuApi.GetUserRecentByUserid
    fullName: OsuSharp.Interfaces.IOsuApi.GetUserRecentByUserid
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: OsuSharp.Misc.GameMode
    name: GameMode
    nameWithType: GameMode
    fullName: OsuSharp.Misc.GameMode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: OsuSharp.OsuApi.GetUserRecentByUseridAsync*
  commentId: Overload:OsuSharp.OsuApi.GetUserRecentByUseridAsync
  name: GetUserRecentByUseridAsync
  nameWithType: OsuApi.GetUserRecentByUseridAsync
  fullName: OsuSharp.OsuApi.GetUserRecentByUseridAsync
- uid: OsuSharp.Interfaces.IOsuApi.GetUserRecentByUseridAsync(System.Int64,OsuSharp.Misc.GameMode,System.Int32,System.Threading.CancellationToken)
  commentId: M:OsuSharp.Interfaces.IOsuApi.GetUserRecentByUseridAsync(System.Int64,OsuSharp.Misc.GameMode,System.Int32,System.Threading.CancellationToken)
  parent: OsuSharp.Interfaces.IOsuApi
  isExternal: true
  name: GetUserRecentByUseridAsync(Int64, GameMode, Int32, CancellationToken)
  nameWithType: IOsuApi.GetUserRecentByUseridAsync(Int64, GameMode, Int32, CancellationToken)
  fullName: OsuSharp.Interfaces.IOsuApi.GetUserRecentByUseridAsync(System.Int64, OsuSharp.Misc.GameMode, System.Int32, System.Threading.CancellationToken)
  spec.csharp:
  - uid: OsuSharp.Interfaces.IOsuApi.GetUserRecentByUseridAsync(System.Int64,OsuSharp.Misc.GameMode,System.Int32,System.Threading.CancellationToken)
    name: GetUserRecentByUseridAsync
    nameWithType: IOsuApi.GetUserRecentByUseridAsync
    fullName: OsuSharp.Interfaces.IOsuApi.GetUserRecentByUseridAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: OsuSharp.Misc.GameMode
    name: GameMode
    nameWithType: GameMode
    fullName: OsuSharp.Misc.GameMode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OsuSharp.Interfaces.IOsuApi.GetUserRecentByUseridAsync(System.Int64,OsuSharp.Misc.GameMode,System.Int32,System.Threading.CancellationToken)
    name: GetUserRecentByUseridAsync
    nameWithType: IOsuApi.GetUserRecentByUseridAsync
    fullName: OsuSharp.Interfaces.IOsuApi.GetUserRecentByUseridAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: OsuSharp.Misc.GameMode
    name: GameMode
    nameWithType: GameMode
    fullName: OsuSharp.Misc.GameMode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: OsuSharp.OsuApi.GetUserRecentAndBeatmapByUserid*
  commentId: Overload:OsuSharp.OsuApi.GetUserRecentAndBeatmapByUserid
  name: GetUserRecentAndBeatmapByUserid
  nameWithType: OsuApi.GetUserRecentAndBeatmapByUserid
  fullName: OsuSharp.OsuApi.GetUserRecentAndBeatmapByUserid
- uid: OsuSharp.Interfaces.IOsuApi.GetUserRecentAndBeatmapByUserid(System.Int64,OsuSharp.Misc.GameMode,System.Int32)
  commentId: M:OsuSharp.Interfaces.IOsuApi.GetUserRecentAndBeatmapByUserid(System.Int64,OsuSharp.Misc.GameMode,System.Int32)
  parent: OsuSharp.Interfaces.IOsuApi
  isExternal: true
  name: GetUserRecentAndBeatmapByUserid(Int64, GameMode, Int32)
  nameWithType: IOsuApi.GetUserRecentAndBeatmapByUserid(Int64, GameMode, Int32)
  fullName: OsuSharp.Interfaces.IOsuApi.GetUserRecentAndBeatmapByUserid(System.Int64, OsuSharp.Misc.GameMode, System.Int32)
  spec.csharp:
  - uid: OsuSharp.Interfaces.IOsuApi.GetUserRecentAndBeatmapByUserid(System.Int64,OsuSharp.Misc.GameMode,System.Int32)
    name: GetUserRecentAndBeatmapByUserid
    nameWithType: IOsuApi.GetUserRecentAndBeatmapByUserid
    fullName: OsuSharp.Interfaces.IOsuApi.GetUserRecentAndBeatmapByUserid
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: OsuSharp.Misc.GameMode
    name: GameMode
    nameWithType: GameMode
    fullName: OsuSharp.Misc.GameMode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OsuSharp.Interfaces.IOsuApi.GetUserRecentAndBeatmapByUserid(System.Int64,OsuSharp.Misc.GameMode,System.Int32)
    name: GetUserRecentAndBeatmapByUserid
    nameWithType: IOsuApi.GetUserRecentAndBeatmapByUserid
    fullName: OsuSharp.Interfaces.IOsuApi.GetUserRecentAndBeatmapByUserid
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: OsuSharp.Misc.GameMode
    name: GameMode
    nameWithType: GameMode
    fullName: OsuSharp.Misc.GameMode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: OsuSharp.OsuApi.GetUserRecentAndBeatmapByUseridAsync*
  commentId: Overload:OsuSharp.OsuApi.GetUserRecentAndBeatmapByUseridAsync
  name: GetUserRecentAndBeatmapByUseridAsync
  nameWithType: OsuApi.GetUserRecentAndBeatmapByUseridAsync
  fullName: OsuSharp.OsuApi.GetUserRecentAndBeatmapByUseridAsync
- uid: OsuSharp.Interfaces.IOsuApi.GetUserRecentAndBeatmapByUseridAsync(System.Int64,OsuSharp.Misc.GameMode,System.Int32,System.Threading.CancellationToken)
  commentId: M:OsuSharp.Interfaces.IOsuApi.GetUserRecentAndBeatmapByUseridAsync(System.Int64,OsuSharp.Misc.GameMode,System.Int32,System.Threading.CancellationToken)
  parent: OsuSharp.Interfaces.IOsuApi
  isExternal: true
  name: GetUserRecentAndBeatmapByUseridAsync(Int64, GameMode, Int32, CancellationToken)
  nameWithType: IOsuApi.GetUserRecentAndBeatmapByUseridAsync(Int64, GameMode, Int32, CancellationToken)
  fullName: OsuSharp.Interfaces.IOsuApi.GetUserRecentAndBeatmapByUseridAsync(System.Int64, OsuSharp.Misc.GameMode, System.Int32, System.Threading.CancellationToken)
  spec.csharp:
  - uid: OsuSharp.Interfaces.IOsuApi.GetUserRecentAndBeatmapByUseridAsync(System.Int64,OsuSharp.Misc.GameMode,System.Int32,System.Threading.CancellationToken)
    name: GetUserRecentAndBeatmapByUseridAsync
    nameWithType: IOsuApi.GetUserRecentAndBeatmapByUseridAsync
    fullName: OsuSharp.Interfaces.IOsuApi.GetUserRecentAndBeatmapByUseridAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: OsuSharp.Misc.GameMode
    name: GameMode
    nameWithType: GameMode
    fullName: OsuSharp.Misc.GameMode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OsuSharp.Interfaces.IOsuApi.GetUserRecentAndBeatmapByUseridAsync(System.Int64,OsuSharp.Misc.GameMode,System.Int32,System.Threading.CancellationToken)
    name: GetUserRecentAndBeatmapByUseridAsync
    nameWithType: IOsuApi.GetUserRecentAndBeatmapByUseridAsync
    fullName: OsuSharp.Interfaces.IOsuApi.GetUserRecentAndBeatmapByUseridAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: OsuSharp.Misc.GameMode
    name: GameMode
    nameWithType: GameMode
    fullName: OsuSharp.Misc.GameMode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: OsuSharp.Endpoints.Multiplayer
  commentId: T:OsuSharp.Endpoints.Multiplayer
  parent: OsuSharp.Endpoints
  name: Multiplayer
  nameWithType: Multiplayer
  fullName: OsuSharp.Endpoints.Multiplayer
- uid: OsuSharp.OsuApi.GetMatch*
  commentId: Overload:OsuSharp.OsuApi.GetMatch
  name: GetMatch
  nameWithType: OsuApi.GetMatch
  fullName: OsuSharp.OsuApi.GetMatch
- uid: OsuSharp.Interfaces.IOsuApi.GetMatch(System.Int64)
  commentId: M:OsuSharp.Interfaces.IOsuApi.GetMatch(System.Int64)
  parent: OsuSharp.Interfaces.IOsuApi
  isExternal: true
  name: GetMatch(Int64)
  nameWithType: IOsuApi.GetMatch(Int64)
  fullName: OsuSharp.Interfaces.IOsuApi.GetMatch(System.Int64)
  spec.csharp:
  - uid: OsuSharp.Interfaces.IOsuApi.GetMatch(System.Int64)
    name: GetMatch
    nameWithType: IOsuApi.GetMatch
    fullName: OsuSharp.Interfaces.IOsuApi.GetMatch
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OsuSharp.Interfaces.IOsuApi.GetMatch(System.Int64)
    name: GetMatch
    nameWithType: IOsuApi.GetMatch
    fullName: OsuSharp.Interfaces.IOsuApi.GetMatch
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: OsuSharp.OsuApi.GetMatchAsync*
  commentId: Overload:OsuSharp.OsuApi.GetMatchAsync
  name: GetMatchAsync
  nameWithType: OsuApi.GetMatchAsync
  fullName: OsuSharp.OsuApi.GetMatchAsync
- uid: OsuSharp.Interfaces.IOsuApi.GetMatchAsync(System.Int64,System.Threading.CancellationToken)
  commentId: M:OsuSharp.Interfaces.IOsuApi.GetMatchAsync(System.Int64,System.Threading.CancellationToken)
  parent: OsuSharp.Interfaces.IOsuApi
  isExternal: true
  name: GetMatchAsync(Int64, CancellationToken)
  nameWithType: IOsuApi.GetMatchAsync(Int64, CancellationToken)
  fullName: OsuSharp.Interfaces.IOsuApi.GetMatchAsync(System.Int64, System.Threading.CancellationToken)
  spec.csharp:
  - uid: OsuSharp.Interfaces.IOsuApi.GetMatchAsync(System.Int64,System.Threading.CancellationToken)
    name: GetMatchAsync
    nameWithType: IOsuApi.GetMatchAsync
    fullName: OsuSharp.Interfaces.IOsuApi.GetMatchAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OsuSharp.Interfaces.IOsuApi.GetMatchAsync(System.Int64,System.Threading.CancellationToken)
    name: GetMatchAsync
    nameWithType: IOsuApi.GetMatchAsync
    fullName: OsuSharp.Interfaces.IOsuApi.GetMatchAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task{OsuSharp.Endpoints.Multiplayer}
  commentId: T:System.Threading.Tasks.Task{OsuSharp.Endpoints.Multiplayer}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<Multiplayer>
  nameWithType: Task<Multiplayer>
  fullName: System.Threading.Tasks.Task<OsuSharp.Endpoints.Multiplayer>
  nameWithType.vb: Task(Of Multiplayer)
  fullName.vb: System.Threading.Tasks.Task(Of OsuSharp.Endpoints.Multiplayer)
  name.vb: Task(Of Multiplayer)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: OsuSharp.Endpoints.Multiplayer
    name: Multiplayer
    nameWithType: Multiplayer
    fullName: OsuSharp.Endpoints.Multiplayer
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: OsuSharp.Endpoints.Multiplayer
    name: Multiplayer
    nameWithType: Multiplayer
    fullName: OsuSharp.Endpoints.Multiplayer
  - name: )
    nameWithType: )
    fullName: )
- uid: OsuSharp.Endpoints.Replay
  commentId: T:OsuSharp.Endpoints.Replay
  parent: OsuSharp.Endpoints
  name: Replay
  nameWithType: Replay
  fullName: OsuSharp.Endpoints.Replay
- uid: OsuSharp.OsuApi.GetReplayByUsername*
  commentId: Overload:OsuSharp.OsuApi.GetReplayByUsername
  name: GetReplayByUsername
  nameWithType: OsuApi.GetReplayByUsername
  fullName: OsuSharp.OsuApi.GetReplayByUsername
- uid: OsuSharp.Interfaces.IOsuApi.GetReplayByUsername(System.Int64,System.String,OsuSharp.Misc.GameMode)
  commentId: M:OsuSharp.Interfaces.IOsuApi.GetReplayByUsername(System.Int64,System.String,OsuSharp.Misc.GameMode)
  parent: OsuSharp.Interfaces.IOsuApi
  isExternal: true
  name: GetReplayByUsername(Int64, String, GameMode)
  nameWithType: IOsuApi.GetReplayByUsername(Int64, String, GameMode)
  fullName: OsuSharp.Interfaces.IOsuApi.GetReplayByUsername(System.Int64, System.String, OsuSharp.Misc.GameMode)
  spec.csharp:
  - uid: OsuSharp.Interfaces.IOsuApi.GetReplayByUsername(System.Int64,System.String,OsuSharp.Misc.GameMode)
    name: GetReplayByUsername
    nameWithType: IOsuApi.GetReplayByUsername
    fullName: OsuSharp.Interfaces.IOsuApi.GetReplayByUsername
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: OsuSharp.Misc.GameMode
    name: GameMode
    nameWithType: GameMode
    fullName: OsuSharp.Misc.GameMode
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OsuSharp.Interfaces.IOsuApi.GetReplayByUsername(System.Int64,System.String,OsuSharp.Misc.GameMode)
    name: GetReplayByUsername
    nameWithType: IOsuApi.GetReplayByUsername
    fullName: OsuSharp.Interfaces.IOsuApi.GetReplayByUsername
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: OsuSharp.Misc.GameMode
    name: GameMode
    nameWithType: GameMode
    fullName: OsuSharp.Misc.GameMode
  - name: )
    nameWithType: )
    fullName: )
- uid: OsuSharp.OsuApi.GetReplayByUsernameAsync*
  commentId: Overload:OsuSharp.OsuApi.GetReplayByUsernameAsync
  name: GetReplayByUsernameAsync
  nameWithType: OsuApi.GetReplayByUsernameAsync
  fullName: OsuSharp.OsuApi.GetReplayByUsernameAsync
- uid: OsuSharp.Interfaces.IOsuApi.GetReplayByUsernameAsync(System.Int64,System.String,OsuSharp.Misc.GameMode,System.Threading.CancellationToken)
  commentId: M:OsuSharp.Interfaces.IOsuApi.GetReplayByUsernameAsync(System.Int64,System.String,OsuSharp.Misc.GameMode,System.Threading.CancellationToken)
  parent: OsuSharp.Interfaces.IOsuApi
  isExternal: true
  name: GetReplayByUsernameAsync(Int64, String, GameMode, CancellationToken)
  nameWithType: IOsuApi.GetReplayByUsernameAsync(Int64, String, GameMode, CancellationToken)
  fullName: OsuSharp.Interfaces.IOsuApi.GetReplayByUsernameAsync(System.Int64, System.String, OsuSharp.Misc.GameMode, System.Threading.CancellationToken)
  spec.csharp:
  - uid: OsuSharp.Interfaces.IOsuApi.GetReplayByUsernameAsync(System.Int64,System.String,OsuSharp.Misc.GameMode,System.Threading.CancellationToken)
    name: GetReplayByUsernameAsync
    nameWithType: IOsuApi.GetReplayByUsernameAsync
    fullName: OsuSharp.Interfaces.IOsuApi.GetReplayByUsernameAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: OsuSharp.Misc.GameMode
    name: GameMode
    nameWithType: GameMode
    fullName: OsuSharp.Misc.GameMode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OsuSharp.Interfaces.IOsuApi.GetReplayByUsernameAsync(System.Int64,System.String,OsuSharp.Misc.GameMode,System.Threading.CancellationToken)
    name: GetReplayByUsernameAsync
    nameWithType: IOsuApi.GetReplayByUsernameAsync
    fullName: OsuSharp.Interfaces.IOsuApi.GetReplayByUsernameAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: OsuSharp.Misc.GameMode
    name: GameMode
    nameWithType: GameMode
    fullName: OsuSharp.Misc.GameMode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task{OsuSharp.Endpoints.Replay}
  commentId: T:System.Threading.Tasks.Task{OsuSharp.Endpoints.Replay}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<Replay>
  nameWithType: Task<Replay>
  fullName: System.Threading.Tasks.Task<OsuSharp.Endpoints.Replay>
  nameWithType.vb: Task(Of Replay)
  fullName.vb: System.Threading.Tasks.Task(Of OsuSharp.Endpoints.Replay)
  name.vb: Task(Of Replay)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: OsuSharp.Endpoints.Replay
    name: Replay
    nameWithType: Replay
    fullName: OsuSharp.Endpoints.Replay
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: OsuSharp.Endpoints.Replay
    name: Replay
    nameWithType: Replay
    fullName: OsuSharp.Endpoints.Replay
  - name: )
    nameWithType: )
    fullName: )
- uid: OsuSharp.OsuApi.GetReplayByUserid*
  commentId: Overload:OsuSharp.OsuApi.GetReplayByUserid
  name: GetReplayByUserid
  nameWithType: OsuApi.GetReplayByUserid
  fullName: OsuSharp.OsuApi.GetReplayByUserid
- uid: OsuSharp.Interfaces.IOsuApi.GetReplayByUserid(System.Int64,System.Int64,OsuSharp.Misc.GameMode)
  commentId: M:OsuSharp.Interfaces.IOsuApi.GetReplayByUserid(System.Int64,System.Int64,OsuSharp.Misc.GameMode)
  parent: OsuSharp.Interfaces.IOsuApi
  isExternal: true
  name: GetReplayByUserid(Int64, Int64, GameMode)
  nameWithType: IOsuApi.GetReplayByUserid(Int64, Int64, GameMode)
  fullName: OsuSharp.Interfaces.IOsuApi.GetReplayByUserid(System.Int64, System.Int64, OsuSharp.Misc.GameMode)
  spec.csharp:
  - uid: OsuSharp.Interfaces.IOsuApi.GetReplayByUserid(System.Int64,System.Int64,OsuSharp.Misc.GameMode)
    name: GetReplayByUserid
    nameWithType: IOsuApi.GetReplayByUserid
    fullName: OsuSharp.Interfaces.IOsuApi.GetReplayByUserid
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: OsuSharp.Misc.GameMode
    name: GameMode
    nameWithType: GameMode
    fullName: OsuSharp.Misc.GameMode
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OsuSharp.Interfaces.IOsuApi.GetReplayByUserid(System.Int64,System.Int64,OsuSharp.Misc.GameMode)
    name: GetReplayByUserid
    nameWithType: IOsuApi.GetReplayByUserid
    fullName: OsuSharp.Interfaces.IOsuApi.GetReplayByUserid
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: OsuSharp.Misc.GameMode
    name: GameMode
    nameWithType: GameMode
    fullName: OsuSharp.Misc.GameMode
  - name: )
    nameWithType: )
    fullName: )
- uid: OsuSharp.OsuApi.GetReplayByUseridAsync*
  commentId: Overload:OsuSharp.OsuApi.GetReplayByUseridAsync
  name: GetReplayByUseridAsync
  nameWithType: OsuApi.GetReplayByUseridAsync
  fullName: OsuSharp.OsuApi.GetReplayByUseridAsync
- uid: OsuSharp.Interfaces.IOsuApi.GetReplayByUseridAsync(System.Int64,System.Int64,OsuSharp.Misc.GameMode,System.Threading.CancellationToken)
  commentId: M:OsuSharp.Interfaces.IOsuApi.GetReplayByUseridAsync(System.Int64,System.Int64,OsuSharp.Misc.GameMode,System.Threading.CancellationToken)
  parent: OsuSharp.Interfaces.IOsuApi
  isExternal: true
  name: GetReplayByUseridAsync(Int64, Int64, GameMode, CancellationToken)
  nameWithType: IOsuApi.GetReplayByUseridAsync(Int64, Int64, GameMode, CancellationToken)
  fullName: OsuSharp.Interfaces.IOsuApi.GetReplayByUseridAsync(System.Int64, System.Int64, OsuSharp.Misc.GameMode, System.Threading.CancellationToken)
  spec.csharp:
  - uid: OsuSharp.Interfaces.IOsuApi.GetReplayByUseridAsync(System.Int64,System.Int64,OsuSharp.Misc.GameMode,System.Threading.CancellationToken)
    name: GetReplayByUseridAsync
    nameWithType: IOsuApi.GetReplayByUseridAsync
    fullName: OsuSharp.Interfaces.IOsuApi.GetReplayByUseridAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: OsuSharp.Misc.GameMode
    name: GameMode
    nameWithType: GameMode
    fullName: OsuSharp.Misc.GameMode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OsuSharp.Interfaces.IOsuApi.GetReplayByUseridAsync(System.Int64,System.Int64,OsuSharp.Misc.GameMode,System.Threading.CancellationToken)
    name: GetReplayByUseridAsync
    nameWithType: IOsuApi.GetReplayByUseridAsync
    fullName: OsuSharp.Interfaces.IOsuApi.GetReplayByUseridAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: OsuSharp.Misc.GameMode
    name: GameMode
    nameWithType: GameMode
    fullName: OsuSharp.Misc.GameMode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
