### YamlMime:ManagedReference
items:
- uid: OsuSharp.Interfaces.IOsuApi
  commentId: T:OsuSharp.Interfaces.IOsuApi
  id: IOsuApi
  parent: OsuSharp.Interfaces
  children:
  - OsuSharp.Interfaces.IOsuApi.ApiKey
  - OsuSharp.Interfaces.IOsuApi.GetBeatmap(System.Int64,OsuSharp.Misc.BeatmapType,OsuSharp.Misc.GameMode)
  - OsuSharp.Interfaces.IOsuApi.GetBeatmapAsync(System.Int64,OsuSharp.Misc.BeatmapType,OsuSharp.Misc.GameMode,System.Threading.CancellationToken)
  - OsuSharp.Interfaces.IOsuApi.GetBeatmaps(System.Int64,OsuSharp.Misc.BeatmapType,OsuSharp.Misc.GameMode,System.Int32)
  - OsuSharp.Interfaces.IOsuApi.GetBeatmapsAsync(System.Int64,OsuSharp.Misc.BeatmapType,OsuSharp.Misc.GameMode,System.Int32,System.Threading.CancellationToken)
  - OsuSharp.Interfaces.IOsuApi.GetBeatmapsByCreator(System.String,OsuSharp.Misc.GameMode,System.Int32)
  - OsuSharp.Interfaces.IOsuApi.GetBeatmapsByCreatorAsync(System.String,OsuSharp.Misc.GameMode,System.Int32,System.Threading.CancellationToken)
  - OsuSharp.Interfaces.IOsuApi.GetLastBeatmaps(System.Int32)
  - OsuSharp.Interfaces.IOsuApi.GetLastBeatmapsAsync(System.Int32,System.Threading.CancellationToken)
  - OsuSharp.Interfaces.IOsuApi.GetMatch(System.Int64)
  - OsuSharp.Interfaces.IOsuApi.GetMatchAsync(System.Int64,System.Threading.CancellationToken)
  - OsuSharp.Interfaces.IOsuApi.GetReplayByUserid(System.Int64,System.Int64,OsuSharp.Misc.GameMode)
  - OsuSharp.Interfaces.IOsuApi.GetReplayByUseridAsync(System.Int64,System.Int64,OsuSharp.Misc.GameMode,System.Threading.CancellationToken)
  - OsuSharp.Interfaces.IOsuApi.GetReplayByUsername(System.Int64,System.String,OsuSharp.Misc.GameMode)
  - OsuSharp.Interfaces.IOsuApi.GetReplayByUsernameAsync(System.Int64,System.String,OsuSharp.Misc.GameMode,System.Threading.CancellationToken)
  - OsuSharp.Interfaces.IOsuApi.GetScoreByUserid(System.Int64,System.UInt64,OsuSharp.Misc.GameMode)
  - OsuSharp.Interfaces.IOsuApi.GetScoreByUseridAsync(System.Int64,System.Int64,OsuSharp.Misc.GameMode,System.Threading.CancellationToken)
  - OsuSharp.Interfaces.IOsuApi.GetScoreByUsername(System.Int64,System.String,OsuSharp.Misc.GameMode)
  - OsuSharp.Interfaces.IOsuApi.GetScoreByUsernameAsync(System.Int64,System.String,OsuSharp.Misc.GameMode,System.Threading.CancellationToken)
  - OsuSharp.Interfaces.IOsuApi.GetScores(System.Int64,OsuSharp.Misc.GameMode,System.Int32)
  - OsuSharp.Interfaces.IOsuApi.GetScoresAndBeatmap(System.Int64,OsuSharp.Misc.GameMode,System.Int32)
  - OsuSharp.Interfaces.IOsuApi.GetScoresAndBeatmapAsync(System.Int64,OsuSharp.Misc.GameMode,System.Int32,System.Threading.CancellationToken)
  - OsuSharp.Interfaces.IOsuApi.GetScoresAsync(System.Int64,OsuSharp.Misc.GameMode,System.Int32,System.Threading.CancellationToken)
  - OsuSharp.Interfaces.IOsuApi.GetScoresWithUsersAndBeatmap(System.Int64,OsuSharp.Misc.GameMode,System.Int32)
  - OsuSharp.Interfaces.IOsuApi.GetScoresWithUsersAndBeatmapAsync(System.Int64,OsuSharp.Misc.GameMode,System.Int32,System.Threading.CancellationToken)
  - OsuSharp.Interfaces.IOsuApi.GetUserBestAndBeatmapByUserid(System.Int64,OsuSharp.Misc.GameMode,System.Int32)
  - OsuSharp.Interfaces.IOsuApi.GetUserBestAndBeatmapByUseridAsync(System.Int64,OsuSharp.Misc.GameMode,System.Int32,System.Threading.CancellationToken)
  - OsuSharp.Interfaces.IOsuApi.GetUserBestAndBeatmapByUsername(System.String,OsuSharp.Misc.GameMode,System.Int32)
  - OsuSharp.Interfaces.IOsuApi.GetUserBestAndBeatmapByUsernameAsync(System.String,OsuSharp.Misc.GameMode,System.Int32,System.Threading.CancellationToken)
  - OsuSharp.Interfaces.IOsuApi.GetUserBestByUserid(System.Int64,OsuSharp.Misc.GameMode,System.Int32)
  - OsuSharp.Interfaces.IOsuApi.GetUserBestByUseridAsync(System.Int64,OsuSharp.Misc.GameMode,System.Int32,System.Threading.CancellationToken)
  - OsuSharp.Interfaces.IOsuApi.GetUserBestByUsername(System.String,OsuSharp.Misc.GameMode,System.Int32)
  - OsuSharp.Interfaces.IOsuApi.GetUserBestByUsernameAsync(System.String,OsuSharp.Misc.GameMode,System.Int32,System.Threading.CancellationToken)
  - OsuSharp.Interfaces.IOsuApi.GetUserById(System.Int64,OsuSharp.Misc.GameMode)
  - OsuSharp.Interfaces.IOsuApi.GetUserByIdAsync(System.Int64,OsuSharp.Misc.GameMode,System.Threading.CancellationToken)
  - OsuSharp.Interfaces.IOsuApi.GetUserByName(System.String,OsuSharp.Misc.GameMode)
  - OsuSharp.Interfaces.IOsuApi.GetUserByNameAsync(System.String,OsuSharp.Misc.GameMode,System.Threading.CancellationToken)
  - OsuSharp.Interfaces.IOsuApi.GetUserRecentAndBeatmapByUserid(System.Int64,OsuSharp.Misc.GameMode,System.Int32)
  - OsuSharp.Interfaces.IOsuApi.GetUserRecentAndBeatmapByUseridAsync(System.Int64,OsuSharp.Misc.GameMode,System.Int32,System.Threading.CancellationToken)
  - OsuSharp.Interfaces.IOsuApi.GetUserRecentAndBeatmapByUsername(System.String,OsuSharp.Misc.GameMode,System.Int32)
  - OsuSharp.Interfaces.IOsuApi.GetUserRecentAndBeatmapByUsernameAsync(System.String,OsuSharp.Misc.GameMode,System.Int32,System.Threading.CancellationToken)
  - OsuSharp.Interfaces.IOsuApi.GetUserRecentByUserid(System.Int64,OsuSharp.Misc.GameMode,System.Int32)
  - OsuSharp.Interfaces.IOsuApi.GetUserRecentByUseridAsync(System.Int64,OsuSharp.Misc.GameMode,System.Int32,System.Threading.CancellationToken)
  - OsuSharp.Interfaces.IOsuApi.GetUserRecentByUsername(System.String,OsuSharp.Misc.GameMode,System.Int32)
  - OsuSharp.Interfaces.IOsuApi.GetUserRecentByUsernameAsync(System.String,OsuSharp.Misc.GameMode,System.Int32,System.Threading.CancellationToken)
  - OsuSharp.Interfaces.IOsuApi.Logger
  - OsuSharp.Interfaces.IOsuApi.ModsSeparator
  langs:
  - csharp
  - vb
  name: IOsuApi
  nameWithType: IOsuApi
  fullName: OsuSharp.Interfaces.IOsuApi
  type: Interface
  source:
    id: IOsuApi
    path: ''
    startLine: 3046
  assemblies:
  - cs.temp.dll
  namespace: OsuSharp.Interfaces
  syntax:
    content: public interface IOsuApi
    content.vb: Public Interface IOsuApi
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: OsuSharp.Interfaces.IOsuApi.ApiKey
  commentId: P:OsuSharp.Interfaces.IOsuApi.ApiKey
  id: ApiKey
  parent: OsuSharp.Interfaces.IOsuApi
  langs:
  - csharp
  - vb
  name: ApiKey
  nameWithType: IOsuApi.ApiKey
  fullName: OsuSharp.Interfaces.IOsuApi.ApiKey
  type: Property
  source:
    id: ApiKey
    path: ''
    startLine: 3051
  assemblies:
  - cs.temp.dll
  namespace: OsuSharp.Interfaces
  summary: "\nApiKey from Osu!Api\n"
  example: []
  syntax:
    content: string ApiKey { get; }
    parameters: []
    return:
      type: System.String
    content.vb: ReadOnly Property ApiKey As String
  overload: OsuSharp.Interfaces.IOsuApi.ApiKey*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: OsuSharp.Interfaces.IOsuApi.ModsSeparator
  commentId: P:OsuSharp.Interfaces.IOsuApi.ModsSeparator
  id: ModsSeparator
  parent: OsuSharp.Interfaces.IOsuApi
  langs:
  - csharp
  - vb
  name: ModsSeparator
  nameWithType: IOsuApi.ModsSeparator
  fullName: OsuSharp.Interfaces.IOsuApi.ModsSeparator
  type: Property
  source:
    id: ModsSeparator
    path: ''
    startLine: 3056
  assemblies:
  - cs.temp.dll
  namespace: OsuSharp.Interfaces
  summary: "\nSeparator used between each mod.\n"
  example: []
  syntax:
    content: string ModsSeparator { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Property ModsSeparator As String
  overload: OsuSharp.Interfaces.IOsuApi.ModsSeparator*
  modifiers.csharp:
  - get
  - set
- uid: OsuSharp.Interfaces.IOsuApi.Logger
  commentId: P:OsuSharp.Interfaces.IOsuApi.Logger
  id: Logger
  parent: OsuSharp.Interfaces.IOsuApi
  langs:
  - csharp
  - vb
  name: Logger
  nameWithType: IOsuApi.Logger
  fullName: OsuSharp.Interfaces.IOsuApi.Logger
  type: Property
  source:
    id: Logger
    path: ''
    startLine: 3061
  assemblies:
  - cs.temp.dll
  namespace: OsuSharp.Interfaces
  summary: "\nOsuSharp logger.\n"
  example: []
  syntax:
    content: IOsuSharpLogger Logger { get; }
    parameters: []
    return:
      type: OsuSharp.Interfaces.IOsuSharpLogger
    content.vb: ReadOnly Property Logger As IOsuSharpLogger
  overload: OsuSharp.Interfaces.IOsuApi.Logger*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: OsuSharp.Interfaces.IOsuApi.GetBeatmap(System.Int64,OsuSharp.Misc.BeatmapType,OsuSharp.Misc.GameMode)
  commentId: M:OsuSharp.Interfaces.IOsuApi.GetBeatmap(System.Int64,OsuSharp.Misc.BeatmapType,OsuSharp.Misc.GameMode)
  id: GetBeatmap(System.Int64,OsuSharp.Misc.BeatmapType,OsuSharp.Misc.GameMode)
  parent: OsuSharp.Interfaces.IOsuApi
  langs:
  - csharp
  - vb
  name: GetBeatmap(Int64, BeatmapType, GameMode)
  nameWithType: IOsuApi.GetBeatmap(Int64, BeatmapType, GameMode)
  fullName: OsuSharp.Interfaces.IOsuApi.GetBeatmap(System.Int64, OsuSharp.Misc.BeatmapType, OsuSharp.Misc.GameMode)
  type: Method
  source:
    id: GetBeatmap
    path: ''
    startLine: 3072
  assemblies:
  - cs.temp.dll
  namespace: OsuSharp.Interfaces
  summary: "\nMethod that returns a <xref href=\"OsuSharp.Endpoints.Beatmap\" data-throw-if-not-resolved=\"false\"></xref>. It requires a valid BeatmapId.\n"
  example: []
  syntax:
    content: Beatmap GetBeatmap(long beatmapId, BeatmapType bmType = BeatmapType.ByDifficulty, GameMode gameMode = GameMode.Standard)
    parameters:
    - id: beatmapId
      type: System.Int64
      description: Id of the beatmap.
    - id: bmType
      type: OsuSharp.Misc.BeatmapType
      description: Type of the beatmap. Beatmapset or difficulty.
    - id: gameMode
      type: OsuSharp.Misc.GameMode
      description: Gamemode of the beatmap. Standard, Taiko, Catch or Mania.
    return:
      type: OsuSharp.Endpoints.Beatmap
      description: "\n<xref href=\"OsuSharp.Endpoints.Beatmap\" data-throw-if-not-resolved=\"false\"></xref>\n"
    content.vb: Function GetBeatmap(beatmapId As Long, bmType As BeatmapType = BeatmapType.ByDifficulty, gameMode As GameMode = GameMode.Standard) As Beatmap
  overload: OsuSharp.Interfaces.IOsuApi.GetBeatmap*
- uid: OsuSharp.Interfaces.IOsuApi.GetBeatmapAsync(System.Int64,OsuSharp.Misc.BeatmapType,OsuSharp.Misc.GameMode,System.Threading.CancellationToken)
  commentId: M:OsuSharp.Interfaces.IOsuApi.GetBeatmapAsync(System.Int64,OsuSharp.Misc.BeatmapType,OsuSharp.Misc.GameMode,System.Threading.CancellationToken)
  id: GetBeatmapAsync(System.Int64,OsuSharp.Misc.BeatmapType,OsuSharp.Misc.GameMode,System.Threading.CancellationToken)
  parent: OsuSharp.Interfaces.IOsuApi
  langs:
  - csharp
  - vb
  name: GetBeatmapAsync(Int64, BeatmapType, GameMode, CancellationToken)
  nameWithType: IOsuApi.GetBeatmapAsync(Int64, BeatmapType, GameMode, CancellationToken)
  fullName: OsuSharp.Interfaces.IOsuApi.GetBeatmapAsync(System.Int64, OsuSharp.Misc.BeatmapType, OsuSharp.Misc.GameMode, System.Threading.CancellationToken)
  type: Method
  source:
    id: GetBeatmapAsync
    path: ''
    startLine: 3085
  assemblies:
  - cs.temp.dll
  namespace: OsuSharp.Interfaces
  summary: "\nMethod that returns a <xref href=\"OsuSharp.Endpoints.Beatmap\" data-throw-if-not-resolved=\"false\"></xref>. It requires a valid BeatmapId.\n"
  example: []
  syntax:
    content: Task<Beatmap> GetBeatmapAsync(long beatmapId, BeatmapType bmType = BeatmapType.ByDifficulty, GameMode gameMode = GameMode.Standard, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: beatmapId
      type: System.Int64
      description: Id of the beatmap.
    - id: bmType
      type: OsuSharp.Misc.BeatmapType
      description: Type of the beatmap. Beatmapset or difficulty.
    - id: gameMode
      type: OsuSharp.Misc.GameMode
      description: Gamemode of the beatmap. Standard, Taiko, Catch or Mania.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: Cancellation token
    return:
      type: System.Threading.Tasks.Task{OsuSharp.Endpoints.Beatmap}
      description: "\n<xref href=\"OsuSharp.Endpoints.Beatmap\" data-throw-if-not-resolved=\"false\"></xref>\n"
    content.vb: Function GetBeatmapAsync(beatmapId As Long, bmType As BeatmapType = BeatmapType.ByDifficulty, gameMode As GameMode = GameMode.Standard, cancellationToken As CancellationToken = Nothing) As Task(Of Beatmap)
  overload: OsuSharp.Interfaces.IOsuApi.GetBeatmapAsync*
- uid: OsuSharp.Interfaces.IOsuApi.GetBeatmapsByCreator(System.String,OsuSharp.Misc.GameMode,System.Int32)
  commentId: M:OsuSharp.Interfaces.IOsuApi.GetBeatmapsByCreator(System.String,OsuSharp.Misc.GameMode,System.Int32)
  id: GetBeatmapsByCreator(System.String,OsuSharp.Misc.GameMode,System.Int32)
  parent: OsuSharp.Interfaces.IOsuApi
  langs:
  - csharp
  - vb
  name: GetBeatmapsByCreator(String, GameMode, Int32)
  nameWithType: IOsuApi.GetBeatmapsByCreator(String, GameMode, Int32)
  fullName: OsuSharp.Interfaces.IOsuApi.GetBeatmapsByCreator(System.String, OsuSharp.Misc.GameMode, System.Int32)
  type: Method
  source:
    id: GetBeatmapsByCreator
    path: ''
    startLine: 3097
  assemblies:
  - cs.temp.dll
  namespace: OsuSharp.Interfaces
  summary: "\nMethod that returns a list of <xref href=\"OsuSharp.Endpoints.Beatmap\" data-throw-if-not-resolved=\"false\"></xref> by the given creator&apos;s nickname.\n"
  example: []
  syntax:
    content: List<Beatmap> GetBeatmapsByCreator(string username, GameMode gameMode = GameMode.Standard, int limit = 500)
    parameters:
    - id: username
      type: System.String
      description: Author&apos;s nickname of the beatmap.
    - id: gameMode
      type: OsuSharp.Misc.GameMode
      description: Gamemode of the beatmap. Standard, Taiko, Catch or Mania.
    - id: limit
      type: System.Int32
      description: 'Limit of the output. Default and maximum : 500.'
    return:
      type: System.Collections.Generic.List{OsuSharp.Endpoints.Beatmap}
      description: "\n<xref href=\"System.Collections.Generic.List%601\" data-throw-if-not-resolved=\"false\"></xref>\n"
    content.vb: Function GetBeatmapsByCreator(username As String, gameMode As GameMode = GameMode.Standard, limit As Integer = 500) As List(Of Beatmap)
  overload: OsuSharp.Interfaces.IOsuApi.GetBeatmapsByCreator*
- uid: OsuSharp.Interfaces.IOsuApi.GetBeatmapsByCreatorAsync(System.String,OsuSharp.Misc.GameMode,System.Int32,System.Threading.CancellationToken)
  commentId: M:OsuSharp.Interfaces.IOsuApi.GetBeatmapsByCreatorAsync(System.String,OsuSharp.Misc.GameMode,System.Int32,System.Threading.CancellationToken)
  id: GetBeatmapsByCreatorAsync(System.String,OsuSharp.Misc.GameMode,System.Int32,System.Threading.CancellationToken)
  parent: OsuSharp.Interfaces.IOsuApi
  langs:
  - csharp
  - vb
  name: GetBeatmapsByCreatorAsync(String, GameMode, Int32, CancellationToken)
  nameWithType: IOsuApi.GetBeatmapsByCreatorAsync(String, GameMode, Int32, CancellationToken)
  fullName: OsuSharp.Interfaces.IOsuApi.GetBeatmapsByCreatorAsync(System.String, OsuSharp.Misc.GameMode, System.Int32, System.Threading.CancellationToken)
  type: Method
  source:
    id: GetBeatmapsByCreatorAsync
    path: ''
    startLine: 3110
  assemblies:
  - cs.temp.dll
  namespace: OsuSharp.Interfaces
  summary: "\nMethod that returns a list of <xref href=\"OsuSharp.Endpoints.Beatmap\" data-throw-if-not-resolved=\"false\"></xref> by the given creator&apos;s nickname.\n"
  example: []
  syntax:
    content: Task<List<Beatmap>> GetBeatmapsByCreatorAsync(string username, GameMode gameMode = GameMode.Standard, int limit = 500, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: username
      type: System.String
      description: Author&apos;s nickname of the beatmap.
    - id: gameMode
      type: OsuSharp.Misc.GameMode
      description: Gamemode of the beatmap. Standard, Taiko, Catch or Mania.
    - id: limit
      type: System.Int32
      description: 'Limit of the output. Default and maximum : 500.'
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: Cancellation token
    return:
      type: System.Threading.Tasks.Task{System.Collections.Generic.List{OsuSharp.Endpoints.Beatmap}}
      description: "\n<xref href=\"System.Collections.Generic.List%601\" data-throw-if-not-resolved=\"false\"></xref>\n"
    content.vb: Function GetBeatmapsByCreatorAsync(username As String, gameMode As GameMode = GameMode.Standard, limit As Integer = 500, cancellationToken As CancellationToken = Nothing) As Task(Of List(Of Beatmap))
  overload: OsuSharp.Interfaces.IOsuApi.GetBeatmapsByCreatorAsync*
- uid: OsuSharp.Interfaces.IOsuApi.GetBeatmaps(System.Int64,OsuSharp.Misc.BeatmapType,OsuSharp.Misc.GameMode,System.Int32)
  commentId: M:OsuSharp.Interfaces.IOsuApi.GetBeatmaps(System.Int64,OsuSharp.Misc.BeatmapType,OsuSharp.Misc.GameMode,System.Int32)
  id: GetBeatmaps(System.Int64,OsuSharp.Misc.BeatmapType,OsuSharp.Misc.GameMode,System.Int32)
  parent: OsuSharp.Interfaces.IOsuApi
  langs:
  - csharp
  - vb
  name: GetBeatmaps(Int64, BeatmapType, GameMode, Int32)
  nameWithType: IOsuApi.GetBeatmaps(Int64, BeatmapType, GameMode, Int32)
  fullName: OsuSharp.Interfaces.IOsuApi.GetBeatmaps(System.Int64, OsuSharp.Misc.BeatmapType, OsuSharp.Misc.GameMode, System.Int32)
  type: Method
  source:
    id: GetBeatmaps
    path: ''
    startLine: 3123
  assemblies:
  - cs.temp.dll
  namespace: OsuSharp.Interfaces
  summary: "\nMethod that returns a list of <xref href=\"OsuSharp.Endpoints.Beatmap\" data-throw-if-not-resolved=\"false\"></xref> by the given beatmapset id.\n"
  example: []
  syntax:
    content: List<Beatmap> GetBeatmaps(long id, BeatmapType bmType = BeatmapType.ByBeatmap, GameMode gameMode = GameMode.Standard, int limit = 500)
    parameters:
    - id: id
      type: System.Int64
      description: Id of the beatmapset.
    - id: bmType
      type: OsuSharp.Misc.BeatmapType
      description: Type of the beatmap. ByBeatmap is required.
    - id: gameMode
      type: OsuSharp.Misc.GameMode
      description: Gamemode of the beatmap. Standard, Taiko, Catch or Mania.
    - id: limit
      type: System.Int32
      description: 'Limit of the ouput. Default and maximum : 500.'
    return:
      type: System.Collections.Generic.List{OsuSharp.Endpoints.Beatmap}
      description: "\n<xref href=\"System.Collections.Generic.List%601\" data-throw-if-not-resolved=\"false\"></xref>\n"
    content.vb: Function GetBeatmaps(id As Long, bmType As BeatmapType = BeatmapType.ByBeatmap, gameMode As GameMode = GameMode.Standard, limit As Integer = 500) As List(Of Beatmap)
  overload: OsuSharp.Interfaces.IOsuApi.GetBeatmaps*
- uid: OsuSharp.Interfaces.IOsuApi.GetBeatmapsAsync(System.Int64,OsuSharp.Misc.BeatmapType,OsuSharp.Misc.GameMode,System.Int32,System.Threading.CancellationToken)
  commentId: M:OsuSharp.Interfaces.IOsuApi.GetBeatmapsAsync(System.Int64,OsuSharp.Misc.BeatmapType,OsuSharp.Misc.GameMode,System.Int32,System.Threading.CancellationToken)
  id: GetBeatmapsAsync(System.Int64,OsuSharp.Misc.BeatmapType,OsuSharp.Misc.GameMode,System.Int32,System.Threading.CancellationToken)
  parent: OsuSharp.Interfaces.IOsuApi
  langs:
  - csharp
  - vb
  name: GetBeatmapsAsync(Int64, BeatmapType, GameMode, Int32, CancellationToken)
  nameWithType: IOsuApi.GetBeatmapsAsync(Int64, BeatmapType, GameMode, Int32, CancellationToken)
  fullName: OsuSharp.Interfaces.IOsuApi.GetBeatmapsAsync(System.Int64, OsuSharp.Misc.BeatmapType, OsuSharp.Misc.GameMode, System.Int32, System.Threading.CancellationToken)
  type: Method
  source:
    id: GetBeatmapsAsync
    path: ''
    startLine: 3137
  assemblies:
  - cs.temp.dll
  namespace: OsuSharp.Interfaces
  summary: "\nMethod that returns a list of <xref href=\"OsuSharp.Endpoints.Beatmap\" data-throw-if-not-resolved=\"false\"></xref> by the given beatmapset id.\n"
  example: []
  syntax:
    content: Task<List<Beatmap>> GetBeatmapsAsync(long id, BeatmapType bmType = BeatmapType.ByBeatmap, GameMode gameMode = GameMode.Standard, int limit = 500, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: id
      type: System.Int64
      description: Id of the beatmapset.
    - id: bmType
      type: OsuSharp.Misc.BeatmapType
      description: Type of the beatmap. ByBeatmap is required.
    - id: gameMode
      type: OsuSharp.Misc.GameMode
      description: Gamemode of the beatmap. Standard, Taiko, Catch or Mania.
    - id: limit
      type: System.Int32
      description: 'Limit of the ouput. Default and maximum : 500.'
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: Cancellation token
    return:
      type: System.Threading.Tasks.Task{System.Collections.Generic.List{OsuSharp.Endpoints.Beatmap}}
      description: "\n<xref href=\"System.Collections.Generic.List%601\" data-throw-if-not-resolved=\"false\"></xref>\n"
    content.vb: Function GetBeatmapsAsync(id As Long, bmType As BeatmapType = BeatmapType.ByBeatmap, gameMode As GameMode = GameMode.Standard, limit As Integer = 500, cancellationToken As CancellationToken = Nothing) As Task(Of List(Of Beatmap))
  overload: OsuSharp.Interfaces.IOsuApi.GetBeatmapsAsync*
- uid: OsuSharp.Interfaces.IOsuApi.GetLastBeatmaps(System.Int32)
  commentId: M:OsuSharp.Interfaces.IOsuApi.GetLastBeatmaps(System.Int32)
  id: GetLastBeatmaps(System.Int32)
  parent: OsuSharp.Interfaces.IOsuApi
  langs:
  - csharp
  - vb
  name: GetLastBeatmaps(Int32)
  nameWithType: IOsuApi.GetLastBeatmaps(Int32)
  fullName: OsuSharp.Interfaces.IOsuApi.GetLastBeatmaps(System.Int32)
  type: Method
  source:
    id: GetLastBeatmaps
    path: ''
    startLine: 3147
  assemblies:
  - cs.temp.dll
  namespace: OsuSharp.Interfaces
  summary: "\nMethod that returns a list of lasts uploaded <xref href=\"OsuSharp.Endpoints.Beatmap\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: List<Beatmap> GetLastBeatmaps(int limit = 500)
    parameters:
    - id: limit
      type: System.Int32
      description: 'Limit of the output. Default and maximum : 500.'
    return:
      type: System.Collections.Generic.List{OsuSharp.Endpoints.Beatmap}
      description: "\n<xref href=\"System.Collections.Generic.List%601\" data-throw-if-not-resolved=\"false\"></xref>\n"
    content.vb: Function GetLastBeatmaps(limit As Integer = 500) As List(Of Beatmap)
  overload: OsuSharp.Interfaces.IOsuApi.GetLastBeatmaps*
- uid: OsuSharp.Interfaces.IOsuApi.GetLastBeatmapsAsync(System.Int32,System.Threading.CancellationToken)
  commentId: M:OsuSharp.Interfaces.IOsuApi.GetLastBeatmapsAsync(System.Int32,System.Threading.CancellationToken)
  id: GetLastBeatmapsAsync(System.Int32,System.Threading.CancellationToken)
  parent: OsuSharp.Interfaces.IOsuApi
  langs:
  - csharp
  - vb
  name: GetLastBeatmapsAsync(Int32, CancellationToken)
  nameWithType: IOsuApi.GetLastBeatmapsAsync(Int32, CancellationToken)
  fullName: OsuSharp.Interfaces.IOsuApi.GetLastBeatmapsAsync(System.Int32, System.Threading.CancellationToken)
  type: Method
  source:
    id: GetLastBeatmapsAsync
    path: ''
    startLine: 3157
  assemblies:
  - cs.temp.dll
  namespace: OsuSharp.Interfaces
  summary: "\nMethod that returns a list of lasts uploaded <xref href=\"OsuSharp.Endpoints.Beatmap\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: Task<List<Beatmap>> GetLastBeatmapsAsync(int limit, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: limit
      type: System.Int32
      description: 'Limit of the output. Default and maximum : 500.'
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: Cancellation token
    return:
      type: System.Threading.Tasks.Task{System.Collections.Generic.List{OsuSharp.Endpoints.Beatmap}}
      description: "\n<xref href=\"System.Collections.Generic.List%601\" data-throw-if-not-resolved=\"false\"></xref>\n"
    content.vb: Function GetLastBeatmapsAsync(limit As Integer, cancellationToken As CancellationToken = Nothing) As Task(Of List(Of Beatmap))
  overload: OsuSharp.Interfaces.IOsuApi.GetLastBeatmapsAsync*
- uid: OsuSharp.Interfaces.IOsuApi.GetUserByName(System.String,OsuSharp.Misc.GameMode)
  commentId: M:OsuSharp.Interfaces.IOsuApi.GetUserByName(System.String,OsuSharp.Misc.GameMode)
  id: GetUserByName(System.String,OsuSharp.Misc.GameMode)
  parent: OsuSharp.Interfaces.IOsuApi
  langs:
  - csharp
  - vb
  name: GetUserByName(String, GameMode)
  nameWithType: IOsuApi.GetUserByName(String, GameMode)
  fullName: OsuSharp.Interfaces.IOsuApi.GetUserByName(System.String, OsuSharp.Misc.GameMode)
  type: Method
  source:
    id: GetUserByName
    path: ''
    startLine: 3167
  assemblies:
  - cs.temp.dll
  namespace: OsuSharp.Interfaces
  summary: "\nMethod that returns a <xref href=\"OsuSharp.Endpoints.User\" data-throw-if-not-resolved=\"false\"></xref> by the given Username.\n"
  example: []
  syntax:
    content: User GetUserByName(string username, GameMode gameMode = GameMode.Standard)
    parameters:
    - id: username
      type: System.String
      description: Username of the user.
    - id: gameMode
      type: OsuSharp.Misc.GameMode
      description: Gamemode of the user. Standard, Taiko, Catch or Mania.
    return:
      type: OsuSharp.Endpoints.User
      description: "\n<xref href=\"OsuSharp.Endpoints.User\" data-throw-if-not-resolved=\"false\"></xref>\n"
    content.vb: Function GetUserByName(username As String, gameMode As GameMode = GameMode.Standard) As User
  overload: OsuSharp.Interfaces.IOsuApi.GetUserByName*
- uid: OsuSharp.Interfaces.IOsuApi.GetUserByNameAsync(System.String,OsuSharp.Misc.GameMode,System.Threading.CancellationToken)
  commentId: M:OsuSharp.Interfaces.IOsuApi.GetUserByNameAsync(System.String,OsuSharp.Misc.GameMode,System.Threading.CancellationToken)
  id: GetUserByNameAsync(System.String,OsuSharp.Misc.GameMode,System.Threading.CancellationToken)
  parent: OsuSharp.Interfaces.IOsuApi
  langs:
  - csharp
  - vb
  name: GetUserByNameAsync(String, GameMode, CancellationToken)
  nameWithType: IOsuApi.GetUserByNameAsync(String, GameMode, CancellationToken)
  fullName: OsuSharp.Interfaces.IOsuApi.GetUserByNameAsync(System.String, OsuSharp.Misc.GameMode, System.Threading.CancellationToken)
  type: Method
  source:
    id: GetUserByNameAsync
    path: ''
    startLine: 3178
  assemblies:
  - cs.temp.dll
  namespace: OsuSharp.Interfaces
  summary: "\nMethod that returns a <xref href=\"OsuSharp.Endpoints.User\" data-throw-if-not-resolved=\"false\"></xref> by the given Username.\n"
  example: []
  syntax:
    content: Task<User> GetUserByNameAsync(string username, GameMode gameMode = GameMode.Standard, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: username
      type: System.String
      description: Username of the user.
    - id: gameMode
      type: OsuSharp.Misc.GameMode
      description: Gamemode of the user. Standard, Taiko, Catch or Mania.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: Cancellation token
    return:
      type: System.Threading.Tasks.Task{OsuSharp.Endpoints.User}
      description: "\n<xref href=\"OsuSharp.Endpoints.User\" data-throw-if-not-resolved=\"false\"></xref>\n"
    content.vb: Function GetUserByNameAsync(username As String, gameMode As GameMode = GameMode.Standard, cancellationToken As CancellationToken = Nothing) As Task(Of User)
  overload: OsuSharp.Interfaces.IOsuApi.GetUserByNameAsync*
- uid: OsuSharp.Interfaces.IOsuApi.GetUserById(System.Int64,OsuSharp.Misc.GameMode)
  commentId: M:OsuSharp.Interfaces.IOsuApi.GetUserById(System.Int64,OsuSharp.Misc.GameMode)
  id: GetUserById(System.Int64,OsuSharp.Misc.GameMode)
  parent: OsuSharp.Interfaces.IOsuApi
  langs:
  - csharp
  - vb
  name: GetUserById(Int64, GameMode)
  nameWithType: IOsuApi.GetUserById(Int64, GameMode)
  fullName: OsuSharp.Interfaces.IOsuApi.GetUserById(System.Int64, OsuSharp.Misc.GameMode)
  type: Method
  source:
    id: GetUserById
    path: ''
    startLine: 3189
  assemblies:
  - cs.temp.dll
  namespace: OsuSharp.Interfaces
  summary: "\nMethod that returns a <xref href=\"OsuSharp.Endpoints.User\" data-throw-if-not-resolved=\"false\"></xref> by the given Userid.\n"
  example: []
  syntax:
    content: User GetUserById(long userid, GameMode gameMode = GameMode.Standard)
    parameters:
    - id: userid
      type: System.Int64
      description: Id of the user.
    - id: gameMode
      type: OsuSharp.Misc.GameMode
      description: Gamemode of the user. Standard, Taiko, Catch or Mania.
    return:
      type: OsuSharp.Endpoints.User
      description: "\n<xref href=\"OsuSharp.Endpoints.User\" data-throw-if-not-resolved=\"false\"></xref>\n"
    content.vb: Function GetUserById(userid As Long, gameMode As GameMode = GameMode.Standard) As User
  overload: OsuSharp.Interfaces.IOsuApi.GetUserById*
- uid: OsuSharp.Interfaces.IOsuApi.GetUserByIdAsync(System.Int64,OsuSharp.Misc.GameMode,System.Threading.CancellationToken)
  commentId: M:OsuSharp.Interfaces.IOsuApi.GetUserByIdAsync(System.Int64,OsuSharp.Misc.GameMode,System.Threading.CancellationToken)
  id: GetUserByIdAsync(System.Int64,OsuSharp.Misc.GameMode,System.Threading.CancellationToken)
  parent: OsuSharp.Interfaces.IOsuApi
  langs:
  - csharp
  - vb
  name: GetUserByIdAsync(Int64, GameMode, CancellationToken)
  nameWithType: IOsuApi.GetUserByIdAsync(Int64, GameMode, CancellationToken)
  fullName: OsuSharp.Interfaces.IOsuApi.GetUserByIdAsync(System.Int64, OsuSharp.Misc.GameMode, System.Threading.CancellationToken)
  type: Method
  source:
    id: GetUserByIdAsync
    path: ''
    startLine: 3200
  assemblies:
  - cs.temp.dll
  namespace: OsuSharp.Interfaces
  summary: "\nMethod that returns a <xref href=\"OsuSharp.Endpoints.User\" data-throw-if-not-resolved=\"false\"></xref> by the given Userid.\n"
  example: []
  syntax:
    content: Task<User> GetUserByIdAsync(long userid, GameMode gameMode = GameMode.Standard, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: userid
      type: System.Int64
      description: Id of the user.
    - id: gameMode
      type: OsuSharp.Misc.GameMode
      description: Gamemode of the user. Standard, Taiko, Catch or Mania.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: Cancellation token
    return:
      type: System.Threading.Tasks.Task{OsuSharp.Endpoints.User}
      description: "\n<xref href=\"OsuSharp.Endpoints.User\" data-throw-if-not-resolved=\"false\"></xref>\n"
    content.vb: Function GetUserByIdAsync(userid As Long, gameMode As GameMode = GameMode.Standard, cancellationToken As CancellationToken = Nothing) As Task(Of User)
  overload: OsuSharp.Interfaces.IOsuApi.GetUserByIdAsync*
- uid: OsuSharp.Interfaces.IOsuApi.GetScoreByUsername(System.Int64,System.String,OsuSharp.Misc.GameMode)
  commentId: M:OsuSharp.Interfaces.IOsuApi.GetScoreByUsername(System.Int64,System.String,OsuSharp.Misc.GameMode)
  id: GetScoreByUsername(System.Int64,System.String,OsuSharp.Misc.GameMode)
  parent: OsuSharp.Interfaces.IOsuApi
  langs:
  - csharp
  - vb
  name: GetScoreByUsername(Int64, String, GameMode)
  nameWithType: IOsuApi.GetScoreByUsername(Int64, String, GameMode)
  fullName: OsuSharp.Interfaces.IOsuApi.GetScoreByUsername(System.Int64, System.String, OsuSharp.Misc.GameMode)
  type: Method
  source:
    id: GetScoreByUsername
    path: ''
    startLine: 3211
  assemblies:
  - cs.temp.dll
  namespace: OsuSharp.Interfaces
  summary: "\nMethod that returns a <xref href=\"OsuSharp.Endpoints.Score\" data-throw-if-not-resolved=\"false\"></xref> by the given beatmapid and username.\n"
  example: []
  syntax:
    content: Score GetScoreByUsername(long beatmapid, string username, GameMode gameMode = GameMode.Standard)
    parameters:
    - id: beatmapid
      type: System.Int64
      description: Id of the beatmap. Must be the id of a difficulty.
    - id: username
      type: System.String
      description: Username of the user.
    - id: gameMode
      type: OsuSharp.Misc.GameMode
      description: Gamemode of the play. Standard, Taiko, Catch or Mania.
    return:
      type: OsuSharp.Endpoints.Score
      description: "\n<xref href=\"OsuSharp.Endpoints.Score\" data-throw-if-not-resolved=\"false\"></xref>\n"
    content.vb: Function GetScoreByUsername(beatmapid As Long, username As String, gameMode As GameMode = GameMode.Standard) As Score
  overload: OsuSharp.Interfaces.IOsuApi.GetScoreByUsername*
- uid: OsuSharp.Interfaces.IOsuApi.GetScoreByUsernameAsync(System.Int64,System.String,OsuSharp.Misc.GameMode,System.Threading.CancellationToken)
  commentId: M:OsuSharp.Interfaces.IOsuApi.GetScoreByUsernameAsync(System.Int64,System.String,OsuSharp.Misc.GameMode,System.Threading.CancellationToken)
  id: GetScoreByUsernameAsync(System.Int64,System.String,OsuSharp.Misc.GameMode,System.Threading.CancellationToken)
  parent: OsuSharp.Interfaces.IOsuApi
  langs:
  - csharp
  - vb
  name: GetScoreByUsernameAsync(Int64, String, GameMode, CancellationToken)
  nameWithType: IOsuApi.GetScoreByUsernameAsync(Int64, String, GameMode, CancellationToken)
  fullName: OsuSharp.Interfaces.IOsuApi.GetScoreByUsernameAsync(System.Int64, System.String, OsuSharp.Misc.GameMode, System.Threading.CancellationToken)
  type: Method
  source:
    id: GetScoreByUsernameAsync
    path: ''
    startLine: 3223
  assemblies:
  - cs.temp.dll
  namespace: OsuSharp.Interfaces
  summary: "\nMethod that returns a <xref href=\"OsuSharp.Endpoints.Score\" data-throw-if-not-resolved=\"false\"></xref> by the given beatmapid and username.\n"
  example: []
  syntax:
    content: Task<Score> GetScoreByUsernameAsync(long beatmapid, string username, GameMode gameMode = GameMode.Standard, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: beatmapid
      type: System.Int64
      description: Id of the beatmap. Must be the id of a difficulty.
    - id: username
      type: System.String
      description: Username of the user.
    - id: gameMode
      type: OsuSharp.Misc.GameMode
      description: Gamemode of the play. Standard, Taiko, Catch or Mania.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: Cancellation token
    return:
      type: System.Threading.Tasks.Task{OsuSharp.Endpoints.Score}
      description: "\n<xref href=\"OsuSharp.Endpoints.Score\" data-throw-if-not-resolved=\"false\"></xref>\n"
    content.vb: Function GetScoreByUsernameAsync(beatmapid As Long, username As String, gameMode As GameMode = GameMode.Standard, cancellationToken As CancellationToken = Nothing) As Task(Of Score)
  overload: OsuSharp.Interfaces.IOsuApi.GetScoreByUsernameAsync*
- uid: OsuSharp.Interfaces.IOsuApi.GetScoreByUserid(System.Int64,System.UInt64,OsuSharp.Misc.GameMode)
  commentId: M:OsuSharp.Interfaces.IOsuApi.GetScoreByUserid(System.Int64,System.UInt64,OsuSharp.Misc.GameMode)
  id: GetScoreByUserid(System.Int64,System.UInt64,OsuSharp.Misc.GameMode)
  parent: OsuSharp.Interfaces.IOsuApi
  langs:
  - csharp
  - vb
  name: GetScoreByUserid(Int64, UInt64, GameMode)
  nameWithType: IOsuApi.GetScoreByUserid(Int64, UInt64, GameMode)
  fullName: OsuSharp.Interfaces.IOsuApi.GetScoreByUserid(System.Int64, System.UInt64, OsuSharp.Misc.GameMode)
  type: Method
  source:
    id: GetScoreByUserid
    path: ''
    startLine: 3235
  assemblies:
  - cs.temp.dll
  namespace: OsuSharp.Interfaces
  summary: "\nMethod that returns a <xref href=\"OsuSharp.Endpoints.Score\" data-throw-if-not-resolved=\"false\"></xref> by the given beatmapid and userid.\n"
  example: []
  syntax:
    content: Score GetScoreByUserid(long beatmapid, ulong userid, GameMode gameMode = GameMode.Standard)
    parameters:
    - id: beatmapid
      type: System.Int64
      description: Id of the beatmap. Must be the id of a difficulty.
    - id: userid
      type: System.UInt64
      description: Id of the user.
    - id: gameMode
      type: OsuSharp.Misc.GameMode
      description: Gamemode of the play. Standard, Taiko, Catch or Mania.
    return:
      type: OsuSharp.Endpoints.Score
      description: "\n<xref href=\"OsuSharp.Endpoints.Score\" data-throw-if-not-resolved=\"false\"></xref>\n"
    content.vb: Function GetScoreByUserid(beatmapid As Long, userid As ULong, gameMode As GameMode = GameMode.Standard) As Score
  overload: OsuSharp.Interfaces.IOsuApi.GetScoreByUserid*
- uid: OsuSharp.Interfaces.IOsuApi.GetScoreByUseridAsync(System.Int64,System.Int64,OsuSharp.Misc.GameMode,System.Threading.CancellationToken)
  commentId: M:OsuSharp.Interfaces.IOsuApi.GetScoreByUseridAsync(System.Int64,System.Int64,OsuSharp.Misc.GameMode,System.Threading.CancellationToken)
  id: GetScoreByUseridAsync(System.Int64,System.Int64,OsuSharp.Misc.GameMode,System.Threading.CancellationToken)
  parent: OsuSharp.Interfaces.IOsuApi
  langs:
  - csharp
  - vb
  name: GetScoreByUseridAsync(Int64, Int64, GameMode, CancellationToken)
  nameWithType: IOsuApi.GetScoreByUseridAsync(Int64, Int64, GameMode, CancellationToken)
  fullName: OsuSharp.Interfaces.IOsuApi.GetScoreByUseridAsync(System.Int64, System.Int64, OsuSharp.Misc.GameMode, System.Threading.CancellationToken)
  type: Method
  source:
    id: GetScoreByUseridAsync
    path: ''
    startLine: 3247
  assemblies:
  - cs.temp.dll
  namespace: OsuSharp.Interfaces
  summary: "\nMethod that returns a <xref href=\"OsuSharp.Endpoints.Score\" data-throw-if-not-resolved=\"false\"></xref> by the given beatmapid and userid.\n"
  example: []
  syntax:
    content: Task<Score> GetScoreByUseridAsync(long beatmapid, long userid, GameMode gameMode = GameMode.Standard, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: beatmapid
      type: System.Int64
      description: Id of the beatmap. Must be the id of a difficulty.
    - id: userid
      type: System.Int64
      description: Id of the user.
    - id: gameMode
      type: OsuSharp.Misc.GameMode
      description: Gamemode of the play. Standard, Taiko, Catch or Mania.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: Cancellation token
    return:
      type: System.Threading.Tasks.Task{OsuSharp.Endpoints.Score}
      description: "\n<xref href=\"OsuSharp.Endpoints.Score\" data-throw-if-not-resolved=\"false\"></xref>\n"
    content.vb: Function GetScoreByUseridAsync(beatmapid As Long, userid As Long, gameMode As GameMode = GameMode.Standard, cancellationToken As CancellationToken = Nothing) As Task(Of Score)
  overload: OsuSharp.Interfaces.IOsuApi.GetScoreByUseridAsync*
- uid: OsuSharp.Interfaces.IOsuApi.GetScores(System.Int64,OsuSharp.Misc.GameMode,System.Int32)
  commentId: M:OsuSharp.Interfaces.IOsuApi.GetScores(System.Int64,OsuSharp.Misc.GameMode,System.Int32)
  id: GetScores(System.Int64,OsuSharp.Misc.GameMode,System.Int32)
  parent: OsuSharp.Interfaces.IOsuApi
  langs:
  - csharp
  - vb
  name: GetScores(Int64, GameMode, Int32)
  nameWithType: IOsuApi.GetScores(Int64, GameMode, Int32)
  fullName: OsuSharp.Interfaces.IOsuApi.GetScores(System.Int64, OsuSharp.Misc.GameMode, System.Int32)
  type: Method
  source:
    id: GetScores
    path: ''
    startLine: 3259
  assemblies:
  - cs.temp.dll
  namespace: OsuSharp.Interfaces
  summary: "\nMethod that returns a list of <xref href=\"OsuSharp.Endpoints.Score\" data-throw-if-not-resolved=\"false\"></xref> by the given beatmapid.\n"
  example: []
  syntax:
    content: List<Score> GetScores(long beatmapid, GameMode gameMode = GameMode.Standard, int limit = 50)
    parameters:
    - id: beatmapid
      type: System.Int64
      description: Id of the beatmap. Must be the id of a difficulty.
    - id: gameMode
      type: OsuSharp.Misc.GameMode
      description: Gamemode of the play. Standard, Taiko, Catch or Mania.
    - id: limit
      type: System.Int32
      description: 'Limit of the output. Default : 50, minimum : 1, maximum : 100'
    return:
      type: System.Collections.Generic.List{OsuSharp.Endpoints.Score}
      description: "\n<xref href=\"OsuSharp.Endpoints.Score\" data-throw-if-not-resolved=\"false\"></xref>\n"
    content.vb: Function GetScores(beatmapid As Long, gameMode As GameMode = GameMode.Standard, limit As Integer = 50) As List(Of Score)
  overload: OsuSharp.Interfaces.IOsuApi.GetScores*
- uid: OsuSharp.Interfaces.IOsuApi.GetScoresAsync(System.Int64,OsuSharp.Misc.GameMode,System.Int32,System.Threading.CancellationToken)
  commentId: M:OsuSharp.Interfaces.IOsuApi.GetScoresAsync(System.Int64,OsuSharp.Misc.GameMode,System.Int32,System.Threading.CancellationToken)
  id: GetScoresAsync(System.Int64,OsuSharp.Misc.GameMode,System.Int32,System.Threading.CancellationToken)
  parent: OsuSharp.Interfaces.IOsuApi
  langs:
  - csharp
  - vb
  name: GetScoresAsync(Int64, GameMode, Int32, CancellationToken)
  nameWithType: IOsuApi.GetScoresAsync(Int64, GameMode, Int32, CancellationToken)
  fullName: OsuSharp.Interfaces.IOsuApi.GetScoresAsync(System.Int64, OsuSharp.Misc.GameMode, System.Int32, System.Threading.CancellationToken)
  type: Method
  source:
    id: GetScoresAsync
    path: ''
    startLine: 3271
  assemblies:
  - cs.temp.dll
  namespace: OsuSharp.Interfaces
  summary: "\nMethod that returns a list of <xref href=\"OsuSharp.Endpoints.Score\" data-throw-if-not-resolved=\"false\"></xref> by the given beatmapid.\n"
  example: []
  syntax:
    content: Task<List<Score>> GetScoresAsync(long beatmapid, GameMode gameMode = GameMode.Standard, int limit = 50, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: beatmapid
      type: System.Int64
      description: Id of the beatmap. Must be the id of a difficulty.
    - id: gameMode
      type: OsuSharp.Misc.GameMode
      description: Gamemode of the play. Standard, Taiko, Catch or Mania.
    - id: limit
      type: System.Int32
      description: 'Limit of the output. Default : 50, minimum : 1, maximum : 100'
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: Cancellation token
    return:
      type: System.Threading.Tasks.Task{System.Collections.Generic.List{OsuSharp.Endpoints.Score}}
      description: "\n<xref href=\"OsuSharp.Endpoints.Score\" data-throw-if-not-resolved=\"false\"></xref>\n"
    content.vb: Function GetScoresAsync(beatmapid As Long, gameMode As GameMode = GameMode.Standard, limit As Integer = 50, cancellationToken As CancellationToken = Nothing) As Task(Of List(Of Score))
  overload: OsuSharp.Interfaces.IOsuApi.GetScoresAsync*
- uid: OsuSharp.Interfaces.IOsuApi.GetScoresAndBeatmap(System.Int64,OsuSharp.Misc.GameMode,System.Int32)
  commentId: M:OsuSharp.Interfaces.IOsuApi.GetScoresAndBeatmap(System.Int64,OsuSharp.Misc.GameMode,System.Int32)
  id: GetScoresAndBeatmap(System.Int64,OsuSharp.Misc.GameMode,System.Int32)
  parent: OsuSharp.Interfaces.IOsuApi
  langs:
  - csharp
  - vb
  name: GetScoresAndBeatmap(Int64, GameMode, Int32)
  nameWithType: IOsuApi.GetScoresAndBeatmap(Int64, GameMode, Int32)
  fullName: OsuSharp.Interfaces.IOsuApi.GetScoresAndBeatmap(System.Int64, OsuSharp.Misc.GameMode, System.Int32)
  type: Method
  source:
    id: GetScoresAndBeatmap
    path: ''
    startLine: 3283
  assemblies:
  - cs.temp.dll
  namespace: OsuSharp.Interfaces
  summary: "\nMethod that returns a list of <xref href=\"OsuSharp.Entities.BeatmapScores\" data-throw-if-not-resolved=\"false\"></xref> by the given beatmapid.\n"
  example: []
  syntax:
    content: BeatmapScores GetScoresAndBeatmap(long beatmapid, GameMode gameMode = GameMode.Standard, int limit = 50)
    parameters:
    - id: beatmapid
      type: System.Int64
      description: Id of the beatmap. Must be the id of a difficulty.
    - id: gameMode
      type: OsuSharp.Misc.GameMode
      description: Gamemode of the play. Standard, Taiko, Catch or Mania.
    - id: limit
      type: System.Int32
      description: 'Limit of the output. Default : 50, minimum : 1, maximum : 100'
    return:
      type: OsuSharp.Entities.BeatmapScores
      description: "\n<xref href=\"OsuSharp.Entities.BeatmapScores\" data-throw-if-not-resolved=\"false\"></xref>\n"
    content.vb: Function GetScoresAndBeatmap(beatmapid As Long, gameMode As GameMode = GameMode.Standard, limit As Integer = 50) As BeatmapScores
  overload: OsuSharp.Interfaces.IOsuApi.GetScoresAndBeatmap*
- uid: OsuSharp.Interfaces.IOsuApi.GetScoresAndBeatmapAsync(System.Int64,OsuSharp.Misc.GameMode,System.Int32,System.Threading.CancellationToken)
  commentId: M:OsuSharp.Interfaces.IOsuApi.GetScoresAndBeatmapAsync(System.Int64,OsuSharp.Misc.GameMode,System.Int32,System.Threading.CancellationToken)
  id: GetScoresAndBeatmapAsync(System.Int64,OsuSharp.Misc.GameMode,System.Int32,System.Threading.CancellationToken)
  parent: OsuSharp.Interfaces.IOsuApi
  langs:
  - csharp
  - vb
  name: GetScoresAndBeatmapAsync(Int64, GameMode, Int32, CancellationToken)
  nameWithType: IOsuApi.GetScoresAndBeatmapAsync(Int64, GameMode, Int32, CancellationToken)
  fullName: OsuSharp.Interfaces.IOsuApi.GetScoresAndBeatmapAsync(System.Int64, OsuSharp.Misc.GameMode, System.Int32, System.Threading.CancellationToken)
  type: Method
  source:
    id: GetScoresAndBeatmapAsync
    path: ''
    startLine: 3295
  assemblies:
  - cs.temp.dll
  namespace: OsuSharp.Interfaces
  summary: "\nMethod that returns a list of <xref href=\"OsuSharp.Entities.BeatmapScores\" data-throw-if-not-resolved=\"false\"></xref> by the given beatmapid.\n"
  example: []
  syntax:
    content: Task<BeatmapScores> GetScoresAndBeatmapAsync(long beatmapid, GameMode gameMode = GameMode.Standard, int limit = 50, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: beatmapid
      type: System.Int64
      description: Id of the beatmap. Must be the id of a difficulty.
    - id: gameMode
      type: OsuSharp.Misc.GameMode
      description: Gamemode of the play. Standard, Taiko, Catch or Mania.
    - id: limit
      type: System.Int32
      description: 'Limit of the output. Default : 50, minimum : 1, maximum : 100'
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: Cancellation token
    return:
      type: System.Threading.Tasks.Task{OsuSharp.Entities.BeatmapScores}
      description: "\n<xref href=\"OsuSharp.Entities.BeatmapScores\" data-throw-if-not-resolved=\"false\"></xref>\n"
    content.vb: Function GetScoresAndBeatmapAsync(beatmapid As Long, gameMode As GameMode = GameMode.Standard, limit As Integer = 50, cancellationToken As CancellationToken = Nothing) As Task(Of BeatmapScores)
  overload: OsuSharp.Interfaces.IOsuApi.GetScoresAndBeatmapAsync*
- uid: OsuSharp.Interfaces.IOsuApi.GetScoresWithUsersAndBeatmap(System.Int64,OsuSharp.Misc.GameMode,System.Int32)
  commentId: M:OsuSharp.Interfaces.IOsuApi.GetScoresWithUsersAndBeatmap(System.Int64,OsuSharp.Misc.GameMode,System.Int32)
  id: GetScoresWithUsersAndBeatmap(System.Int64,OsuSharp.Misc.GameMode,System.Int32)
  parent: OsuSharp.Interfaces.IOsuApi
  langs:
  - csharp
  - vb
  name: GetScoresWithUsersAndBeatmap(Int64, GameMode, Int32)
  nameWithType: IOsuApi.GetScoresWithUsersAndBeatmap(Int64, GameMode, Int32)
  fullName: OsuSharp.Interfaces.IOsuApi.GetScoresWithUsersAndBeatmap(System.Int64, OsuSharp.Misc.GameMode, System.Int32)
  type: Method
  source:
    id: GetScoresWithUsersAndBeatmap
    path: ''
    startLine: 3307
  assemblies:
  - cs.temp.dll
  namespace: OsuSharp.Interfaces
  summary: "\nMethod that returns a list of <xref href=\"OsuSharp.Entities.BeatmapScoresUsers\" data-throw-if-not-resolved=\"false\"></xref> by the given beatmapid.\n"
  example: []
  syntax:
    content: BeatmapScoresUsers GetScoresWithUsersAndBeatmap(long beatmapid, GameMode gameMode = GameMode.Standard, int limit = 50)
    parameters:
    - id: beatmapid
      type: System.Int64
      description: Id of the beatmap. Must be the id of a difficulty.
    - id: gameMode
      type: OsuSharp.Misc.GameMode
      description: Gamemode of the play. Standard, Taiko, Catch or Mania.
    - id: limit
      type: System.Int32
      description: 'Limit of the output. Default : 50, minimum : 1, maximum : 100'
    return:
      type: OsuSharp.Entities.BeatmapScoresUsers
      description: "\n<xref href=\"OsuSharp.Entities.BeatmapScoresUsers\" data-throw-if-not-resolved=\"false\"></xref>\n"
    content.vb: Function GetScoresWithUsersAndBeatmap(beatmapid As Long, gameMode As GameMode = GameMode.Standard, limit As Integer = 50) As BeatmapScoresUsers
  overload: OsuSharp.Interfaces.IOsuApi.GetScoresWithUsersAndBeatmap*
- uid: OsuSharp.Interfaces.IOsuApi.GetScoresWithUsersAndBeatmapAsync(System.Int64,OsuSharp.Misc.GameMode,System.Int32,System.Threading.CancellationToken)
  commentId: M:OsuSharp.Interfaces.IOsuApi.GetScoresWithUsersAndBeatmapAsync(System.Int64,OsuSharp.Misc.GameMode,System.Int32,System.Threading.CancellationToken)
  id: GetScoresWithUsersAndBeatmapAsync(System.Int64,OsuSharp.Misc.GameMode,System.Int32,System.Threading.CancellationToken)
  parent: OsuSharp.Interfaces.IOsuApi
  langs:
  - csharp
  - vb
  name: GetScoresWithUsersAndBeatmapAsync(Int64, GameMode, Int32, CancellationToken)
  nameWithType: IOsuApi.GetScoresWithUsersAndBeatmapAsync(Int64, GameMode, Int32, CancellationToken)
  fullName: OsuSharp.Interfaces.IOsuApi.GetScoresWithUsersAndBeatmapAsync(System.Int64, OsuSharp.Misc.GameMode, System.Int32, System.Threading.CancellationToken)
  type: Method
  source:
    id: GetScoresWithUsersAndBeatmapAsync
    path: ''
    startLine: 3320
  assemblies:
  - cs.temp.dll
  namespace: OsuSharp.Interfaces
  summary: "\nMethod that returns a list of <xref href=\"OsuSharp.Entities.BeatmapScoresUsers\" data-throw-if-not-resolved=\"false\"></xref> by the given beatmapid.\n"
  example: []
  syntax:
    content: Task<BeatmapScoresUsers> GetScoresWithUsersAndBeatmapAsync(long beatmapid, GameMode gameMode = GameMode.Standard, int limit = 50, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: beatmapid
      type: System.Int64
      description: Id of the beatmap. Must be the id of a difficulty.
    - id: gameMode
      type: OsuSharp.Misc.GameMode
      description: Gamemode of the play. Standard, Taiko, Catch or Mania.
    - id: limit
      type: System.Int32
      description: 'Limit of the output. Default : 50, minimum : 1, maximum : 100'
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: Cancellation token
    return:
      type: System.Threading.Tasks.Task{OsuSharp.Entities.BeatmapScoresUsers}
      description: "\n<xref href=\"OsuSharp.Entities.BeatmapScoresUsers\" data-throw-if-not-resolved=\"false\"></xref>\n"
    content.vb: Function GetScoresWithUsersAndBeatmapAsync(beatmapid As Long, gameMode As GameMode = GameMode.Standard, limit As Integer = 50, cancellationToken As CancellationToken = Nothing) As Task(Of BeatmapScoresUsers)
  overload: OsuSharp.Interfaces.IOsuApi.GetScoresWithUsersAndBeatmapAsync*
- uid: OsuSharp.Interfaces.IOsuApi.GetUserBestByUsername(System.String,OsuSharp.Misc.GameMode,System.Int32)
  commentId: M:OsuSharp.Interfaces.IOsuApi.GetUserBestByUsername(System.String,OsuSharp.Misc.GameMode,System.Int32)
  id: GetUserBestByUsername(System.String,OsuSharp.Misc.GameMode,System.Int32)
  parent: OsuSharp.Interfaces.IOsuApi
  langs:
  - csharp
  - vb
  name: GetUserBestByUsername(String, GameMode, Int32)
  nameWithType: IOsuApi.GetUserBestByUsername(String, GameMode, Int32)
  fullName: OsuSharp.Interfaces.IOsuApi.GetUserBestByUsername(System.String, OsuSharp.Misc.GameMode, System.Int32)
  type: Method
  source:
    id: GetUserBestByUsername
    path: ''
    startLine: 3332
  assemblies:
  - cs.temp.dll
  namespace: OsuSharp.Interfaces
  summary: "\nMethod that returns a list of <xref href=\"OsuSharp.Endpoints.UserBest\" data-throw-if-not-resolved=\"false\"></xref> by the given username.\n"
  example: []
  syntax:
    content: List<UserBest> GetUserBestByUsername(string username, GameMode gameMode = GameMode.Standard, int limit = 10)
    parameters:
    - id: username
      type: System.String
      description: Username of the user.
    - id: gameMode
      type: OsuSharp.Misc.GameMode
      description: Gamemode of the play. Standard, Taiko, Catch or Mania.
    - id: limit
      type: System.Int32
      description: 'Limit of the output. Default : 10, minimum : 1, maximum : 100'
    return:
      type: System.Collections.Generic.List{OsuSharp.Endpoints.UserBest}
      description: "\n<xref href=\"System.Collections.Generic.List%601\" data-throw-if-not-resolved=\"false\"></xref>\n"
    content.vb: Function GetUserBestByUsername(username As String, gameMode As GameMode = GameMode.Standard, limit As Integer = 10) As List(Of UserBest)
  overload: OsuSharp.Interfaces.IOsuApi.GetUserBestByUsername*
- uid: OsuSharp.Interfaces.IOsuApi.GetUserBestByUsernameAsync(System.String,OsuSharp.Misc.GameMode,System.Int32,System.Threading.CancellationToken)
  commentId: M:OsuSharp.Interfaces.IOsuApi.GetUserBestByUsernameAsync(System.String,OsuSharp.Misc.GameMode,System.Int32,System.Threading.CancellationToken)
  id: GetUserBestByUsernameAsync(System.String,OsuSharp.Misc.GameMode,System.Int32,System.Threading.CancellationToken)
  parent: OsuSharp.Interfaces.IOsuApi
  langs:
  - csharp
  - vb
  name: GetUserBestByUsernameAsync(String, GameMode, Int32, CancellationToken)
  nameWithType: IOsuApi.GetUserBestByUsernameAsync(String, GameMode, Int32, CancellationToken)
  fullName: OsuSharp.Interfaces.IOsuApi.GetUserBestByUsernameAsync(System.String, OsuSharp.Misc.GameMode, System.Int32, System.Threading.CancellationToken)
  type: Method
  source:
    id: GetUserBestByUsernameAsync
    path: ''
    startLine: 3345
  assemblies:
  - cs.temp.dll
  namespace: OsuSharp.Interfaces
  summary: "\nMethod that returns a list of <xref href=\"OsuSharp.Endpoints.UserBest\" data-throw-if-not-resolved=\"false\"></xref> by the given username.\n"
  example: []
  syntax:
    content: Task<List<UserBest>> GetUserBestByUsernameAsync(string username, GameMode gameMode = GameMode.Standard, int limit = 10, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: username
      type: System.String
      description: Username of the user.
    - id: gameMode
      type: OsuSharp.Misc.GameMode
      description: Gamemode of the play. Standard, Taiko, Catch or Mania.
    - id: limit
      type: System.Int32
      description: 'Limit of the output. Default : 10, minimum : 1, maximum : 100'
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: Cancellation token
    return:
      type: System.Threading.Tasks.Task{System.Collections.Generic.List{OsuSharp.Endpoints.UserBest}}
      description: "\n<xref href=\"System.Collections.Generic.List%601\" data-throw-if-not-resolved=\"false\"></xref>\n"
    content.vb: Function GetUserBestByUsernameAsync(username As String, gameMode As GameMode = GameMode.Standard, limit As Integer = 10, cancellationToken As CancellationToken = Nothing) As Task(Of List(Of UserBest))
  overload: OsuSharp.Interfaces.IOsuApi.GetUserBestByUsernameAsync*
- uid: OsuSharp.Interfaces.IOsuApi.GetUserBestAndBeatmapByUsername(System.String,OsuSharp.Misc.GameMode,System.Int32)
  commentId: M:OsuSharp.Interfaces.IOsuApi.GetUserBestAndBeatmapByUsername(System.String,OsuSharp.Misc.GameMode,System.Int32)
  id: GetUserBestAndBeatmapByUsername(System.String,OsuSharp.Misc.GameMode,System.Int32)
  parent: OsuSharp.Interfaces.IOsuApi
  langs:
  - csharp
  - vb
  name: GetUserBestAndBeatmapByUsername(String, GameMode, Int32)
  nameWithType: IOsuApi.GetUserBestAndBeatmapByUsername(String, GameMode, Int32)
  fullName: OsuSharp.Interfaces.IOsuApi.GetUserBestAndBeatmapByUsername(System.String, OsuSharp.Misc.GameMode, System.Int32)
  type: Method
  source:
    id: GetUserBestAndBeatmapByUsername
    path: ''
    startLine: 3357
  assemblies:
  - cs.temp.dll
  namespace: OsuSharp.Interfaces
  summary: "\nMethod that returns a list of <xref href=\"OsuSharp.Entities.UserBestBeatmap\" data-throw-if-not-resolved=\"false\"></xref> by the given username.\n"
  example: []
  syntax:
    content: List<UserBestBeatmap> GetUserBestAndBeatmapByUsername(string username, GameMode gameMode = GameMode.Standard, int limit = 10)
    parameters:
    - id: username
      type: System.String
      description: Username of the user.
    - id: gameMode
      type: OsuSharp.Misc.GameMode
      description: Gamemode of the play. Standard, Taiko, Catch or Mania.
    - id: limit
      type: System.Int32
      description: 'Limit of the output. Default : 10, minimum : 1, maximum : 100'
    return:
      type: System.Collections.Generic.List{OsuSharp.Entities.UserBestBeatmap}
      description: "\n<xref href=\"System.Collections.Generic.List%601\" data-throw-if-not-resolved=\"false\"></xref>\n"
    content.vb: Function GetUserBestAndBeatmapByUsername(username As String, gameMode As GameMode = GameMode.Standard, limit As Integer = 10) As List(Of UserBestBeatmap)
  overload: OsuSharp.Interfaces.IOsuApi.GetUserBestAndBeatmapByUsername*
- uid: OsuSharp.Interfaces.IOsuApi.GetUserBestAndBeatmapByUsernameAsync(System.String,OsuSharp.Misc.GameMode,System.Int32,System.Threading.CancellationToken)
  commentId: M:OsuSharp.Interfaces.IOsuApi.GetUserBestAndBeatmapByUsernameAsync(System.String,OsuSharp.Misc.GameMode,System.Int32,System.Threading.CancellationToken)
  id: GetUserBestAndBeatmapByUsernameAsync(System.String,OsuSharp.Misc.GameMode,System.Int32,System.Threading.CancellationToken)
  parent: OsuSharp.Interfaces.IOsuApi
  langs:
  - csharp
  - vb
  name: GetUserBestAndBeatmapByUsernameAsync(String, GameMode, Int32, CancellationToken)
  nameWithType: IOsuApi.GetUserBestAndBeatmapByUsernameAsync(String, GameMode, Int32, CancellationToken)
  fullName: OsuSharp.Interfaces.IOsuApi.GetUserBestAndBeatmapByUsernameAsync(System.String, OsuSharp.Misc.GameMode, System.Int32, System.Threading.CancellationToken)
  type: Method
  source:
    id: GetUserBestAndBeatmapByUsernameAsync
    path: ''
    startLine: 3370
  assemblies:
  - cs.temp.dll
  namespace: OsuSharp.Interfaces
  summary: "\nMethod that returns a list of <xref href=\"OsuSharp.Entities.UserBestBeatmap\" data-throw-if-not-resolved=\"false\"></xref> by the given username.\n"
  example: []
  syntax:
    content: Task<List<UserBestBeatmap>> GetUserBestAndBeatmapByUsernameAsync(string username, GameMode gameMode = GameMode.Standard, int limit = 10, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: username
      type: System.String
      description: Username of the user.
    - id: gameMode
      type: OsuSharp.Misc.GameMode
      description: Gamemode of the play. Standard, Taiko, Catch or Mania.
    - id: limit
      type: System.Int32
      description: 'Limit of the output. Default : 10, minimum : 1, maximum : 100'
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: Cancellation token
    return:
      type: System.Threading.Tasks.Task{System.Collections.Generic.List{OsuSharp.Entities.UserBestBeatmap}}
      description: "\n<xref href=\"System.Collections.Generic.List%601\" data-throw-if-not-resolved=\"false\"></xref>\n"
    content.vb: Function GetUserBestAndBeatmapByUsernameAsync(username As String, gameMode As GameMode = GameMode.Standard, limit As Integer = 10, cancellationToken As CancellationToken = Nothing) As Task(Of List(Of UserBestBeatmap))
  overload: OsuSharp.Interfaces.IOsuApi.GetUserBestAndBeatmapByUsernameAsync*
- uid: OsuSharp.Interfaces.IOsuApi.GetUserBestByUserid(System.Int64,OsuSharp.Misc.GameMode,System.Int32)
  commentId: M:OsuSharp.Interfaces.IOsuApi.GetUserBestByUserid(System.Int64,OsuSharp.Misc.GameMode,System.Int32)
  id: GetUserBestByUserid(System.Int64,OsuSharp.Misc.GameMode,System.Int32)
  parent: OsuSharp.Interfaces.IOsuApi
  langs:
  - csharp
  - vb
  name: GetUserBestByUserid(Int64, GameMode, Int32)
  nameWithType: IOsuApi.GetUserBestByUserid(Int64, GameMode, Int32)
  fullName: OsuSharp.Interfaces.IOsuApi.GetUserBestByUserid(System.Int64, OsuSharp.Misc.GameMode, System.Int32)
  type: Method
  source:
    id: GetUserBestByUserid
    path: ''
    startLine: 3382
  assemblies:
  - cs.temp.dll
  namespace: OsuSharp.Interfaces
  summary: "\nMethod that returns a list of <xref href=\"OsuSharp.Endpoints.UserBest\" data-throw-if-not-resolved=\"false\"></xref> by the given userid.\n"
  example: []
  syntax:
    content: List<UserBest> GetUserBestByUserid(long userid, GameMode gameMode = GameMode.Standard, int limit = 10)
    parameters:
    - id: userid
      type: System.Int64
      description: Id of the user.
    - id: gameMode
      type: OsuSharp.Misc.GameMode
      description: Gamemode of the play. Standard, Taiko, Catch or Mania.
    - id: limit
      type: System.Int32
      description: 'Limit of the output. Default : 10, minimum : 1, maximum : 100'
    return:
      type: System.Collections.Generic.List{OsuSharp.Endpoints.UserBest}
      description: "\n<xref href=\"System.Collections.Generic.List%601\" data-throw-if-not-resolved=\"false\"></xref>\n"
    content.vb: Function GetUserBestByUserid(userid As Long, gameMode As GameMode = GameMode.Standard, limit As Integer = 10) As List(Of UserBest)
  overload: OsuSharp.Interfaces.IOsuApi.GetUserBestByUserid*
- uid: OsuSharp.Interfaces.IOsuApi.GetUserBestByUseridAsync(System.Int64,OsuSharp.Misc.GameMode,System.Int32,System.Threading.CancellationToken)
  commentId: M:OsuSharp.Interfaces.IOsuApi.GetUserBestByUseridAsync(System.Int64,OsuSharp.Misc.GameMode,System.Int32,System.Threading.CancellationToken)
  id: GetUserBestByUseridAsync(System.Int64,OsuSharp.Misc.GameMode,System.Int32,System.Threading.CancellationToken)
  parent: OsuSharp.Interfaces.IOsuApi
  langs:
  - csharp
  - vb
  name: GetUserBestByUseridAsync(Int64, GameMode, Int32, CancellationToken)
  nameWithType: IOsuApi.GetUserBestByUseridAsync(Int64, GameMode, Int32, CancellationToken)
  fullName: OsuSharp.Interfaces.IOsuApi.GetUserBestByUseridAsync(System.Int64, OsuSharp.Misc.GameMode, System.Int32, System.Threading.CancellationToken)
  type: Method
  source:
    id: GetUserBestByUseridAsync
    path: ''
    startLine: 3394
  assemblies:
  - cs.temp.dll
  namespace: OsuSharp.Interfaces
  summary: "\nMethod that returns a list of <xref href=\"OsuSharp.Endpoints.UserBest\" data-throw-if-not-resolved=\"false\"></xref> by the given userid.\n"
  example: []
  syntax:
    content: Task<List<UserBest>> GetUserBestByUseridAsync(long userid, GameMode gameMode = GameMode.Standard, int limit = 10, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: userid
      type: System.Int64
      description: Id of the user.
    - id: gameMode
      type: OsuSharp.Misc.GameMode
      description: Gamemode of the play. Standard, Taiko, Catch or Mania.
    - id: limit
      type: System.Int32
      description: 'Limit of the output. Default : 10, minimum : 1, maximum : 100'
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: Cancellation token
    return:
      type: System.Threading.Tasks.Task{System.Collections.Generic.List{OsuSharp.Endpoints.UserBest}}
      description: "\n<xref href=\"System.Collections.Generic.List%601\" data-throw-if-not-resolved=\"false\"></xref>\n"
    content.vb: Function GetUserBestByUseridAsync(userid As Long, gameMode As GameMode = GameMode.Standard, limit As Integer = 10, cancellationToken As CancellationToken = Nothing) As Task(Of List(Of UserBest))
  overload: OsuSharp.Interfaces.IOsuApi.GetUserBestByUseridAsync*
- uid: OsuSharp.Interfaces.IOsuApi.GetUserBestAndBeatmapByUserid(System.Int64,OsuSharp.Misc.GameMode,System.Int32)
  commentId: M:OsuSharp.Interfaces.IOsuApi.GetUserBestAndBeatmapByUserid(System.Int64,OsuSharp.Misc.GameMode,System.Int32)
  id: GetUserBestAndBeatmapByUserid(System.Int64,OsuSharp.Misc.GameMode,System.Int32)
  parent: OsuSharp.Interfaces.IOsuApi
  langs:
  - csharp
  - vb
  name: GetUserBestAndBeatmapByUserid(Int64, GameMode, Int32)
  nameWithType: IOsuApi.GetUserBestAndBeatmapByUserid(Int64, GameMode, Int32)
  fullName: OsuSharp.Interfaces.IOsuApi.GetUserBestAndBeatmapByUserid(System.Int64, OsuSharp.Misc.GameMode, System.Int32)
  type: Method
  source:
    id: GetUserBestAndBeatmapByUserid
    path: ''
    startLine: 3406
  assemblies:
  - cs.temp.dll
  namespace: OsuSharp.Interfaces
  summary: "\nMethod that returns a list of <xref href=\"OsuSharp.Entities.UserBestBeatmap\" data-throw-if-not-resolved=\"false\"></xref> by the given username.\n"
  example: []
  syntax:
    content: List<UserBestBeatmap> GetUserBestAndBeatmapByUserid(long userid, GameMode gameMode = GameMode.Standard, int limit = 10)
    parameters:
    - id: userid
      type: System.Int64
      description: Id of the user.
    - id: gameMode
      type: OsuSharp.Misc.GameMode
      description: Gamemode of the play. Standard, Taiko, Catch or Mania.
    - id: limit
      type: System.Int32
      description: 'Limit of the output. Default : 10, minimum : 1, maximum : 100'
    return:
      type: System.Collections.Generic.List{OsuSharp.Entities.UserBestBeatmap}
      description: "\n<xref href=\"System.Collections.Generic.List%601\" data-throw-if-not-resolved=\"false\"></xref>\n"
    content.vb: Function GetUserBestAndBeatmapByUserid(userid As Long, gameMode As GameMode = GameMode.Standard, limit As Integer = 10) As List(Of UserBestBeatmap)
  overload: OsuSharp.Interfaces.IOsuApi.GetUserBestAndBeatmapByUserid*
- uid: OsuSharp.Interfaces.IOsuApi.GetUserBestAndBeatmapByUseridAsync(System.Int64,OsuSharp.Misc.GameMode,System.Int32,System.Threading.CancellationToken)
  commentId: M:OsuSharp.Interfaces.IOsuApi.GetUserBestAndBeatmapByUseridAsync(System.Int64,OsuSharp.Misc.GameMode,System.Int32,System.Threading.CancellationToken)
  id: GetUserBestAndBeatmapByUseridAsync(System.Int64,OsuSharp.Misc.GameMode,System.Int32,System.Threading.CancellationToken)
  parent: OsuSharp.Interfaces.IOsuApi
  langs:
  - csharp
  - vb
  name: GetUserBestAndBeatmapByUseridAsync(Int64, GameMode, Int32, CancellationToken)
  nameWithType: IOsuApi.GetUserBestAndBeatmapByUseridAsync(Int64, GameMode, Int32, CancellationToken)
  fullName: OsuSharp.Interfaces.IOsuApi.GetUserBestAndBeatmapByUseridAsync(System.Int64, OsuSharp.Misc.GameMode, System.Int32, System.Threading.CancellationToken)
  type: Method
  source:
    id: GetUserBestAndBeatmapByUseridAsync
    path: ''
    startLine: 3419
  assemblies:
  - cs.temp.dll
  namespace: OsuSharp.Interfaces
  summary: "\nMethod that returns a list of <xref href=\"OsuSharp.Entities.UserBestBeatmap\" data-throw-if-not-resolved=\"false\"></xref> by the given username.\n"
  example: []
  syntax:
    content: Task<List<UserBestBeatmap>> GetUserBestAndBeatmapByUseridAsync(long userid, GameMode gameMode = GameMode.Standard, int limit = 10, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: userid
      type: System.Int64
      description: Id of the user.
    - id: gameMode
      type: OsuSharp.Misc.GameMode
      description: Gamemode of the play. Standard, Taiko, Catch or Mania.
    - id: limit
      type: System.Int32
      description: 'Limit of the output. Default : 10, minimum : 1, maximum : 100'
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: Cancellation token
    return:
      type: System.Threading.Tasks.Task{System.Collections.Generic.List{OsuSharp.Entities.UserBestBeatmap}}
      description: "\n<xref href=\"System.Collections.Generic.List%601\" data-throw-if-not-resolved=\"false\"></xref>\n"
    content.vb: Function GetUserBestAndBeatmapByUseridAsync(userid As Long, gameMode As GameMode = GameMode.Standard, limit As Integer = 10, cancellationToken As CancellationToken = Nothing) As Task(Of List(Of UserBestBeatmap))
  overload: OsuSharp.Interfaces.IOsuApi.GetUserBestAndBeatmapByUseridAsync*
- uid: OsuSharp.Interfaces.IOsuApi.GetUserRecentByUsername(System.String,OsuSharp.Misc.GameMode,System.Int32)
  commentId: M:OsuSharp.Interfaces.IOsuApi.GetUserRecentByUsername(System.String,OsuSharp.Misc.GameMode,System.Int32)
  id: GetUserRecentByUsername(System.String,OsuSharp.Misc.GameMode,System.Int32)
  parent: OsuSharp.Interfaces.IOsuApi
  langs:
  - csharp
  - vb
  name: GetUserRecentByUsername(String, GameMode, Int32)
  nameWithType: IOsuApi.GetUserRecentByUsername(String, GameMode, Int32)
  fullName: OsuSharp.Interfaces.IOsuApi.GetUserRecentByUsername(System.String, OsuSharp.Misc.GameMode, System.Int32)
  type: Method
  source:
    id: GetUserRecentByUsername
    path: ''
    startLine: 3431
  assemblies:
  - cs.temp.dll
  namespace: OsuSharp.Interfaces
  summary: "\nMethod that returns a list of <xref href=\"OsuSharp.Endpoints.UserRecent\" data-throw-if-not-resolved=\"false\"></xref> by the given username.\n"
  example: []
  syntax:
    content: List<UserRecent> GetUserRecentByUsername(string username, GameMode gameMode = GameMode.Standard, int limit = 10)
    parameters:
    - id: username
      type: System.String
      description: Username of the user.
    - id: gameMode
      type: OsuSharp.Misc.GameMode
      description: Gamemode of the play. Standard, Taiko, Catch or Mania.
    - id: limit
      type: System.Int32
      description: 'Limit of the output. Default : 10, minimum : 1, maximum : 100'
    return:
      type: System.Collections.Generic.List{OsuSharp.Endpoints.UserRecent}
      description: "\n<xref href=\"System.Collections.Generic.List%601\" data-throw-if-not-resolved=\"false\"></xref>\n"
    content.vb: Function GetUserRecentByUsername(username As String, gameMode As GameMode = GameMode.Standard, limit As Integer = 10) As List(Of UserRecent)
  overload: OsuSharp.Interfaces.IOsuApi.GetUserRecentByUsername*
- uid: OsuSharp.Interfaces.IOsuApi.GetUserRecentByUsernameAsync(System.String,OsuSharp.Misc.GameMode,System.Int32,System.Threading.CancellationToken)
  commentId: M:OsuSharp.Interfaces.IOsuApi.GetUserRecentByUsernameAsync(System.String,OsuSharp.Misc.GameMode,System.Int32,System.Threading.CancellationToken)
  id: GetUserRecentByUsernameAsync(System.String,OsuSharp.Misc.GameMode,System.Int32,System.Threading.CancellationToken)
  parent: OsuSharp.Interfaces.IOsuApi
  langs:
  - csharp
  - vb
  name: GetUserRecentByUsernameAsync(String, GameMode, Int32, CancellationToken)
  nameWithType: IOsuApi.GetUserRecentByUsernameAsync(String, GameMode, Int32, CancellationToken)
  fullName: OsuSharp.Interfaces.IOsuApi.GetUserRecentByUsernameAsync(System.String, OsuSharp.Misc.GameMode, System.Int32, System.Threading.CancellationToken)
  type: Method
  source:
    id: GetUserRecentByUsernameAsync
    path: ''
    startLine: 3444
  assemblies:
  - cs.temp.dll
  namespace: OsuSharp.Interfaces
  summary: "\nMethod that returns a list of <xref href=\"OsuSharp.Endpoints.UserRecent\" data-throw-if-not-resolved=\"false\"></xref> by the given username.\n"
  example: []
  syntax:
    content: Task<List<UserRecent>> GetUserRecentByUsernameAsync(string username, GameMode gameMode = GameMode.Standard, int limit = 10, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: username
      type: System.String
      description: Username of the user.
    - id: gameMode
      type: OsuSharp.Misc.GameMode
      description: Gamemode of the play. Standard, Taiko, Catch or Mania.
    - id: limit
      type: System.Int32
      description: 'Limit of the output. Default : 10, minimum : 1, maximum : 100'
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: Cancellation token
    return:
      type: System.Threading.Tasks.Task{System.Collections.Generic.List{OsuSharp.Endpoints.UserRecent}}
      description: "\n<xref href=\"System.Collections.Generic.List%601\" data-throw-if-not-resolved=\"false\"></xref>\n"
    content.vb: Function GetUserRecentByUsernameAsync(username As String, gameMode As GameMode = GameMode.Standard, limit As Integer = 10, cancellationToken As CancellationToken = Nothing) As Task(Of List(Of UserRecent))
  overload: OsuSharp.Interfaces.IOsuApi.GetUserRecentByUsernameAsync*
- uid: OsuSharp.Interfaces.IOsuApi.GetUserRecentAndBeatmapByUsername(System.String,OsuSharp.Misc.GameMode,System.Int32)
  commentId: M:OsuSharp.Interfaces.IOsuApi.GetUserRecentAndBeatmapByUsername(System.String,OsuSharp.Misc.GameMode,System.Int32)
  id: GetUserRecentAndBeatmapByUsername(System.String,OsuSharp.Misc.GameMode,System.Int32)
  parent: OsuSharp.Interfaces.IOsuApi
  langs:
  - csharp
  - vb
  name: GetUserRecentAndBeatmapByUsername(String, GameMode, Int32)
  nameWithType: IOsuApi.GetUserRecentAndBeatmapByUsername(String, GameMode, Int32)
  fullName: OsuSharp.Interfaces.IOsuApi.GetUserRecentAndBeatmapByUsername(System.String, OsuSharp.Misc.GameMode, System.Int32)
  type: Method
  source:
    id: GetUserRecentAndBeatmapByUsername
    path: ''
    startLine: 3456
  assemblies:
  - cs.temp.dll
  namespace: OsuSharp.Interfaces
  summary: "\nMethod that returns a list of <xref href=\"OsuSharp.Entities.UserRecentBeatmap\" data-throw-if-not-resolved=\"false\"></xref> by the given username.\n"
  example: []
  syntax:
    content: List<UserRecentBeatmap> GetUserRecentAndBeatmapByUsername(string username, GameMode gameMode = GameMode.Standard, int limit = 10)
    parameters:
    - id: username
      type: System.String
      description: Username of the user.
    - id: gameMode
      type: OsuSharp.Misc.GameMode
      description: Gamemode of the play. Standard, Taiko, Catch or Mania.
    - id: limit
      type: System.Int32
      description: 'Limit of the output. Default : 10, minimum : 1, maximum : 100'
    return:
      type: System.Collections.Generic.List{OsuSharp.Entities.UserRecentBeatmap}
      description: "\n<xref href=\"System.Collections.Generic.List%601\" data-throw-if-not-resolved=\"false\"></xref>\n"
    content.vb: Function GetUserRecentAndBeatmapByUsername(username As String, gameMode As GameMode = GameMode.Standard, limit As Integer = 10) As List(Of UserRecentBeatmap)
  overload: OsuSharp.Interfaces.IOsuApi.GetUserRecentAndBeatmapByUsername*
- uid: OsuSharp.Interfaces.IOsuApi.GetUserRecentAndBeatmapByUsernameAsync(System.String,OsuSharp.Misc.GameMode,System.Int32,System.Threading.CancellationToken)
  commentId: M:OsuSharp.Interfaces.IOsuApi.GetUserRecentAndBeatmapByUsernameAsync(System.String,OsuSharp.Misc.GameMode,System.Int32,System.Threading.CancellationToken)
  id: GetUserRecentAndBeatmapByUsernameAsync(System.String,OsuSharp.Misc.GameMode,System.Int32,System.Threading.CancellationToken)
  parent: OsuSharp.Interfaces.IOsuApi
  langs:
  - csharp
  - vb
  name: GetUserRecentAndBeatmapByUsernameAsync(String, GameMode, Int32, CancellationToken)
  nameWithType: IOsuApi.GetUserRecentAndBeatmapByUsernameAsync(String, GameMode, Int32, CancellationToken)
  fullName: OsuSharp.Interfaces.IOsuApi.GetUserRecentAndBeatmapByUsernameAsync(System.String, OsuSharp.Misc.GameMode, System.Int32, System.Threading.CancellationToken)
  type: Method
  source:
    id: GetUserRecentAndBeatmapByUsernameAsync
    path: ''
    startLine: 3469
  assemblies:
  - cs.temp.dll
  namespace: OsuSharp.Interfaces
  summary: "\nMethod that returns a list of <xref href=\"OsuSharp.Entities.UserRecentBeatmap\" data-throw-if-not-resolved=\"false\"></xref> by the given username.\n"
  example: []
  syntax:
    content: Task<List<UserRecentBeatmap>> GetUserRecentAndBeatmapByUsernameAsync(string username, GameMode gameMode = GameMode.Standard, int limit = 10, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: username
      type: System.String
      description: Username of the user.
    - id: gameMode
      type: OsuSharp.Misc.GameMode
      description: Gamemode of the play. Standard, Taiko, Catch or Mania.
    - id: limit
      type: System.Int32
      description: 'Limit of the output. Default : 10, minimum : 1, maximum : 100'
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: Cancellation token
    return:
      type: System.Threading.Tasks.Task{System.Collections.Generic.List{OsuSharp.Entities.UserRecentBeatmap}}
      description: "\n<xref href=\"System.Collections.Generic.List%601\" data-throw-if-not-resolved=\"false\"></xref>\n"
    content.vb: Function GetUserRecentAndBeatmapByUsernameAsync(username As String, gameMode As GameMode = GameMode.Standard, limit As Integer = 10, cancellationToken As CancellationToken = Nothing) As Task(Of List(Of UserRecentBeatmap))
  overload: OsuSharp.Interfaces.IOsuApi.GetUserRecentAndBeatmapByUsernameAsync*
- uid: OsuSharp.Interfaces.IOsuApi.GetUserRecentByUserid(System.Int64,OsuSharp.Misc.GameMode,System.Int32)
  commentId: M:OsuSharp.Interfaces.IOsuApi.GetUserRecentByUserid(System.Int64,OsuSharp.Misc.GameMode,System.Int32)
  id: GetUserRecentByUserid(System.Int64,OsuSharp.Misc.GameMode,System.Int32)
  parent: OsuSharp.Interfaces.IOsuApi
  langs:
  - csharp
  - vb
  name: GetUserRecentByUserid(Int64, GameMode, Int32)
  nameWithType: IOsuApi.GetUserRecentByUserid(Int64, GameMode, Int32)
  fullName: OsuSharp.Interfaces.IOsuApi.GetUserRecentByUserid(System.Int64, OsuSharp.Misc.GameMode, System.Int32)
  type: Method
  source:
    id: GetUserRecentByUserid
    path: ''
    startLine: 3481
  assemblies:
  - cs.temp.dll
  namespace: OsuSharp.Interfaces
  summary: "\nMethod that returns a list of <xref href=\"OsuSharp.Endpoints.UserRecent\" data-throw-if-not-resolved=\"false\"></xref> by the given userid.\n"
  example: []
  syntax:
    content: List<UserRecent> GetUserRecentByUserid(long userid, GameMode gameMode = GameMode.Standard, int limit = 10)
    parameters:
    - id: userid
      type: System.Int64
      description: Id of the user.
    - id: gameMode
      type: OsuSharp.Misc.GameMode
      description: Gamemode of the play. Standard, Taiko, Catch or Mania.
    - id: limit
      type: System.Int32
      description: 'Limit of the output. Default : 10, minimum : 1, maximum : 100'
    return:
      type: System.Collections.Generic.List{OsuSharp.Endpoints.UserRecent}
      description: "\n<xref href=\"System.Collections.Generic.List%601\" data-throw-if-not-resolved=\"false\"></xref>\n"
    content.vb: Function GetUserRecentByUserid(userid As Long, gameMode As GameMode = GameMode.Standard, limit As Integer = 10) As List(Of UserRecent)
  overload: OsuSharp.Interfaces.IOsuApi.GetUserRecentByUserid*
- uid: OsuSharp.Interfaces.IOsuApi.GetUserRecentByUseridAsync(System.Int64,OsuSharp.Misc.GameMode,System.Int32,System.Threading.CancellationToken)
  commentId: M:OsuSharp.Interfaces.IOsuApi.GetUserRecentByUseridAsync(System.Int64,OsuSharp.Misc.GameMode,System.Int32,System.Threading.CancellationToken)
  id: GetUserRecentByUseridAsync(System.Int64,OsuSharp.Misc.GameMode,System.Int32,System.Threading.CancellationToken)
  parent: OsuSharp.Interfaces.IOsuApi
  langs:
  - csharp
  - vb
  name: GetUserRecentByUseridAsync(Int64, GameMode, Int32, CancellationToken)
  nameWithType: IOsuApi.GetUserRecentByUseridAsync(Int64, GameMode, Int32, CancellationToken)
  fullName: OsuSharp.Interfaces.IOsuApi.GetUserRecentByUseridAsync(System.Int64, OsuSharp.Misc.GameMode, System.Int32, System.Threading.CancellationToken)
  type: Method
  source:
    id: GetUserRecentByUseridAsync
    path: ''
    startLine: 3494
  assemblies:
  - cs.temp.dll
  namespace: OsuSharp.Interfaces
  summary: "\nMethod that returns a list of <xref href=\"OsuSharp.Endpoints.UserRecent\" data-throw-if-not-resolved=\"false\"></xref> by the given userid.\n"
  example: []
  syntax:
    content: Task<List<UserRecent>> GetUserRecentByUseridAsync(long userid, GameMode gameMode = GameMode.Standard, int limit = 10, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: userid
      type: System.Int64
      description: Id of the user.
    - id: gameMode
      type: OsuSharp.Misc.GameMode
      description: Gamemode of the play. Standard, Taiko, Catch or Mania.
    - id: limit
      type: System.Int32
      description: 'Limit of the output. Default : 10, minimum : 1, maximum : 100'
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: Cancellation token
    return:
      type: System.Threading.Tasks.Task{System.Collections.Generic.List{OsuSharp.Endpoints.UserRecent}}
      description: "\n<xref href=\"System.Collections.Generic.List%601\" data-throw-if-not-resolved=\"false\"></xref>\n"
    content.vb: Function GetUserRecentByUseridAsync(userid As Long, gameMode As GameMode = GameMode.Standard, limit As Integer = 10, cancellationToken As CancellationToken = Nothing) As Task(Of List(Of UserRecent))
  overload: OsuSharp.Interfaces.IOsuApi.GetUserRecentByUseridAsync*
- uid: OsuSharp.Interfaces.IOsuApi.GetUserRecentAndBeatmapByUserid(System.Int64,OsuSharp.Misc.GameMode,System.Int32)
  commentId: M:OsuSharp.Interfaces.IOsuApi.GetUserRecentAndBeatmapByUserid(System.Int64,OsuSharp.Misc.GameMode,System.Int32)
  id: GetUserRecentAndBeatmapByUserid(System.Int64,OsuSharp.Misc.GameMode,System.Int32)
  parent: OsuSharp.Interfaces.IOsuApi
  langs:
  - csharp
  - vb
  name: GetUserRecentAndBeatmapByUserid(Int64, GameMode, Int32)
  nameWithType: IOsuApi.GetUserRecentAndBeatmapByUserid(Int64, GameMode, Int32)
  fullName: OsuSharp.Interfaces.IOsuApi.GetUserRecentAndBeatmapByUserid(System.Int64, OsuSharp.Misc.GameMode, System.Int32)
  type: Method
  source:
    id: GetUserRecentAndBeatmapByUserid
    path: ''
    startLine: 3506
  assemblies:
  - cs.temp.dll
  namespace: OsuSharp.Interfaces
  summary: "\nMethod that returns a list of <xref href=\"OsuSharp.Entities.UserRecentBeatmap\" data-throw-if-not-resolved=\"false\"></xref> by the given userid.\n"
  example: []
  syntax:
    content: List<UserRecentBeatmap> GetUserRecentAndBeatmapByUserid(long userid, GameMode gameMode = GameMode.Standard, int limit = 10)
    parameters:
    - id: userid
      type: System.Int64
      description: Id of the user.
    - id: gameMode
      type: OsuSharp.Misc.GameMode
      description: Gamemode of the play. Standard, Taiko, Catch or Mania.
    - id: limit
      type: System.Int32
      description: 'Limit of the output. Default : 10, minimum : 1, maximum : 100'
    return:
      type: System.Collections.Generic.List{OsuSharp.Entities.UserRecentBeatmap}
      description: "\n<xref href=\"System.Collections.Generic.List%601\" data-throw-if-not-resolved=\"false\"></xref>\n"
    content.vb: Function GetUserRecentAndBeatmapByUserid(userid As Long, gameMode As GameMode = GameMode.Standard, limit As Integer = 10) As List(Of UserRecentBeatmap)
  overload: OsuSharp.Interfaces.IOsuApi.GetUserRecentAndBeatmapByUserid*
- uid: OsuSharp.Interfaces.IOsuApi.GetUserRecentAndBeatmapByUseridAsync(System.Int64,OsuSharp.Misc.GameMode,System.Int32,System.Threading.CancellationToken)
  commentId: M:OsuSharp.Interfaces.IOsuApi.GetUserRecentAndBeatmapByUseridAsync(System.Int64,OsuSharp.Misc.GameMode,System.Int32,System.Threading.CancellationToken)
  id: GetUserRecentAndBeatmapByUseridAsync(System.Int64,OsuSharp.Misc.GameMode,System.Int32,System.Threading.CancellationToken)
  parent: OsuSharp.Interfaces.IOsuApi
  langs:
  - csharp
  - vb
  name: GetUserRecentAndBeatmapByUseridAsync(Int64, GameMode, Int32, CancellationToken)
  nameWithType: IOsuApi.GetUserRecentAndBeatmapByUseridAsync(Int64, GameMode, Int32, CancellationToken)
  fullName: OsuSharp.Interfaces.IOsuApi.GetUserRecentAndBeatmapByUseridAsync(System.Int64, OsuSharp.Misc.GameMode, System.Int32, System.Threading.CancellationToken)
  type: Method
  source:
    id: GetUserRecentAndBeatmapByUseridAsync
    path: ''
    startLine: 3519
  assemblies:
  - cs.temp.dll
  namespace: OsuSharp.Interfaces
  summary: "\nMethod that returns a list of <xref href=\"OsuSharp.Entities.UserRecentBeatmap\" data-throw-if-not-resolved=\"false\"></xref> by the given userid.\n"
  example: []
  syntax:
    content: Task<List<UserRecentBeatmap>> GetUserRecentAndBeatmapByUseridAsync(long userid, GameMode gameMode = GameMode.Standard, int limit = 10, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: userid
      type: System.Int64
      description: Id of the user.
    - id: gameMode
      type: OsuSharp.Misc.GameMode
      description: Gamemode of the play. Standard, Taiko, Catch or Mania.
    - id: limit
      type: System.Int32
      description: 'Limit of the output. Default : 10, minimum : 1, maximum : 100'
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: Cancellation token
    return:
      type: System.Threading.Tasks.Task{System.Collections.Generic.List{OsuSharp.Entities.UserRecentBeatmap}}
      description: "\n<xref href=\"System.Collections.Generic.List%601\" data-throw-if-not-resolved=\"false\"></xref>\n"
    content.vb: Function GetUserRecentAndBeatmapByUseridAsync(userid As Long, gameMode As GameMode = GameMode.Standard, limit As Integer = 10, cancellationToken As CancellationToken = Nothing) As Task(Of List(Of UserRecentBeatmap))
  overload: OsuSharp.Interfaces.IOsuApi.GetUserRecentAndBeatmapByUseridAsync*
- uid: OsuSharp.Interfaces.IOsuApi.GetMatch(System.Int64)
  commentId: M:OsuSharp.Interfaces.IOsuApi.GetMatch(System.Int64)
  id: GetMatch(System.Int64)
  parent: OsuSharp.Interfaces.IOsuApi
  langs:
  - csharp
  - vb
  name: GetMatch(Int64)
  nameWithType: IOsuApi.GetMatch(Int64)
  fullName: OsuSharp.Interfaces.IOsuApi.GetMatch(System.Int64)
  type: Method
  source:
    id: GetMatch
    path: ''
    startLine: 3529
  assemblies:
  - cs.temp.dll
  namespace: OsuSharp.Interfaces
  summary: "\nMethod that returns a <xref href=\"OsuSharp.Endpoints.Multiplayer\" data-throw-if-not-resolved=\"false\"></xref> by the given matchid.\n"
  example: []
  syntax:
    content: Multiplayer GetMatch(long matchid)
    parameters:
    - id: matchid
      type: System.Int64
      description: Id of the match.
    return:
      type: OsuSharp.Endpoints.Multiplayer
      description: "\n<xref href=\"OsuSharp.Endpoints.Multiplayer\" data-throw-if-not-resolved=\"false\"></xref>\n"
    content.vb: Function GetMatch(matchid As Long) As Multiplayer
  overload: OsuSharp.Interfaces.IOsuApi.GetMatch*
- uid: OsuSharp.Interfaces.IOsuApi.GetMatchAsync(System.Int64,System.Threading.CancellationToken)
  commentId: M:OsuSharp.Interfaces.IOsuApi.GetMatchAsync(System.Int64,System.Threading.CancellationToken)
  id: GetMatchAsync(System.Int64,System.Threading.CancellationToken)
  parent: OsuSharp.Interfaces.IOsuApi
  langs:
  - csharp
  - vb
  name: GetMatchAsync(Int64, CancellationToken)
  nameWithType: IOsuApi.GetMatchAsync(Int64, CancellationToken)
  fullName: OsuSharp.Interfaces.IOsuApi.GetMatchAsync(System.Int64, System.Threading.CancellationToken)
  type: Method
  source:
    id: GetMatchAsync
    path: ''
    startLine: 3539
  assemblies:
  - cs.temp.dll
  namespace: OsuSharp.Interfaces
  summary: "\nMethod that returns a <xref href=\"OsuSharp.Endpoints.Multiplayer\" data-throw-if-not-resolved=\"false\"></xref> by the given matchid.\n"
  example: []
  syntax:
    content: Task<Multiplayer> GetMatchAsync(long matchid, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: matchid
      type: System.Int64
      description: Id of the match.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: Cancellation token
    return:
      type: System.Threading.Tasks.Task{OsuSharp.Endpoints.Multiplayer}
      description: "\n<xref href=\"OsuSharp.Endpoints.Multiplayer\" data-throw-if-not-resolved=\"false\"></xref>\n"
    content.vb: Function GetMatchAsync(matchid As Long, cancellationToken As CancellationToken = Nothing) As Task(Of Multiplayer)
  overload: OsuSharp.Interfaces.IOsuApi.GetMatchAsync*
- uid: OsuSharp.Interfaces.IOsuApi.GetReplayByUsername(System.Int64,System.String,OsuSharp.Misc.GameMode)
  commentId: M:OsuSharp.Interfaces.IOsuApi.GetReplayByUsername(System.Int64,System.String,OsuSharp.Misc.GameMode)
  id: GetReplayByUsername(System.Int64,System.String,OsuSharp.Misc.GameMode)
  parent: OsuSharp.Interfaces.IOsuApi
  langs:
  - csharp
  - vb
  name: GetReplayByUsername(Int64, String, GameMode)
  nameWithType: IOsuApi.GetReplayByUsername(Int64, String, GameMode)
  fullName: OsuSharp.Interfaces.IOsuApi.GetReplayByUsername(System.Int64, System.String, OsuSharp.Misc.GameMode)
  type: Method
  source:
    id: GetReplayByUsername
    path: ''
    startLine: 3550
  assemblies:
  - cs.temp.dll
  namespace: OsuSharp.Interfaces
  summary: "\nMethod that returns a <xref href=\"OsuSharp.Endpoints.Replay\" data-throw-if-not-resolved=\"false\"></xref> by the given beatmapid and username.\n"
  example: []
  syntax:
    content: Replay GetReplayByUsername(long beatmapid, string username, GameMode gameMode = GameMode.Standard)
    parameters:
    - id: beatmapid
      type: System.Int64
      description: Id of the beatmap. Must be the id of a difficulty.
    - id: username
      type: System.String
      description: Username of the user.
    - id: gameMode
      type: OsuSharp.Misc.GameMode
      description: Gamemode of the play. Standard, Taiko, Catch or Mania.
    return:
      type: OsuSharp.Endpoints.Replay
      description: "\n<xref href=\"OsuSharp.Endpoints.Replay\" data-throw-if-not-resolved=\"false\"></xref>\n"
    content.vb: Function GetReplayByUsername(beatmapid As Long, username As String, gameMode As GameMode = GameMode.Standard) As Replay
  overload: OsuSharp.Interfaces.IOsuApi.GetReplayByUsername*
- uid: OsuSharp.Interfaces.IOsuApi.GetReplayByUsernameAsync(System.Int64,System.String,OsuSharp.Misc.GameMode,System.Threading.CancellationToken)
  commentId: M:OsuSharp.Interfaces.IOsuApi.GetReplayByUsernameAsync(System.Int64,System.String,OsuSharp.Misc.GameMode,System.Threading.CancellationToken)
  id: GetReplayByUsernameAsync(System.Int64,System.String,OsuSharp.Misc.GameMode,System.Threading.CancellationToken)
  parent: OsuSharp.Interfaces.IOsuApi
  langs:
  - csharp
  - vb
  name: GetReplayByUsernameAsync(Int64, String, GameMode, CancellationToken)
  nameWithType: IOsuApi.GetReplayByUsernameAsync(Int64, String, GameMode, CancellationToken)
  fullName: OsuSharp.Interfaces.IOsuApi.GetReplayByUsernameAsync(System.Int64, System.String, OsuSharp.Misc.GameMode, System.Threading.CancellationToken)
  type: Method
  source:
    id: GetReplayByUsernameAsync
    path: ''
    startLine: 3562
  assemblies:
  - cs.temp.dll
  namespace: OsuSharp.Interfaces
  summary: "\nMethod that returns a <xref href=\"OsuSharp.Endpoints.Replay\" data-throw-if-not-resolved=\"false\"></xref> by the given beatmapid and username.\n"
  example: []
  syntax:
    content: Task<Replay> GetReplayByUsernameAsync(long beatmapid, string username, GameMode gameMode = GameMode.Standard, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: beatmapid
      type: System.Int64
      description: Id of the beatmap. Must be the id of a difficulty.
    - id: username
      type: System.String
      description: Username of the user.
    - id: gameMode
      type: OsuSharp.Misc.GameMode
      description: Gamemode of the play. Standard, Taiko, Catch or Mania.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: Cancellation token
    return:
      type: System.Threading.Tasks.Task{OsuSharp.Endpoints.Replay}
      description: "\n<xref href=\"OsuSharp.Endpoints.Replay\" data-throw-if-not-resolved=\"false\"></xref>\n"
    content.vb: Function GetReplayByUsernameAsync(beatmapid As Long, username As String, gameMode As GameMode = GameMode.Standard, cancellationToken As CancellationToken = Nothing) As Task(Of Replay)
  overload: OsuSharp.Interfaces.IOsuApi.GetReplayByUsernameAsync*
- uid: OsuSharp.Interfaces.IOsuApi.GetReplayByUserid(System.Int64,System.Int64,OsuSharp.Misc.GameMode)
  commentId: M:OsuSharp.Interfaces.IOsuApi.GetReplayByUserid(System.Int64,System.Int64,OsuSharp.Misc.GameMode)
  id: GetReplayByUserid(System.Int64,System.Int64,OsuSharp.Misc.GameMode)
  parent: OsuSharp.Interfaces.IOsuApi
  langs:
  - csharp
  - vb
  name: GetReplayByUserid(Int64, Int64, GameMode)
  nameWithType: IOsuApi.GetReplayByUserid(Int64, Int64, GameMode)
  fullName: OsuSharp.Interfaces.IOsuApi.GetReplayByUserid(System.Int64, System.Int64, OsuSharp.Misc.GameMode)
  type: Method
  source:
    id: GetReplayByUserid
    path: ''
    startLine: 3574
  assemblies:
  - cs.temp.dll
  namespace: OsuSharp.Interfaces
  summary: "\nMethod that returns a <xref href=\"OsuSharp.Endpoints.Replay\" data-throw-if-not-resolved=\"false\"></xref> by the given beatmapid and userid.\n"
  example: []
  syntax:
    content: Replay GetReplayByUserid(long beatmapid, long userid, GameMode gameMode = GameMode.Standard)
    parameters:
    - id: beatmapid
      type: System.Int64
      description: Id of the beatmap. Must be the id of a difficulty.
    - id: userid
      type: System.Int64
      description: Id of the user.
    - id: gameMode
      type: OsuSharp.Misc.GameMode
      description: Gamemode of the play. Standard, Taiko, Catch or Mania.
    return:
      type: OsuSharp.Endpoints.Replay
      description: "\n<xref href=\"OsuSharp.Endpoints.Replay\" data-throw-if-not-resolved=\"false\"></xref>\n"
    content.vb: Function GetReplayByUserid(beatmapid As Long, userid As Long, gameMode As GameMode = GameMode.Standard) As Replay
  overload: OsuSharp.Interfaces.IOsuApi.GetReplayByUserid*
- uid: OsuSharp.Interfaces.IOsuApi.GetReplayByUseridAsync(System.Int64,System.Int64,OsuSharp.Misc.GameMode,System.Threading.CancellationToken)
  commentId: M:OsuSharp.Interfaces.IOsuApi.GetReplayByUseridAsync(System.Int64,System.Int64,OsuSharp.Misc.GameMode,System.Threading.CancellationToken)
  id: GetReplayByUseridAsync(System.Int64,System.Int64,OsuSharp.Misc.GameMode,System.Threading.CancellationToken)
  parent: OsuSharp.Interfaces.IOsuApi
  langs:
  - csharp
  - vb
  name: GetReplayByUseridAsync(Int64, Int64, GameMode, CancellationToken)
  nameWithType: IOsuApi.GetReplayByUseridAsync(Int64, Int64, GameMode, CancellationToken)
  fullName: OsuSharp.Interfaces.IOsuApi.GetReplayByUseridAsync(System.Int64, System.Int64, OsuSharp.Misc.GameMode, System.Threading.CancellationToken)
  type: Method
  source:
    id: GetReplayByUseridAsync
    path: ''
    startLine: 3586
  assemblies:
  - cs.temp.dll
  namespace: OsuSharp.Interfaces
  summary: "\nMethod that returns a <xref href=\"OsuSharp.Endpoints.Replay\" data-throw-if-not-resolved=\"false\"></xref> by the given beatmapid and userid.\n"
  example: []
  syntax:
    content: Task<Replay> GetReplayByUseridAsync(long beatmapid, long userid, GameMode gameMode = GameMode.Standard, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: beatmapid
      type: System.Int64
      description: Id of the beatmap. Must be the id of a difficulty.
    - id: userid
      type: System.Int64
      description: Id of the user.
    - id: gameMode
      type: OsuSharp.Misc.GameMode
      description: Gamemode of the play. Standard, Taiko, Catch or Mania.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: Cancellation token
    return:
      type: System.Threading.Tasks.Task{OsuSharp.Endpoints.Replay}
      description: "\n<xref href=\"OsuSharp.Endpoints.Replay\" data-throw-if-not-resolved=\"false\"></xref>\n"
    content.vb: Function GetReplayByUseridAsync(beatmapid As Long, userid As Long, gameMode As GameMode = GameMode.Standard, cancellationToken As CancellationToken = Nothing) As Task(Of Replay)
  overload: OsuSharp.Interfaces.IOsuApi.GetReplayByUseridAsync*
references:
- uid: OsuSharp.Interfaces
  commentId: N:OsuSharp.Interfaces
  name: OsuSharp.Interfaces
  nameWithType: OsuSharp.Interfaces
  fullName: OsuSharp.Interfaces
- uid: OsuSharp.Interfaces.IOsuApi.ApiKey*
  commentId: Overload:OsuSharp.Interfaces.IOsuApi.ApiKey
  name: ApiKey
  nameWithType: IOsuApi.ApiKey
  fullName: OsuSharp.Interfaces.IOsuApi.ApiKey
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: OsuSharp.Interfaces.IOsuApi.ModsSeparator*
  commentId: Overload:OsuSharp.Interfaces.IOsuApi.ModsSeparator
  name: ModsSeparator
  nameWithType: IOsuApi.ModsSeparator
  fullName: OsuSharp.Interfaces.IOsuApi.ModsSeparator
- uid: OsuSharp.Interfaces.IOsuApi.Logger*
  commentId: Overload:OsuSharp.Interfaces.IOsuApi.Logger
  name: Logger
  nameWithType: IOsuApi.Logger
  fullName: OsuSharp.Interfaces.IOsuApi.Logger
- uid: OsuSharp.Interfaces.IOsuSharpLogger
  commentId: T:OsuSharp.Interfaces.IOsuSharpLogger
  parent: OsuSharp.Interfaces
  name: IOsuSharpLogger
  nameWithType: IOsuSharpLogger
  fullName: OsuSharp.Interfaces.IOsuSharpLogger
- uid: OsuSharp.Endpoints.Beatmap
  commentId: T:OsuSharp.Endpoints.Beatmap
  parent: OsuSharp.Endpoints
  name: Beatmap
  nameWithType: Beatmap
  fullName: OsuSharp.Endpoints.Beatmap
- uid: OsuSharp.Interfaces.IOsuApi.GetBeatmap*
  commentId: Overload:OsuSharp.Interfaces.IOsuApi.GetBeatmap
  name: GetBeatmap
  nameWithType: IOsuApi.GetBeatmap
  fullName: OsuSharp.Interfaces.IOsuApi.GetBeatmap
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: OsuSharp.Misc.BeatmapType
  commentId: T:OsuSharp.Misc.BeatmapType
  parent: OsuSharp.Misc
  name: BeatmapType
  nameWithType: BeatmapType
  fullName: OsuSharp.Misc.BeatmapType
- uid: OsuSharp.Misc.GameMode
  commentId: T:OsuSharp.Misc.GameMode
  parent: OsuSharp.Misc
  name: GameMode
  nameWithType: GameMode
  fullName: OsuSharp.Misc.GameMode
- uid: OsuSharp.Endpoints
  commentId: N:OsuSharp.Endpoints
  name: OsuSharp.Endpoints
  nameWithType: OsuSharp.Endpoints
  fullName: OsuSharp.Endpoints
- uid: OsuSharp.Misc
  commentId: N:OsuSharp.Misc
  name: OsuSharp.Misc
  nameWithType: OsuSharp.Misc
  fullName: OsuSharp.Misc
- uid: OsuSharp.Interfaces.IOsuApi.GetBeatmapAsync*
  commentId: Overload:OsuSharp.Interfaces.IOsuApi.GetBeatmapAsync
  name: GetBeatmapAsync
  nameWithType: IOsuApi.GetBeatmapAsync
  fullName: OsuSharp.Interfaces.IOsuApi.GetBeatmapAsync
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task{OsuSharp.Endpoints.Beatmap}
  commentId: T:System.Threading.Tasks.Task{OsuSharp.Endpoints.Beatmap}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<Beatmap>
  nameWithType: Task<Beatmap>
  fullName: System.Threading.Tasks.Task<OsuSharp.Endpoints.Beatmap>
  nameWithType.vb: Task(Of Beatmap)
  fullName.vb: System.Threading.Tasks.Task(Of OsuSharp.Endpoints.Beatmap)
  name.vb: Task(Of Beatmap)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: OsuSharp.Endpoints.Beatmap
    name: Beatmap
    nameWithType: Beatmap
    fullName: OsuSharp.Endpoints.Beatmap
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: OsuSharp.Endpoints.Beatmap
    name: Beatmap
    nameWithType: Beatmap
    fullName: OsuSharp.Endpoints.Beatmap
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: true
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: OsuSharp.Interfaces.IOsuApi.GetBeatmapsByCreator*
  commentId: Overload:OsuSharp.Interfaces.IOsuApi.GetBeatmapsByCreator
  name: GetBeatmapsByCreator
  nameWithType: IOsuApi.GetBeatmapsByCreator
  fullName: OsuSharp.Interfaces.IOsuApi.GetBeatmapsByCreator
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Collections.Generic.List{OsuSharp.Endpoints.Beatmap}
  commentId: T:System.Collections.Generic.List{OsuSharp.Endpoints.Beatmap}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<Beatmap>
  nameWithType: List<Beatmap>
  fullName: System.Collections.Generic.List<OsuSharp.Endpoints.Beatmap>
  nameWithType.vb: List(Of Beatmap)
  fullName.vb: System.Collections.Generic.List(Of OsuSharp.Endpoints.Beatmap)
  name.vb: List(Of Beatmap)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: OsuSharp.Endpoints.Beatmap
    name: Beatmap
    nameWithType: Beatmap
    fullName: OsuSharp.Endpoints.Beatmap
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: OsuSharp.Endpoints.Beatmap
    name: Beatmap
    nameWithType: Beatmap
    fullName: OsuSharp.Endpoints.Beatmap
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: OsuSharp.Interfaces.IOsuApi.GetBeatmapsByCreatorAsync*
  commentId: Overload:OsuSharp.Interfaces.IOsuApi.GetBeatmapsByCreatorAsync
  name: GetBeatmapsByCreatorAsync
  nameWithType: IOsuApi.GetBeatmapsByCreatorAsync
  fullName: OsuSharp.Interfaces.IOsuApi.GetBeatmapsByCreatorAsync
- uid: System.Threading.Tasks.Task{System.Collections.Generic.List{OsuSharp.Endpoints.Beatmap}}
  commentId: T:System.Threading.Tasks.Task{System.Collections.Generic.List{OsuSharp.Endpoints.Beatmap}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<List<Beatmap>>
  nameWithType: Task<List<Beatmap>>
  fullName: System.Threading.Tasks.Task<System.Collections.Generic.List<OsuSharp.Endpoints.Beatmap>>
  nameWithType.vb: Task(Of List(Of Beatmap))
  fullName.vb: System.Threading.Tasks.Task(Of System.Collections.Generic.List(Of OsuSharp.Endpoints.Beatmap))
  name.vb: Task(Of List(Of Beatmap))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: OsuSharp.Endpoints.Beatmap
    name: Beatmap
    nameWithType: Beatmap
    fullName: OsuSharp.Endpoints.Beatmap
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: OsuSharp.Endpoints.Beatmap
    name: Beatmap
    nameWithType: Beatmap
    fullName: OsuSharp.Endpoints.Beatmap
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: OsuSharp.Interfaces.IOsuApi.GetBeatmaps*
  commentId: Overload:OsuSharp.Interfaces.IOsuApi.GetBeatmaps
  name: GetBeatmaps
  nameWithType: IOsuApi.GetBeatmaps
  fullName: OsuSharp.Interfaces.IOsuApi.GetBeatmaps
- uid: OsuSharp.Interfaces.IOsuApi.GetBeatmapsAsync*
  commentId: Overload:OsuSharp.Interfaces.IOsuApi.GetBeatmapsAsync
  name: GetBeatmapsAsync
  nameWithType: IOsuApi.GetBeatmapsAsync
  fullName: OsuSharp.Interfaces.IOsuApi.GetBeatmapsAsync
- uid: OsuSharp.Interfaces.IOsuApi.GetLastBeatmaps*
  commentId: Overload:OsuSharp.Interfaces.IOsuApi.GetLastBeatmaps
  name: GetLastBeatmaps
  nameWithType: IOsuApi.GetLastBeatmaps
  fullName: OsuSharp.Interfaces.IOsuApi.GetLastBeatmaps
- uid: OsuSharp.Interfaces.IOsuApi.GetLastBeatmapsAsync*
  commentId: Overload:OsuSharp.Interfaces.IOsuApi.GetLastBeatmapsAsync
  name: GetLastBeatmapsAsync
  nameWithType: IOsuApi.GetLastBeatmapsAsync
  fullName: OsuSharp.Interfaces.IOsuApi.GetLastBeatmapsAsync
- uid: OsuSharp.Endpoints.User
  commentId: T:OsuSharp.Endpoints.User
  parent: OsuSharp.Endpoints
  name: User
  nameWithType: User
  fullName: OsuSharp.Endpoints.User
- uid: OsuSharp.Interfaces.IOsuApi.GetUserByName*
  commentId: Overload:OsuSharp.Interfaces.IOsuApi.GetUserByName
  name: GetUserByName
  nameWithType: IOsuApi.GetUserByName
  fullName: OsuSharp.Interfaces.IOsuApi.GetUserByName
- uid: OsuSharp.Interfaces.IOsuApi.GetUserByNameAsync*
  commentId: Overload:OsuSharp.Interfaces.IOsuApi.GetUserByNameAsync
  name: GetUserByNameAsync
  nameWithType: IOsuApi.GetUserByNameAsync
  fullName: OsuSharp.Interfaces.IOsuApi.GetUserByNameAsync
- uid: System.Threading.Tasks.Task{OsuSharp.Endpoints.User}
  commentId: T:System.Threading.Tasks.Task{OsuSharp.Endpoints.User}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<User>
  nameWithType: Task<User>
  fullName: System.Threading.Tasks.Task<OsuSharp.Endpoints.User>
  nameWithType.vb: Task(Of User)
  fullName.vb: System.Threading.Tasks.Task(Of OsuSharp.Endpoints.User)
  name.vb: Task(Of User)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: OsuSharp.Endpoints.User
    name: User
    nameWithType: User
    fullName: OsuSharp.Endpoints.User
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: OsuSharp.Endpoints.User
    name: User
    nameWithType: User
    fullName: OsuSharp.Endpoints.User
  - name: )
    nameWithType: )
    fullName: )
- uid: OsuSharp.Interfaces.IOsuApi.GetUserById*
  commentId: Overload:OsuSharp.Interfaces.IOsuApi.GetUserById
  name: GetUserById
  nameWithType: IOsuApi.GetUserById
  fullName: OsuSharp.Interfaces.IOsuApi.GetUserById
- uid: OsuSharp.Interfaces.IOsuApi.GetUserByIdAsync*
  commentId: Overload:OsuSharp.Interfaces.IOsuApi.GetUserByIdAsync
  name: GetUserByIdAsync
  nameWithType: IOsuApi.GetUserByIdAsync
  fullName: OsuSharp.Interfaces.IOsuApi.GetUserByIdAsync
- uid: OsuSharp.Endpoints.Score
  commentId: T:OsuSharp.Endpoints.Score
  parent: OsuSharp.Endpoints
  name: Score
  nameWithType: Score
  fullName: OsuSharp.Endpoints.Score
- uid: OsuSharp.Interfaces.IOsuApi.GetScoreByUsername*
  commentId: Overload:OsuSharp.Interfaces.IOsuApi.GetScoreByUsername
  name: GetScoreByUsername
  nameWithType: IOsuApi.GetScoreByUsername
  fullName: OsuSharp.Interfaces.IOsuApi.GetScoreByUsername
- uid: OsuSharp.Interfaces.IOsuApi.GetScoreByUsernameAsync*
  commentId: Overload:OsuSharp.Interfaces.IOsuApi.GetScoreByUsernameAsync
  name: GetScoreByUsernameAsync
  nameWithType: IOsuApi.GetScoreByUsernameAsync
  fullName: OsuSharp.Interfaces.IOsuApi.GetScoreByUsernameAsync
- uid: System.Threading.Tasks.Task{OsuSharp.Endpoints.Score}
  commentId: T:System.Threading.Tasks.Task{OsuSharp.Endpoints.Score}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<Score>
  nameWithType: Task<Score>
  fullName: System.Threading.Tasks.Task<OsuSharp.Endpoints.Score>
  nameWithType.vb: Task(Of Score)
  fullName.vb: System.Threading.Tasks.Task(Of OsuSharp.Endpoints.Score)
  name.vb: Task(Of Score)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: OsuSharp.Endpoints.Score
    name: Score
    nameWithType: Score
    fullName: OsuSharp.Endpoints.Score
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: OsuSharp.Endpoints.Score
    name: Score
    nameWithType: Score
    fullName: OsuSharp.Endpoints.Score
  - name: )
    nameWithType: )
    fullName: )
- uid: OsuSharp.Interfaces.IOsuApi.GetScoreByUserid*
  commentId: Overload:OsuSharp.Interfaces.IOsuApi.GetScoreByUserid
  name: GetScoreByUserid
  nameWithType: IOsuApi.GetScoreByUserid
  fullName: OsuSharp.Interfaces.IOsuApi.GetScoreByUserid
- uid: System.UInt64
  commentId: T:System.UInt64
  parent: System
  isExternal: true
  name: UInt64
  nameWithType: UInt64
  fullName: System.UInt64
- uid: OsuSharp.Interfaces.IOsuApi.GetScoreByUseridAsync*
  commentId: Overload:OsuSharp.Interfaces.IOsuApi.GetScoreByUseridAsync
  name: GetScoreByUseridAsync
  nameWithType: IOsuApi.GetScoreByUseridAsync
  fullName: OsuSharp.Interfaces.IOsuApi.GetScoreByUseridAsync
- uid: OsuSharp.Interfaces.IOsuApi.GetScores*
  commentId: Overload:OsuSharp.Interfaces.IOsuApi.GetScores
  name: GetScores
  nameWithType: IOsuApi.GetScores
  fullName: OsuSharp.Interfaces.IOsuApi.GetScores
- uid: System.Collections.Generic.List{OsuSharp.Endpoints.Score}
  commentId: T:System.Collections.Generic.List{OsuSharp.Endpoints.Score}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<Score>
  nameWithType: List<Score>
  fullName: System.Collections.Generic.List<OsuSharp.Endpoints.Score>
  nameWithType.vb: List(Of Score)
  fullName.vb: System.Collections.Generic.List(Of OsuSharp.Endpoints.Score)
  name.vb: List(Of Score)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: OsuSharp.Endpoints.Score
    name: Score
    nameWithType: Score
    fullName: OsuSharp.Endpoints.Score
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: OsuSharp.Endpoints.Score
    name: Score
    nameWithType: Score
    fullName: OsuSharp.Endpoints.Score
  - name: )
    nameWithType: )
    fullName: )
- uid: OsuSharp.Interfaces.IOsuApi.GetScoresAsync*
  commentId: Overload:OsuSharp.Interfaces.IOsuApi.GetScoresAsync
  name: GetScoresAsync
  nameWithType: IOsuApi.GetScoresAsync
  fullName: OsuSharp.Interfaces.IOsuApi.GetScoresAsync
- uid: System.Threading.Tasks.Task{System.Collections.Generic.List{OsuSharp.Endpoints.Score}}
  commentId: T:System.Threading.Tasks.Task{System.Collections.Generic.List{OsuSharp.Endpoints.Score}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<List<Score>>
  nameWithType: Task<List<Score>>
  fullName: System.Threading.Tasks.Task<System.Collections.Generic.List<OsuSharp.Endpoints.Score>>
  nameWithType.vb: Task(Of List(Of Score))
  fullName.vb: System.Threading.Tasks.Task(Of System.Collections.Generic.List(Of OsuSharp.Endpoints.Score))
  name.vb: Task(Of List(Of Score))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: OsuSharp.Endpoints.Score
    name: Score
    nameWithType: Score
    fullName: OsuSharp.Endpoints.Score
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: OsuSharp.Endpoints.Score
    name: Score
    nameWithType: Score
    fullName: OsuSharp.Endpoints.Score
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: OsuSharp.Entities.BeatmapScores
  commentId: T:OsuSharp.Entities.BeatmapScores
  parent: OsuSharp.Entities
  name: BeatmapScores
  nameWithType: BeatmapScores
  fullName: OsuSharp.Entities.BeatmapScores
- uid: OsuSharp.Interfaces.IOsuApi.GetScoresAndBeatmap*
  commentId: Overload:OsuSharp.Interfaces.IOsuApi.GetScoresAndBeatmap
  name: GetScoresAndBeatmap
  nameWithType: IOsuApi.GetScoresAndBeatmap
  fullName: OsuSharp.Interfaces.IOsuApi.GetScoresAndBeatmap
- uid: OsuSharp.Entities
  commentId: N:OsuSharp.Entities
  name: OsuSharp.Entities
  nameWithType: OsuSharp.Entities
  fullName: OsuSharp.Entities
- uid: OsuSharp.Interfaces.IOsuApi.GetScoresAndBeatmapAsync*
  commentId: Overload:OsuSharp.Interfaces.IOsuApi.GetScoresAndBeatmapAsync
  name: GetScoresAndBeatmapAsync
  nameWithType: IOsuApi.GetScoresAndBeatmapAsync
  fullName: OsuSharp.Interfaces.IOsuApi.GetScoresAndBeatmapAsync
- uid: System.Threading.Tasks.Task{OsuSharp.Entities.BeatmapScores}
  commentId: T:System.Threading.Tasks.Task{OsuSharp.Entities.BeatmapScores}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<BeatmapScores>
  nameWithType: Task<BeatmapScores>
  fullName: System.Threading.Tasks.Task<OsuSharp.Entities.BeatmapScores>
  nameWithType.vb: Task(Of BeatmapScores)
  fullName.vb: System.Threading.Tasks.Task(Of OsuSharp.Entities.BeatmapScores)
  name.vb: Task(Of BeatmapScores)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: OsuSharp.Entities.BeatmapScores
    name: BeatmapScores
    nameWithType: BeatmapScores
    fullName: OsuSharp.Entities.BeatmapScores
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: OsuSharp.Entities.BeatmapScores
    name: BeatmapScores
    nameWithType: BeatmapScores
    fullName: OsuSharp.Entities.BeatmapScores
  - name: )
    nameWithType: )
    fullName: )
- uid: OsuSharp.Entities.BeatmapScoresUsers
  commentId: T:OsuSharp.Entities.BeatmapScoresUsers
  parent: OsuSharp.Entities
  name: BeatmapScoresUsers
  nameWithType: BeatmapScoresUsers
  fullName: OsuSharp.Entities.BeatmapScoresUsers
- uid: OsuSharp.Interfaces.IOsuApi.GetScoresWithUsersAndBeatmap*
  commentId: Overload:OsuSharp.Interfaces.IOsuApi.GetScoresWithUsersAndBeatmap
  name: GetScoresWithUsersAndBeatmap
  nameWithType: IOsuApi.GetScoresWithUsersAndBeatmap
  fullName: OsuSharp.Interfaces.IOsuApi.GetScoresWithUsersAndBeatmap
- uid: OsuSharp.Interfaces.IOsuApi.GetScoresWithUsersAndBeatmapAsync*
  commentId: Overload:OsuSharp.Interfaces.IOsuApi.GetScoresWithUsersAndBeatmapAsync
  name: GetScoresWithUsersAndBeatmapAsync
  nameWithType: IOsuApi.GetScoresWithUsersAndBeatmapAsync
  fullName: OsuSharp.Interfaces.IOsuApi.GetScoresWithUsersAndBeatmapAsync
- uid: System.Threading.Tasks.Task{OsuSharp.Entities.BeatmapScoresUsers}
  commentId: T:System.Threading.Tasks.Task{OsuSharp.Entities.BeatmapScoresUsers}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<BeatmapScoresUsers>
  nameWithType: Task<BeatmapScoresUsers>
  fullName: System.Threading.Tasks.Task<OsuSharp.Entities.BeatmapScoresUsers>
  nameWithType.vb: Task(Of BeatmapScoresUsers)
  fullName.vb: System.Threading.Tasks.Task(Of OsuSharp.Entities.BeatmapScoresUsers)
  name.vb: Task(Of BeatmapScoresUsers)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: OsuSharp.Entities.BeatmapScoresUsers
    name: BeatmapScoresUsers
    nameWithType: BeatmapScoresUsers
    fullName: OsuSharp.Entities.BeatmapScoresUsers
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: OsuSharp.Entities.BeatmapScoresUsers
    name: BeatmapScoresUsers
    nameWithType: BeatmapScoresUsers
    fullName: OsuSharp.Entities.BeatmapScoresUsers
  - name: )
    nameWithType: )
    fullName: )
- uid: OsuSharp.Endpoints.UserBest
  commentId: T:OsuSharp.Endpoints.UserBest
  parent: OsuSharp.Endpoints
  name: UserBest
  nameWithType: UserBest
  fullName: OsuSharp.Endpoints.UserBest
- uid: OsuSharp.Interfaces.IOsuApi.GetUserBestByUsername*
  commentId: Overload:OsuSharp.Interfaces.IOsuApi.GetUserBestByUsername
  name: GetUserBestByUsername
  nameWithType: IOsuApi.GetUserBestByUsername
  fullName: OsuSharp.Interfaces.IOsuApi.GetUserBestByUsername
- uid: System.Collections.Generic.List{OsuSharp.Endpoints.UserBest}
  commentId: T:System.Collections.Generic.List{OsuSharp.Endpoints.UserBest}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<UserBest>
  nameWithType: List<UserBest>
  fullName: System.Collections.Generic.List<OsuSharp.Endpoints.UserBest>
  nameWithType.vb: List(Of UserBest)
  fullName.vb: System.Collections.Generic.List(Of OsuSharp.Endpoints.UserBest)
  name.vb: List(Of UserBest)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: OsuSharp.Endpoints.UserBest
    name: UserBest
    nameWithType: UserBest
    fullName: OsuSharp.Endpoints.UserBest
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: OsuSharp.Endpoints.UserBest
    name: UserBest
    nameWithType: UserBest
    fullName: OsuSharp.Endpoints.UserBest
  - name: )
    nameWithType: )
    fullName: )
- uid: OsuSharp.Interfaces.IOsuApi.GetUserBestByUsernameAsync*
  commentId: Overload:OsuSharp.Interfaces.IOsuApi.GetUserBestByUsernameAsync
  name: GetUserBestByUsernameAsync
  nameWithType: IOsuApi.GetUserBestByUsernameAsync
  fullName: OsuSharp.Interfaces.IOsuApi.GetUserBestByUsernameAsync
- uid: System.Threading.Tasks.Task{System.Collections.Generic.List{OsuSharp.Endpoints.UserBest}}
  commentId: T:System.Threading.Tasks.Task{System.Collections.Generic.List{OsuSharp.Endpoints.UserBest}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<List<UserBest>>
  nameWithType: Task<List<UserBest>>
  fullName: System.Threading.Tasks.Task<System.Collections.Generic.List<OsuSharp.Endpoints.UserBest>>
  nameWithType.vb: Task(Of List(Of UserBest))
  fullName.vb: System.Threading.Tasks.Task(Of System.Collections.Generic.List(Of OsuSharp.Endpoints.UserBest))
  name.vb: Task(Of List(Of UserBest))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: OsuSharp.Endpoints.UserBest
    name: UserBest
    nameWithType: UserBest
    fullName: OsuSharp.Endpoints.UserBest
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: OsuSharp.Endpoints.UserBest
    name: UserBest
    nameWithType: UserBest
    fullName: OsuSharp.Endpoints.UserBest
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: OsuSharp.Entities.UserBestBeatmap
  commentId: T:OsuSharp.Entities.UserBestBeatmap
  name: UserBestBeatmap
  nameWithType: UserBestBeatmap
  fullName: OsuSharp.Entities.UserBestBeatmap
- uid: OsuSharp.Interfaces.IOsuApi.GetUserBestAndBeatmapByUsername*
  commentId: Overload:OsuSharp.Interfaces.IOsuApi.GetUserBestAndBeatmapByUsername
  name: GetUserBestAndBeatmapByUsername
  nameWithType: IOsuApi.GetUserBestAndBeatmapByUsername
  fullName: OsuSharp.Interfaces.IOsuApi.GetUserBestAndBeatmapByUsername
- uid: System.Collections.Generic.List{OsuSharp.Entities.UserBestBeatmap}
  commentId: T:System.Collections.Generic.List{OsuSharp.Entities.UserBestBeatmap}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<UserBestBeatmap>
  nameWithType: List<UserBestBeatmap>
  fullName: System.Collections.Generic.List<OsuSharp.Entities.UserBestBeatmap>
  nameWithType.vb: List(Of UserBestBeatmap)
  fullName.vb: System.Collections.Generic.List(Of OsuSharp.Entities.UserBestBeatmap)
  name.vb: List(Of UserBestBeatmap)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: OsuSharp.Entities.UserBestBeatmap
    name: UserBestBeatmap
    nameWithType: UserBestBeatmap
    fullName: OsuSharp.Entities.UserBestBeatmap
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: OsuSharp.Entities.UserBestBeatmap
    name: UserBestBeatmap
    nameWithType: UserBestBeatmap
    fullName: OsuSharp.Entities.UserBestBeatmap
  - name: )
    nameWithType: )
    fullName: )
- uid: OsuSharp.Interfaces.IOsuApi.GetUserBestAndBeatmapByUsernameAsync*
  commentId: Overload:OsuSharp.Interfaces.IOsuApi.GetUserBestAndBeatmapByUsernameAsync
  name: GetUserBestAndBeatmapByUsernameAsync
  nameWithType: IOsuApi.GetUserBestAndBeatmapByUsernameAsync
  fullName: OsuSharp.Interfaces.IOsuApi.GetUserBestAndBeatmapByUsernameAsync
- uid: System.Threading.Tasks.Task{System.Collections.Generic.List{OsuSharp.Entities.UserBestBeatmap}}
  commentId: T:System.Threading.Tasks.Task{System.Collections.Generic.List{OsuSharp.Entities.UserBestBeatmap}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<List<UserBestBeatmap>>
  nameWithType: Task<List<UserBestBeatmap>>
  fullName: System.Threading.Tasks.Task<System.Collections.Generic.List<OsuSharp.Entities.UserBestBeatmap>>
  nameWithType.vb: Task(Of List(Of UserBestBeatmap))
  fullName.vb: System.Threading.Tasks.Task(Of System.Collections.Generic.List(Of OsuSharp.Entities.UserBestBeatmap))
  name.vb: Task(Of List(Of UserBestBeatmap))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: OsuSharp.Entities.UserBestBeatmap
    name: UserBestBeatmap
    nameWithType: UserBestBeatmap
    fullName: OsuSharp.Entities.UserBestBeatmap
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: OsuSharp.Entities.UserBestBeatmap
    name: UserBestBeatmap
    nameWithType: UserBestBeatmap
    fullName: OsuSharp.Entities.UserBestBeatmap
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: OsuSharp.Interfaces.IOsuApi.GetUserBestByUserid*
  commentId: Overload:OsuSharp.Interfaces.IOsuApi.GetUserBestByUserid
  name: GetUserBestByUserid
  nameWithType: IOsuApi.GetUserBestByUserid
  fullName: OsuSharp.Interfaces.IOsuApi.GetUserBestByUserid
- uid: OsuSharp.Interfaces.IOsuApi.GetUserBestByUseridAsync*
  commentId: Overload:OsuSharp.Interfaces.IOsuApi.GetUserBestByUseridAsync
  name: GetUserBestByUseridAsync
  nameWithType: IOsuApi.GetUserBestByUseridAsync
  fullName: OsuSharp.Interfaces.IOsuApi.GetUserBestByUseridAsync
- uid: OsuSharp.Interfaces.IOsuApi.GetUserBestAndBeatmapByUserid*
  commentId: Overload:OsuSharp.Interfaces.IOsuApi.GetUserBestAndBeatmapByUserid
  name: GetUserBestAndBeatmapByUserid
  nameWithType: IOsuApi.GetUserBestAndBeatmapByUserid
  fullName: OsuSharp.Interfaces.IOsuApi.GetUserBestAndBeatmapByUserid
- uid: OsuSharp.Interfaces.IOsuApi.GetUserBestAndBeatmapByUseridAsync*
  commentId: Overload:OsuSharp.Interfaces.IOsuApi.GetUserBestAndBeatmapByUseridAsync
  name: GetUserBestAndBeatmapByUseridAsync
  nameWithType: IOsuApi.GetUserBestAndBeatmapByUseridAsync
  fullName: OsuSharp.Interfaces.IOsuApi.GetUserBestAndBeatmapByUseridAsync
- uid: OsuSharp.Endpoints.UserRecent
  commentId: T:OsuSharp.Endpoints.UserRecent
  parent: OsuSharp.Endpoints
  name: UserRecent
  nameWithType: UserRecent
  fullName: OsuSharp.Endpoints.UserRecent
- uid: OsuSharp.Interfaces.IOsuApi.GetUserRecentByUsername*
  commentId: Overload:OsuSharp.Interfaces.IOsuApi.GetUserRecentByUsername
  name: GetUserRecentByUsername
  nameWithType: IOsuApi.GetUserRecentByUsername
  fullName: OsuSharp.Interfaces.IOsuApi.GetUserRecentByUsername
- uid: System.Collections.Generic.List{OsuSharp.Endpoints.UserRecent}
  commentId: T:System.Collections.Generic.List{OsuSharp.Endpoints.UserRecent}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<UserRecent>
  nameWithType: List<UserRecent>
  fullName: System.Collections.Generic.List<OsuSharp.Endpoints.UserRecent>
  nameWithType.vb: List(Of UserRecent)
  fullName.vb: System.Collections.Generic.List(Of OsuSharp.Endpoints.UserRecent)
  name.vb: List(Of UserRecent)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: OsuSharp.Endpoints.UserRecent
    name: UserRecent
    nameWithType: UserRecent
    fullName: OsuSharp.Endpoints.UserRecent
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: OsuSharp.Endpoints.UserRecent
    name: UserRecent
    nameWithType: UserRecent
    fullName: OsuSharp.Endpoints.UserRecent
  - name: )
    nameWithType: )
    fullName: )
- uid: OsuSharp.Interfaces.IOsuApi.GetUserRecentByUsernameAsync*
  commentId: Overload:OsuSharp.Interfaces.IOsuApi.GetUserRecentByUsernameAsync
  name: GetUserRecentByUsernameAsync
  nameWithType: IOsuApi.GetUserRecentByUsernameAsync
  fullName: OsuSharp.Interfaces.IOsuApi.GetUserRecentByUsernameAsync
- uid: System.Threading.Tasks.Task{System.Collections.Generic.List{OsuSharp.Endpoints.UserRecent}}
  commentId: T:System.Threading.Tasks.Task{System.Collections.Generic.List{OsuSharp.Endpoints.UserRecent}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<List<UserRecent>>
  nameWithType: Task<List<UserRecent>>
  fullName: System.Threading.Tasks.Task<System.Collections.Generic.List<OsuSharp.Endpoints.UserRecent>>
  nameWithType.vb: Task(Of List(Of UserRecent))
  fullName.vb: System.Threading.Tasks.Task(Of System.Collections.Generic.List(Of OsuSharp.Endpoints.UserRecent))
  name.vb: Task(Of List(Of UserRecent))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: OsuSharp.Endpoints.UserRecent
    name: UserRecent
    nameWithType: UserRecent
    fullName: OsuSharp.Endpoints.UserRecent
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: OsuSharp.Endpoints.UserRecent
    name: UserRecent
    nameWithType: UserRecent
    fullName: OsuSharp.Endpoints.UserRecent
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: OsuSharp.Entities.UserRecentBeatmap
  commentId: T:OsuSharp.Entities.UserRecentBeatmap
  name: UserRecentBeatmap
  nameWithType: UserRecentBeatmap
  fullName: OsuSharp.Entities.UserRecentBeatmap
- uid: OsuSharp.Interfaces.IOsuApi.GetUserRecentAndBeatmapByUsername*
  commentId: Overload:OsuSharp.Interfaces.IOsuApi.GetUserRecentAndBeatmapByUsername
  name: GetUserRecentAndBeatmapByUsername
  nameWithType: IOsuApi.GetUserRecentAndBeatmapByUsername
  fullName: OsuSharp.Interfaces.IOsuApi.GetUserRecentAndBeatmapByUsername
- uid: System.Collections.Generic.List{OsuSharp.Entities.UserRecentBeatmap}
  commentId: T:System.Collections.Generic.List{OsuSharp.Entities.UserRecentBeatmap}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<UserRecentBeatmap>
  nameWithType: List<UserRecentBeatmap>
  fullName: System.Collections.Generic.List<OsuSharp.Entities.UserRecentBeatmap>
  nameWithType.vb: List(Of UserRecentBeatmap)
  fullName.vb: System.Collections.Generic.List(Of OsuSharp.Entities.UserRecentBeatmap)
  name.vb: List(Of UserRecentBeatmap)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: OsuSharp.Entities.UserRecentBeatmap
    name: UserRecentBeatmap
    nameWithType: UserRecentBeatmap
    fullName: OsuSharp.Entities.UserRecentBeatmap
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: OsuSharp.Entities.UserRecentBeatmap
    name: UserRecentBeatmap
    nameWithType: UserRecentBeatmap
    fullName: OsuSharp.Entities.UserRecentBeatmap
  - name: )
    nameWithType: )
    fullName: )
- uid: OsuSharp.Interfaces.IOsuApi.GetUserRecentAndBeatmapByUsernameAsync*
  commentId: Overload:OsuSharp.Interfaces.IOsuApi.GetUserRecentAndBeatmapByUsernameAsync
  name: GetUserRecentAndBeatmapByUsernameAsync
  nameWithType: IOsuApi.GetUserRecentAndBeatmapByUsernameAsync
  fullName: OsuSharp.Interfaces.IOsuApi.GetUserRecentAndBeatmapByUsernameAsync
- uid: System.Threading.Tasks.Task{System.Collections.Generic.List{OsuSharp.Entities.UserRecentBeatmap}}
  commentId: T:System.Threading.Tasks.Task{System.Collections.Generic.List{OsuSharp.Entities.UserRecentBeatmap}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<List<UserRecentBeatmap>>
  nameWithType: Task<List<UserRecentBeatmap>>
  fullName: System.Threading.Tasks.Task<System.Collections.Generic.List<OsuSharp.Entities.UserRecentBeatmap>>
  nameWithType.vb: Task(Of List(Of UserRecentBeatmap))
  fullName.vb: System.Threading.Tasks.Task(Of System.Collections.Generic.List(Of OsuSharp.Entities.UserRecentBeatmap))
  name.vb: Task(Of List(Of UserRecentBeatmap))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: OsuSharp.Entities.UserRecentBeatmap
    name: UserRecentBeatmap
    nameWithType: UserRecentBeatmap
    fullName: OsuSharp.Entities.UserRecentBeatmap
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: OsuSharp.Entities.UserRecentBeatmap
    name: UserRecentBeatmap
    nameWithType: UserRecentBeatmap
    fullName: OsuSharp.Entities.UserRecentBeatmap
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: OsuSharp.Interfaces.IOsuApi.GetUserRecentByUserid*
  commentId: Overload:OsuSharp.Interfaces.IOsuApi.GetUserRecentByUserid
  name: GetUserRecentByUserid
  nameWithType: IOsuApi.GetUserRecentByUserid
  fullName: OsuSharp.Interfaces.IOsuApi.GetUserRecentByUserid
- uid: OsuSharp.Interfaces.IOsuApi.GetUserRecentByUseridAsync*
  commentId: Overload:OsuSharp.Interfaces.IOsuApi.GetUserRecentByUseridAsync
  name: GetUserRecentByUseridAsync
  nameWithType: IOsuApi.GetUserRecentByUseridAsync
  fullName: OsuSharp.Interfaces.IOsuApi.GetUserRecentByUseridAsync
- uid: OsuSharp.Interfaces.IOsuApi.GetUserRecentAndBeatmapByUserid*
  commentId: Overload:OsuSharp.Interfaces.IOsuApi.GetUserRecentAndBeatmapByUserid
  name: GetUserRecentAndBeatmapByUserid
  nameWithType: IOsuApi.GetUserRecentAndBeatmapByUserid
  fullName: OsuSharp.Interfaces.IOsuApi.GetUserRecentAndBeatmapByUserid
- uid: OsuSharp.Interfaces.IOsuApi.GetUserRecentAndBeatmapByUseridAsync*
  commentId: Overload:OsuSharp.Interfaces.IOsuApi.GetUserRecentAndBeatmapByUseridAsync
  name: GetUserRecentAndBeatmapByUseridAsync
  nameWithType: IOsuApi.GetUserRecentAndBeatmapByUseridAsync
  fullName: OsuSharp.Interfaces.IOsuApi.GetUserRecentAndBeatmapByUseridAsync
- uid: OsuSharp.Endpoints.Multiplayer
  commentId: T:OsuSharp.Endpoints.Multiplayer
  parent: OsuSharp.Endpoints
  name: Multiplayer
  nameWithType: Multiplayer
  fullName: OsuSharp.Endpoints.Multiplayer
- uid: OsuSharp.Interfaces.IOsuApi.GetMatch*
  commentId: Overload:OsuSharp.Interfaces.IOsuApi.GetMatch
  name: GetMatch
  nameWithType: IOsuApi.GetMatch
  fullName: OsuSharp.Interfaces.IOsuApi.GetMatch
- uid: OsuSharp.Interfaces.IOsuApi.GetMatchAsync*
  commentId: Overload:OsuSharp.Interfaces.IOsuApi.GetMatchAsync
  name: GetMatchAsync
  nameWithType: IOsuApi.GetMatchAsync
  fullName: OsuSharp.Interfaces.IOsuApi.GetMatchAsync
- uid: System.Threading.Tasks.Task{OsuSharp.Endpoints.Multiplayer}
  commentId: T:System.Threading.Tasks.Task{OsuSharp.Endpoints.Multiplayer}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<Multiplayer>
  nameWithType: Task<Multiplayer>
  fullName: System.Threading.Tasks.Task<OsuSharp.Endpoints.Multiplayer>
  nameWithType.vb: Task(Of Multiplayer)
  fullName.vb: System.Threading.Tasks.Task(Of OsuSharp.Endpoints.Multiplayer)
  name.vb: Task(Of Multiplayer)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: OsuSharp.Endpoints.Multiplayer
    name: Multiplayer
    nameWithType: Multiplayer
    fullName: OsuSharp.Endpoints.Multiplayer
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: OsuSharp.Endpoints.Multiplayer
    name: Multiplayer
    nameWithType: Multiplayer
    fullName: OsuSharp.Endpoints.Multiplayer
  - name: )
    nameWithType: )
    fullName: )
- uid: OsuSharp.Endpoints.Replay
  commentId: T:OsuSharp.Endpoints.Replay
  parent: OsuSharp.Endpoints
  name: Replay
  nameWithType: Replay
  fullName: OsuSharp.Endpoints.Replay
- uid: OsuSharp.Interfaces.IOsuApi.GetReplayByUsername*
  commentId: Overload:OsuSharp.Interfaces.IOsuApi.GetReplayByUsername
  name: GetReplayByUsername
  nameWithType: IOsuApi.GetReplayByUsername
  fullName: OsuSharp.Interfaces.IOsuApi.GetReplayByUsername
- uid: OsuSharp.Interfaces.IOsuApi.GetReplayByUsernameAsync*
  commentId: Overload:OsuSharp.Interfaces.IOsuApi.GetReplayByUsernameAsync
  name: GetReplayByUsernameAsync
  nameWithType: IOsuApi.GetReplayByUsernameAsync
  fullName: OsuSharp.Interfaces.IOsuApi.GetReplayByUsernameAsync
- uid: System.Threading.Tasks.Task{OsuSharp.Endpoints.Replay}
  commentId: T:System.Threading.Tasks.Task{OsuSharp.Endpoints.Replay}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<Replay>
  nameWithType: Task<Replay>
  fullName: System.Threading.Tasks.Task<OsuSharp.Endpoints.Replay>
  nameWithType.vb: Task(Of Replay)
  fullName.vb: System.Threading.Tasks.Task(Of OsuSharp.Endpoints.Replay)
  name.vb: Task(Of Replay)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: OsuSharp.Endpoints.Replay
    name: Replay
    nameWithType: Replay
    fullName: OsuSharp.Endpoints.Replay
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: OsuSharp.Endpoints.Replay
    name: Replay
    nameWithType: Replay
    fullName: OsuSharp.Endpoints.Replay
  - name: )
    nameWithType: )
    fullName: )
- uid: OsuSharp.Interfaces.IOsuApi.GetReplayByUserid*
  commentId: Overload:OsuSharp.Interfaces.IOsuApi.GetReplayByUserid
  name: GetReplayByUserid
  nameWithType: IOsuApi.GetReplayByUserid
  fullName: OsuSharp.Interfaces.IOsuApi.GetReplayByUserid
- uid: OsuSharp.Interfaces.IOsuApi.GetReplayByUseridAsync*
  commentId: Overload:OsuSharp.Interfaces.IOsuApi.GetReplayByUseridAsync
  name: GetReplayByUseridAsync
  nameWithType: IOsuApi.GetReplayByUseridAsync
  fullName: OsuSharp.Interfaces.IOsuApi.GetReplayByUseridAsync
