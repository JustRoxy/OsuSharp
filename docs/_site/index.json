{
  "api/OsuSharp.Entities.UserBestBeatmap.html": {
    "href": "api/OsuSharp.Entities.UserBestBeatmap.html",
    "title": "Class UserBestBeatmap | OsuSharp Documentation",
    "keywords": "Class UserBestBeatmap Inheritance System.Object UserBestBeatmap Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : OsuSharp.Entities Assembly : OsuSharp.dll Syntax public class UserBestBeatmap Properties | Improve this Doc View Source Beatmap Declaration public Beatmap Beatmap { get; set; } Property Value Type Description Beatmap | Improve this Doc View Source UserBest Declaration public UserBest UserBest { get; set; } Property Value Type Description UserBest"
  },
  "api/OsuSharp.Entities.BeatmapScoresUsers.html": {
    "href": "api/OsuSharp.Entities.BeatmapScoresUsers.html",
    "title": "Class BeatmapScoresUsers | OsuSharp Documentation",
    "keywords": "Class BeatmapScoresUsers Inheritance System.Object BeatmapScoresUsers Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : OsuSharp.Entities Assembly : OsuSharp.dll Syntax public class BeatmapScoresUsers Properties | Improve this Doc View Source Beatmap Declaration public Beatmap Beatmap { get; set; } Property Value Type Description Beatmap | Improve this Doc View Source Scores Declaration public List<Score> Scores { get; set; } Property Value Type Description System.Collections.Generic.List < Score > | Improve this Doc View Source Users Declaration public List<User> Users { get; set; } Property Value Type Description System.Collections.Generic.List < User >"
  },
  "api/OsuSharp.html": {
    "href": "api/OsuSharp.html",
    "title": "Namespace OsuSharp | OsuSharp Documentation",
    "keywords": "Namespace OsuSharp Classes OsuApi OsuSharpConfiguration OsuSharpException OsuSharpLogger"
  },
  "api/OsuSharp.UserRecentEndpoint.html": {
    "href": "api/OsuSharp.UserRecentEndpoint.html",
    "title": "Namespace OsuSharp.UserRecentEndpoint | OsuSharp Documentation",
    "keywords": "Namespace OsuSharp.UserRecentEndpoint Classes UserRecent"
  },
  "api/OsuSharp.ScoreEndpoint.html": {
    "href": "api/OsuSharp.ScoreEndpoint.html",
    "title": "Namespace OsuSharp.ScoreEndpoint | OsuSharp Documentation",
    "keywords": "Namespace OsuSharp.ScoreEndpoint Classes Score"
  },
  "api/OsuSharp.Entities.html": {
    "href": "api/OsuSharp.Entities.html",
    "title": "Namespace OsuSharp.Entities | OsuSharp Documentation",
    "keywords": "Namespace OsuSharp.Entities Classes BeatmapScores BeatmapScoresUsers UserBestBeatmap UserRecentBeatmap"
  },
  "api/OsuSharp.BeatmapEndpoint.html": {
    "href": "api/OsuSharp.BeatmapEndpoint.html",
    "title": "Namespace OsuSharp.BeatmapEndpoint | OsuSharp Documentation",
    "keywords": "Namespace OsuSharp.BeatmapEndpoint Classes Beatmap"
  },
  "api/OsuSharp.UserBestEndpoint.html": {
    "href": "api/OsuSharp.UserBestEndpoint.html",
    "title": "Namespace OsuSharp.UserBestEndpoint | OsuSharp Documentation",
    "keywords": "Namespace OsuSharp.UserBestEndpoint Classes UserBest"
  },
  "api/OsuSharp.Misc.GameMode.html": {
    "href": "api/OsuSharp.Misc.GameMode.html",
    "title": "Enum GameMode | OsuSharp Documentation",
    "keywords": "Enum GameMode Enum representing different available osu gamemodes Namespace : OsuSharp.Misc Assembly : OsuSharp.dll Syntax public enum GameMode Fields Name Description Catch Mania Standard Taiko"
  },
  "api/OsuSharp.BeatmapEndpoint.Beatmap.html": {
    "href": "api/OsuSharp.BeatmapEndpoint.Beatmap.html",
    "title": "Class Beatmap | OsuSharp Documentation",
    "keywords": "Class Beatmap Inheritance System.Object Beatmap Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : OsuSharp.BeatmapEndpoint Assembly : OsuSharp.dll Syntax public class Beatmap Properties | Improve this Doc View Source ApproachRate Approach rate (AR) Declaration [JsonProperty(\"diff_approach\")] public float ApproachRate { get; set; } Property Value Type Description System.Single | Improve this Doc View Source Approved Enum that represent the state of the map Declaration public BeatmapState Approved { get; } Property Value Type Description BeatmapState | Improve this Doc View Source ApprovedDate DateTime of beatmap's approval Declaration [JsonProperty(\"approved_date\")] public DateTime? ApprovedDate { get; set; } Property Value Type Description System.Nullable < System.DateTime > | Improve this Doc View Source Artist Name of the artist Declaration [JsonProperty(\"artist\")] public string Artist { get; set; } Property Value Type Description System.String | Improve this Doc View Source BeatmapId Id of the beatmap Declaration [JsonProperty(\"beatmap_id\")] public ulong BeatmapId { get; set; } Property Value Type Description System.UInt64 | Improve this Doc View Source BeatmapsetId Id of the beatmapset Declaration [JsonProperty(\"beatmapset_id\")] public ulong BeatmapsetId { get; set; } Property Value Type Description System.UInt64 | Improve this Doc View Source Bpm BPM of the beatmap Declaration [JsonProperty(\"bpm\")] public float Bpm { get; set; } Property Value Type Description System.Single | Improve this Doc View Source CircleSize Circle size (CS) Declaration [JsonProperty(\"diff_size\")] public float CircleSize { get; set; } Property Value Type Description System.Single | Improve this Doc View Source CoverUrl Cover url of the beatmap Declaration [JsonIgnore] public string CoverUrl { get; } Property Value Type Description System.String | Improve this Doc View Source Creator Name of the creator Declaration [JsonProperty(\"creator\")] public string Creator { get; set; } Property Value Type Description System.String | Improve this Doc View Source Difficulty Difficulty of the beatmap Declaration [JsonProperty(\"version\")] public string Difficulty { get; set; } Property Value Type Description System.String | Improve this Doc View Source DifficultyRating Rating of the difficulty Declaration [JsonProperty(\"difficultyrating\")] public float DifficultyRating { get; set; } Property Value Type Description System.Single | Improve this Doc View Source FavouriteCount Total count of favorites Declaration [JsonProperty(\"favourite_count\")] public int FavouriteCount { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source FileMd5 Declaration [JsonProperty(\"file_md5\")] public string FileMd5 { get; set; } Property Value Type Description System.String | Improve this Doc View Source GameMode Game mode of the map (standard/taiko/catch/mania) Declaration [JsonProperty(\"mode\")] public ushort GameMode { get; set; } Property Value Type Description System.UInt16 | Improve this Doc View Source GenreId Genre id Declaration [JsonProperty(\"genre_id\")] public ushort GenreId { get; set; } Property Value Type Description System.UInt16 | Improve this Doc View Source HitLength Length of the beatmap (doesn't include breaks) Declaration [JsonProperty(\"hit_length\")] public int HitLength { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source HpDrain Hp drain (HP) Declaration [JsonProperty(\"diff_drain\")] public float HpDrain { get; set; } Property Value Type Description System.Single | Improve this Doc View Source LanguageId Language id Declaration [JsonProperty(\"language_id\")] public ushort LanguageId { get; set; } Property Value Type Description System.UInt16 | Improve this Doc View Source LastUpdate DateTime of beatmap's latest update Declaration [JsonProperty(\"last_update\")] public DateTime? LastUpdate { get; set; } Property Value Type Description System.Nullable < System.DateTime > | Improve this Doc View Source MaxCombo Probably the count of combo max (may be null, depending on the 'GameMode' Declaration [JsonProperty(\"max_combo\")] public int? MaxCombo { get; set; } Property Value Type Description System.Nullable < System.Int32 > | Improve this Doc View Source OverallDifficulty Overall difficulty (OD) Declaration [JsonProperty(\"diff_overall\")] public float OverallDifficulty { get; set; } Property Value Type Description System.Single | Improve this Doc View Source PassCount Total count of passcounts Declaration [JsonProperty(\"passcount\")] public int PassCount { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source PlayCount Total count of playcounts Declaration [JsonProperty(\"playcount\")] public int PlayCount { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source SoundPreviewUrl Sound preview url of the beatmap Declaration [JsonIgnore] public string SoundPreviewUrl { get; } Property Value Type Description System.String | Improve this Doc View Source Sources Sources (added manually in bm editor) Declaration [JsonProperty(\"source\")] public string Sources { get; set; } Property Value Type Description System.String | Improve this Doc View Source Tags Tags (added manually in bm editor) Declaration [JsonProperty(\"tags\")] public string Tags { get; set; } Property Value Type Description System.String | Improve this Doc View Source ThumbnailUrl Thumbnail url of the beatmap Declaration [JsonIgnore] public string ThumbnailUrl { get; } Property Value Type Description System.String | Improve this Doc View Source Title Title of the beatmap Declaration [JsonProperty(\"title\")] public string Title { get; set; } Property Value Type Description System.String | Improve this Doc View Source TotalLength Length of the beatmap (includes breaks) Declaration [JsonProperty(\"total_length\")] public int TotalLength { get; set; } Property Value Type Description System.Int32"
  },
  "api/OsuSharp.UserBestEndpoint.UserBest.html": {
    "href": "api/OsuSharp.UserBestEndpoint.UserBest.html",
    "title": "Class UserBest | OsuSharp Documentation",
    "keywords": "Class UserBest Inheritance System.Object UserBest Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : OsuSharp.UserBestEndpoint Assembly : OsuSharp.dll Syntax public class UserBest Properties | Improve this Doc View Source Accuracy Accuracy of the play Declaration [JsonIgnore] public double Accuracy { get; } Property Value Type Description System.Double | Improve this Doc View Source BeatmapId Id of the beatmap Declaration [JsonProperty(\"beatmap_id\")] public ulong BeatmapId { get; set; } Property Value Type Description System.UInt64 | Improve this Doc View Source Count100 Count of 100 Declaration [JsonProperty(\"count100\")] public int Count100 { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source Count300 Count of 300 Declaration [JsonProperty(\"count300\")] public int Count300 { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source Count50 Count of 50 Declaration [JsonProperty(\"count50\")] public int Count50 { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source Date Date the play was submitted Declaration [JsonProperty(\"date\")] public DateTime? Date { get; set; } Property Value Type Description System.Nullable < System.DateTime > | Improve this Doc View Source EnabledMods Mods used for this play Declaration [JsonProperty(\"enabled_mods\")] public int EnabledMods { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source Geki Count of gekies Declaration [JsonProperty(\"countgeki\")] public int Geki { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source Katu Count of katus Declaration [JsonProperty(\"countkatu\")] public int Katu { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source MaxCombo Max combo of the play Declaration [JsonProperty(\"maxcombo\")] public int? MaxCombo { get; set; } Property Value Type Description System.Nullable < System.Int32 > | Improve this Doc View Source Miss Count of misses Declaration [JsonProperty(\"countmiss\")] public int Miss { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source Mods Better representation of 'EnabledMods' Declaration public Mods Mods { get; } Property Value Type Description Mods | Improve this Doc View Source Perfect Is the map a perfect? Declaration public bool Perfect { get; } Property Value Type Description System.Boolean | Improve this Doc View Source Pp Pp given by the play Declaration [JsonProperty(\"pp\")] public float Pp { get; set; } Property Value Type Description System.Single | Improve this Doc View Source Rank Rank of the player in this play Declaration [JsonProperty(\"rank\")] public string Rank { get; set; } Property Value Type Description System.String | Improve this Doc View Source ScorePoints Score points of the play Declaration [JsonProperty(\"score\")] public ulong ScorePoints { get; set; } Property Value Type Description System.UInt64 | Improve this Doc View Source Userid Id of the user Declaration [JsonProperty(\"user_id\")] public ulong Userid { get; set; } Property Value Type Description System.UInt64 | Improve this Doc View Source Username Name of the player Declaration [JsonProperty(\"username\")] public string Username { get; set; } Property Value Type Description System.String"
  },
  "api/OsuSharp.UserRecentEndpoint.UserRecent.html": {
    "href": "api/OsuSharp.UserRecentEndpoint.UserRecent.html",
    "title": "Class UserRecent | OsuSharp Documentation",
    "keywords": "Class UserRecent Inheritance System.Object UserRecent Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : OsuSharp.UserRecentEndpoint Assembly : OsuSharp.dll Syntax public class UserRecent Properties | Improve this Doc View Source Accuracy Accuracy of this play Declaration [JsonIgnore] public double Accuracy { get; } Property Value Type Description System.Double | Improve this Doc View Source BeatmapId Id of the beatmaps Declaration [JsonProperty(\"beatmap_id\")] public ulong BeatmapId { get; set; } Property Value Type Description System.UInt64 | Improve this Doc View Source Count100 Count of 100 Declaration [JsonProperty(\"count100\")] public int Count100 { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source Count300 Count of 300 Declaration [JsonProperty(\"count300\")] public int Count300 { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source Count50 Count of 50 Declaration [JsonProperty(\"count50\")] public int Count50 { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source Date Date the score was submitted Declaration [JsonProperty(\"date\")] public DateTime Date { get; set; } Property Value Type Description System.DateTime | Improve this Doc View Source EnabledMods Mods used for this play Declaration [JsonProperty(\"enabled_mods\")] public int EnabledMods { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source Geki Count of gekies Declaration [JsonProperty(\"countgeki\")] public int Geki { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source Katu Count of katus Declaration [JsonProperty(\"countkatu\")] public int Katu { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source MaxCombo Max combo of the play Declaration [JsonProperty(\"maxcombo\")] public int? MaxCombo { get; set; } Property Value Type Description System.Nullable < System.Int32 > | Improve this Doc View Source Miss Count of misses Declaration [JsonProperty(\"countmiss\")] public int Miss { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source Mods Better representation of EnabledMods Declaration public Mods Mods { get; } Property Value Type Description Mods | Improve this Doc View Source Perfect Is this map a perfect? Declaration public bool Perfect { get; } Property Value Type Description System.Boolean | Improve this Doc View Source Rank Rank of the user for this play in the leaderboard Declaration [JsonProperty(\"rank\")] public string Rank { get; set; } Property Value Type Description System.String | Improve this Doc View Source ScorePoints Total score of the player in this play Declaration [JsonProperty(\"score\")] public long ScorePoints { get; set; } Property Value Type Description System.Int64 | Improve this Doc View Source Userid Id of the player Declaration [JsonProperty(\"user_id\")] public ulong Userid { get; set; } Property Value Type Description System.UInt64"
  },
  "api/OsuSharp.UserEndpoint.html": {
    "href": "api/OsuSharp.UserEndpoint.html",
    "title": "Namespace OsuSharp.UserEndpoint | OsuSharp Documentation",
    "keywords": "Namespace OsuSharp.UserEndpoint Classes Event User"
  },
  "api/OsuSharp.ScoreEndpoint.Score.html": {
    "href": "api/OsuSharp.ScoreEndpoint.Score.html",
    "title": "Class Score | OsuSharp Documentation",
    "keywords": "Class Score Inheritance System.Object Score Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : OsuSharp.ScoreEndpoint Assembly : OsuSharp.dll Syntax public class Score Properties | Improve this Doc View Source Accuracy Accuracy of the play Declaration [JsonIgnore] public double Accuracy { get; } Property Value Type Description System.Double | Improve this Doc View Source Count100 Count of 100 Declaration [JsonProperty(\"count100\")] public int Count100 { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source Count300 Count of 300 Declaration [JsonProperty(\"count300\")] public int Count300 { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source Count50 Count of 50 Declaration [JsonProperty(\"count50\")] public int Count50 { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source Date Date the score was submitted Declaration [JsonProperty(\"date\")] public DateTime Date { get; set; } Property Value Type Description System.DateTime | Improve this Doc View Source EnabledMods Mods used for this play Declaration [JsonProperty(\"enabled_mods\")] public uint EnabledMods { get; set; } Property Value Type Description System.UInt32 | Improve this Doc View Source Geki Count of gekies Declaration [JsonProperty(\"countgeki\")] public int Geki { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source Katu Count of katus Declaration [JsonProperty(\"countkatu\")] public int Katu { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source MaxCombo Max combo of the play Declaration [JsonProperty(\"maxcombo\")] public int? MaxCombo { get; set; } Property Value Type Description System.Nullable < System.Int32 > | Improve this Doc View Source Miss Count of misses Declaration [JsonProperty(\"countmiss\")] public int Miss { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source Mods Better representation of 'EnabledMods' Declaration public Mods Mods { get; } Property Value Type Description Mods | Improve this Doc View Source Perfect Is the map a perfect? Declaration public bool Perfect { get; } Property Value Type Description System.Boolean | Improve this Doc View Source Pp Pp given by the map Declaration [JsonProperty(\"pp\")] public float Pp { get; set; } Property Value Type Description System.Single | Improve this Doc View Source Rank Rank of the player (in the map leaderboard) for this play Declaration [JsonProperty(\"rank\")] public string Rank { get; set; } Property Value Type Description System.String | Improve this Doc View Source ScoreId Score id Declaration [JsonProperty(\"score_id\")] public ulong ScoreId { get; set; } Property Value Type Description System.UInt64 | Improve this Doc View Source ScorePoints Score points of the play Declaration [JsonProperty(\"score\")] public ulong ScorePoints { get; set; } Property Value Type Description System.UInt64 | Improve this Doc View Source Userid Id of the player Declaration [JsonProperty(\"user_id\")] public ulong Userid { get; set; } Property Value Type Description System.UInt64 | Improve this Doc View Source Username Name of the player Declaration [JsonProperty(\"username\")] public string Username { get; set; } Property Value Type Description System.String"
  },
  "api/OsuSharp.MatchEndpoint.Matchs.html": {
    "href": "api/OsuSharp.MatchEndpoint.Matchs.html",
    "title": "Class Matchs | OsuSharp Documentation",
    "keywords": "Class Matchs Inheritance System.Object Matchs Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : OsuSharp.MatchEndpoint Assembly : OsuSharp.dll Syntax public class Matchs Properties | Improve this Doc View Source Games Represents every games played in this room Declaration [JsonProperty(\"games\")] public List<Game> Games { get; set; } Property Value Type Description System.Collections.Generic.List < Game > | Improve this Doc View Source Match Represents the room Declaration [JsonProperty(\"match\")] public Match Match { get; set; } Property Value Type Description Match"
  },
  "api/OsuSharp.MatchEndpoint.ScoreMatch.html": {
    "href": "api/OsuSharp.MatchEndpoint.ScoreMatch.html",
    "title": "Class ScoreMatch | OsuSharp Documentation",
    "keywords": "Class ScoreMatch Inheritance System.Object ScoreMatch Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : OsuSharp.MatchEndpoint Assembly : OsuSharp.dll Syntax public class ScoreMatch Properties | Improve this Doc View Source Accuracy Accuracy of the play Declaration [JsonIgnore] public double Accuracy { get; } Property Value Type Description System.Double | Improve this Doc View Source Count100 Count of 100 Declaration [JsonProperty(\"count100\")] public int Count100 { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source Count300 Count of 300 Declaration [JsonProperty(\"count300\")] public int Count300 { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source Count50 Count of 50 Declaration [JsonProperty(\"count50\")] public int Count50 { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source Geki Count of gekies Declaration [JsonProperty(\"countgeki\")] public int Geki { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source Katu Count of katus Declaration [JsonProperty(\"countkatu\")] public int Katu { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source MaxCombo Max combo of the player Declaration [JsonProperty(\"maxcombo\")] public int? MaxCombo { get; set; } Property Value Type Description System.Nullable < System.Int32 > | Improve this Doc View Source Miss Count of misses Declaration [JsonProperty(\"countmiss\")] public int Miss { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source Pass Has the player passed the map? Declaration public bool Pass { get; } Property Value Type Description System.Boolean | Improve this Doc View Source Perfect Is the play a perfect? Declaration public bool Perfect { get; } Property Value Type Description System.Boolean | Improve this Doc View Source Rank Rank of the player in the match Declaration [JsonProperty(\"rank\")] public int Rank { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source ScorePoints Score of the player Declaration [JsonProperty(\"score\")] public long ScorePoints { get; set; } Property Value Type Description System.Int64 | Improve this Doc View Source SlotId Slot of the player Declaration [JsonProperty(\"slot\")] public ushort SlotId { get; set; } Property Value Type Description System.UInt16 | Improve this Doc View Source TeamId Id of the team where the player is playing Declaration [JsonProperty(\"team\")] public ushort TeamId { get; set; } Property Value Type Description System.UInt16 | Improve this Doc View Source Userid Id of the player Declaration [JsonProperty(\"user_id\")] public ulong Userid { get; set; } Property Value Type Description System.UInt64"
  },
  "api/OsuSharp.MatchEndpoint.Match.html": {
    "href": "api/OsuSharp.MatchEndpoint.Match.html",
    "title": "Class Match | OsuSharp Documentation",
    "keywords": "Class Match Inheritance System.Object Match Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : OsuSharp.MatchEndpoint Assembly : OsuSharp.dll Syntax public class Match Properties | Improve this Doc View Source EndTime Time room got destroyed Declaration [JsonProperty(\"end_time\")] public DateTime? EndTime { get; set; } Property Value Type Description System.Nullable < System.DateTime > | Improve this Doc View Source MatchId Id of the match Declaration [JsonProperty(\"match_id\")] public ulong MatchId { get; set; } Property Value Type Description System.UInt64 | Improve this Doc View Source Name Name of the room Declaration [JsonProperty(\"name\")] public string Name { get; set; } Property Value Type Description System.String | Improve this Doc View Source StartTime Time room was created Declaration [JsonProperty(\"start_time\")] public DateTime? StartTime { get; set; } Property Value Type Description System.Nullable < System.DateTime >"
  },
  "api/OsuSharp.Interfaces.IRateLimiter.html": {
    "href": "api/OsuSharp.Interfaces.IRateLimiter.html",
    "title": "Interface IRateLimiter | OsuSharp Documentation",
    "keywords": "Interface IRateLimiter Namespace : OsuSharp.Interfaces Assembly : OsuSharp.dll Syntax public interface IRateLimiter Methods | Improve this Doc View Source HandleAsync() Declaration Task HandleAsync() Returns Type Description System.Threading.Tasks.Task | Improve this Doc View Source HandleAsync(CancellationToken) Declaration Task HandleAsync(CancellationToken cancellationToken) Parameters Type Name Description System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task"
  },
  "articles/intro.html": {
    "href": "articles/intro.html",
    "title": "Add your introductions here! | OsuSharp Documentation",
    "keywords": "Add your introductions here!"
  },
  "index.html": {
    "href": "index.html",
    "title": "OsuSharp Documentation | OsuSharp Documentation",
    "keywords": "OsuSharp Documentation What is OsuSharp? OsuShap is a .NET Library used to make requests on Osu!API. It's synchronous, asynchronous and under .NET Standard 2.0 . Resources GitHub NuGet"
  },
  "api/index.html": {
    "href": "api/index.html",
    "title": "OsuSharp v2.0.1 Api Documentation | OsuSharp Documentation",
    "keywords": "OsuSharp v2.0.1 Api Documentation You will be able to find on your left every endpoints and classes that compose OsuSharp."
  },
  "api/OsuSharp.ReplayEndpoint.Replay.html": {
    "href": "api/OsuSharp.ReplayEndpoint.Replay.html",
    "title": "Class Replay | OsuSharp Documentation",
    "keywords": "Class Replay Inheritance System.Object Replay Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : OsuSharp.ReplayEndpoint Assembly : OsuSharp.dll Syntax public class Replay Properties | Improve this Doc View Source Content Replay's content Declaration [JsonProperty(\"content\")] public string Content { get; set; } Property Value Type Description System.String | Improve this Doc View Source Encoding How is the content encoded Declaration [JsonProperty(\"encoding\")] public string Encoding { get; set; } Property Value Type Description System.String"
  },
  "api/OsuSharp.OsuApi.html": {
    "href": "api/OsuSharp.OsuApi.html",
    "title": "Class OsuApi | OsuSharp Documentation",
    "keywords": "Class OsuApi Inheritance System.Object OsuApi Implements IOsuApi Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : OsuSharp Assembly : OsuSharp.dll Syntax public class OsuApi : IOsuApi Constructors | Improve this Doc View Source OsuApi(IOsuSharpConfiguration) Method that initializes the library to perform your requests. Declaration public OsuApi(IOsuSharpConfiguration config) Parameters Type Name Description IOsuSharpConfiguration config OsuSharp configuration that contains api key, rate limiter settings, custom http client and mods separator. Properties | Improve this Doc View Source ApiKey Declaration public string ApiKey { get; } Property Value Type Description System.String | Improve this Doc View Source Logger Declaration public IOsuSharpLogger Logger { get; } Property Value Type Description IOsuSharpLogger | Improve this Doc View Source ModsSeparator Declaration public string ModsSeparator { get; set; } Property Value Type Description System.String Methods | Improve this Doc View Source Default(IOsuSharpConfiguration) Method that initializes the library to perform your requests. Declaration public static OsuApi Default(IOsuSharpConfiguration config) Parameters Type Name Description IOsuSharpConfiguration config OsuSharp configuration that contains api key, rate limiter settings, custom http client and mods separator. Returns Type Description OsuApi | Improve this Doc View Source GetBeatmap(UInt64, BeatmapType, GameMode) Declaration public Beatmap GetBeatmap(ulong beatmapId, BeatmapType bmType = BeatmapType.ByDifficulty, GameMode gameMode = GameMode.Standard) Parameters Type Name Description System.UInt64 beatmapId BeatmapType bmType GameMode gameMode Returns Type Description Beatmap | Improve this Doc View Source GetBeatmapAsync(UInt64, BeatmapType, GameMode) Declaration public Task<Beatmap> GetBeatmapAsync(ulong beatmapId, BeatmapType bmType = BeatmapType.ByDifficulty, GameMode gameMode = GameMode.Standard) Parameters Type Name Description System.UInt64 beatmapId BeatmapType bmType GameMode gameMode Returns Type Description System.Threading.Tasks.Task < Beatmap > | Improve this Doc View Source GetBeatmapAsync(UInt64, BeatmapType, GameMode, CancellationToken) Declaration public Task<Beatmap> GetBeatmapAsync(ulong beatmapId, BeatmapType bmType, GameMode gameMode, CancellationToken cancellationToken) Parameters Type Name Description System.UInt64 beatmapId BeatmapType bmType GameMode gameMode System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < Beatmap > | Improve this Doc View Source GetBeatmaps(UInt64, BeatmapType, GameMode, Int32) Declaration public List<Beatmap> GetBeatmaps(ulong id, BeatmapType bmType = BeatmapType.ByBeatmap, GameMode gameMode = GameMode.Standard, int limit = 500) Parameters Type Name Description System.UInt64 id BeatmapType bmType GameMode gameMode System.Int32 limit Returns Type Description System.Collections.Generic.List < Beatmap > | Improve this Doc View Source GetBeatmapsAsync(UInt64, BeatmapType, GameMode, Int32) Declaration public Task<List<Beatmap>> GetBeatmapsAsync(ulong id, BeatmapType bmType = BeatmapType.ByBeatmap, GameMode gameMode = GameMode.Standard, int limit = 500) Parameters Type Name Description System.UInt64 id BeatmapType bmType GameMode gameMode System.Int32 limit Returns Type Description System.Threading.Tasks.Task < System.Collections.Generic.List < Beatmap >> | Improve this Doc View Source GetBeatmapsAsync(UInt64, BeatmapType, GameMode, Int32, CancellationToken) Declaration public Task<List<Beatmap>> GetBeatmapsAsync(ulong id, BeatmapType bmType, GameMode gameMode, int limit, CancellationToken cancellationToken) Parameters Type Name Description System.UInt64 id BeatmapType bmType GameMode gameMode System.Int32 limit System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Collections.Generic.List < Beatmap >> | Improve this Doc View Source GetBeatmapsByCreator(String, GameMode, Int32) Declaration public List<Beatmap> GetBeatmapsByCreator(string username, GameMode gameMode = GameMode.Standard, int limit = 500) Parameters Type Name Description System.String username GameMode gameMode System.Int32 limit Returns Type Description System.Collections.Generic.List < Beatmap > | Improve this Doc View Source GetBeatmapsByCreatorAsync(String, GameMode, Int32) Declaration public Task<List<Beatmap>> GetBeatmapsByCreatorAsync(string username, GameMode gameMode = GameMode.Standard, int limit = 500) Parameters Type Name Description System.String username GameMode gameMode System.Int32 limit Returns Type Description System.Threading.Tasks.Task < System.Collections.Generic.List < Beatmap >> | Improve this Doc View Source GetBeatmapsByCreatorAsync(String, GameMode, Int32, CancellationToken) Declaration public Task<List<Beatmap>> GetBeatmapsByCreatorAsync(string username, GameMode gameMode, int limit, CancellationToken cancellationToken) Parameters Type Name Description System.String username GameMode gameMode System.Int32 limit System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Collections.Generic.List < Beatmap >> | Improve this Doc View Source GetLastBeatmaps(Int32) Declaration public List<Beatmap> GetLastBeatmaps(int limit = 500) Parameters Type Name Description System.Int32 limit Returns Type Description System.Collections.Generic.List < Beatmap > | Improve this Doc View Source GetLastBeatmapsAsync(Int32) Declaration public Task<List<Beatmap>> GetLastBeatmapsAsync(int limit = 500) Parameters Type Name Description System.Int32 limit Returns Type Description System.Threading.Tasks.Task < System.Collections.Generic.List < Beatmap >> | Improve this Doc View Source GetLastBeatmapsAsync(Int32, CancellationToken) Declaration public Task<List<Beatmap>> GetLastBeatmapsAsync(int limit, CancellationToken cancellationToken) Parameters Type Name Description System.Int32 limit System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Collections.Generic.List < Beatmap >> | Improve this Doc View Source GetMatch(UInt64) Declaration public Matchs GetMatch(ulong matchid) Parameters Type Name Description System.UInt64 matchid Returns Type Description Matchs | Improve this Doc View Source GetMatchAsync(UInt64) Declaration public Task<Matchs> GetMatchAsync(ulong matchid) Parameters Type Name Description System.UInt64 matchid Returns Type Description System.Threading.Tasks.Task < Matchs > | Improve this Doc View Source GetMatchAsync(UInt64, CancellationToken) Declaration public Task<Matchs> GetMatchAsync(ulong matchid, CancellationToken cancellationToken) Parameters Type Name Description System.UInt64 matchid System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < Matchs > | Improve this Doc View Source GetReplayByUserid(UInt64, UInt64, GameMode) Declaration public Replay GetReplayByUserid(ulong beatmapid, ulong userid, GameMode gameMode = GameMode.Standard) Parameters Type Name Description System.UInt64 beatmapid System.UInt64 userid GameMode gameMode Returns Type Description Replay | Improve this Doc View Source GetReplayByUseridAsync(UInt64, UInt64, GameMode) Declaration public Task<Replay> GetReplayByUseridAsync(ulong beatmapid, ulong userid, GameMode gameMode = GameMode.Standard) Parameters Type Name Description System.UInt64 beatmapid System.UInt64 userid GameMode gameMode Returns Type Description System.Threading.Tasks.Task < Replay > | Improve this Doc View Source GetReplayByUseridAsync(UInt64, UInt64, GameMode, CancellationToken) Declaration public Task<Replay> GetReplayByUseridAsync(ulong beatmapid, ulong userid, GameMode gameMode, CancellationToken cancellationToken) Parameters Type Name Description System.UInt64 beatmapid System.UInt64 userid GameMode gameMode System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < Replay > | Improve this Doc View Source GetReplayByUsername(UInt64, String, GameMode) Declaration public Replay GetReplayByUsername(ulong beatmapid, string username, GameMode gameMode = GameMode.Standard) Parameters Type Name Description System.UInt64 beatmapid System.String username GameMode gameMode Returns Type Description Replay | Improve this Doc View Source GetReplayByUsernameAsync(UInt64, String, GameMode) Declaration public Task<Replay> GetReplayByUsernameAsync(ulong beatmapid, string username, GameMode gameMode = GameMode.Standard) Parameters Type Name Description System.UInt64 beatmapid System.String username GameMode gameMode Returns Type Description System.Threading.Tasks.Task < Replay > | Improve this Doc View Source GetReplayByUsernameAsync(UInt64, String, GameMode, CancellationToken) Declaration public Task<Replay> GetReplayByUsernameAsync(ulong beatmapid, string username, GameMode gameMode, CancellationToken cancellationToken) Parameters Type Name Description System.UInt64 beatmapid System.String username GameMode gameMode System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < Replay > | Improve this Doc View Source GetScoreByUserid(UInt64, UInt64, GameMode) Declaration public Score GetScoreByUserid(ulong beatmapid, ulong userid, GameMode gameMode = GameMode.Standard) Parameters Type Name Description System.UInt64 beatmapid System.UInt64 userid GameMode gameMode Returns Type Description Score | Improve this Doc View Source GetScoreByUseridAsync(UInt64, UInt64, GameMode) Declaration public Task<Score> GetScoreByUseridAsync(ulong beatmapid, ulong userid, GameMode gameMode = GameMode.Standard) Parameters Type Name Description System.UInt64 beatmapid System.UInt64 userid GameMode gameMode Returns Type Description System.Threading.Tasks.Task < Score > | Improve this Doc View Source GetScoreByUseridAsync(UInt64, UInt64, GameMode, CancellationToken) Declaration public Task<Score> GetScoreByUseridAsync(ulong beatmapid, ulong userid, GameMode gameMode, CancellationToken cancellationToken) Parameters Type Name Description System.UInt64 beatmapid System.UInt64 userid GameMode gameMode System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < Score > | Improve this Doc View Source GetScoreByUsername(UInt64, String, GameMode) Declaration public Score GetScoreByUsername(ulong beatmapid, string username, GameMode gameMode = GameMode.Standard) Parameters Type Name Description System.UInt64 beatmapid System.String username GameMode gameMode Returns Type Description Score | Improve this Doc View Source GetScoreByUsernameAsync(UInt64, String, GameMode) Declaration public Task<Score> GetScoreByUsernameAsync(ulong beatmapid, string username, GameMode gameMode = GameMode.Standard) Parameters Type Name Description System.UInt64 beatmapid System.String username GameMode gameMode Returns Type Description System.Threading.Tasks.Task < Score > | Improve this Doc View Source GetScoreByUsernameAsync(UInt64, String, GameMode, CancellationToken) Declaration public Task<Score> GetScoreByUsernameAsync(ulong beatmapid, string username, GameMode gameMode, CancellationToken cancellationToken) Parameters Type Name Description System.UInt64 beatmapid System.String username GameMode gameMode System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < Score > | Improve this Doc View Source GetScores(UInt64, GameMode, Int32) Declaration public List<Score> GetScores(ulong beatmapid, GameMode gameMode = GameMode.Standard, int limit = 50) Parameters Type Name Description System.UInt64 beatmapid GameMode gameMode System.Int32 limit Returns Type Description System.Collections.Generic.List < Score > | Improve this Doc View Source GetScoresAndBeatmap(UInt64, GameMode, Int32) Declaration public BeatmapScores GetScoresAndBeatmap(ulong beatmapid, GameMode gameMode = GameMode.Standard, int limit = 50) Parameters Type Name Description System.UInt64 beatmapid GameMode gameMode System.Int32 limit Returns Type Description BeatmapScores | Improve this Doc View Source GetScoresAndBeatmapAsync(UInt64, GameMode, Int32) Declaration public Task<BeatmapScores> GetScoresAndBeatmapAsync(ulong beatmapid, GameMode gameMode = GameMode.Standard, int limit = 50) Parameters Type Name Description System.UInt64 beatmapid GameMode gameMode System.Int32 limit Returns Type Description System.Threading.Tasks.Task < BeatmapScores > | Improve this Doc View Source GetScoresAndBeatmapAsync(UInt64, GameMode, Int32, CancellationToken) Declaration public Task<BeatmapScores> GetScoresAndBeatmapAsync(ulong beatmapid, GameMode gameMode, int limit, CancellationToken cancellationToken) Parameters Type Name Description System.UInt64 beatmapid GameMode gameMode System.Int32 limit System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < BeatmapScores > | Improve this Doc View Source GetScoresAsync(UInt64, GameMode, Int32) Declaration public Task<List<Score>> GetScoresAsync(ulong beatmapid, GameMode gameMode = GameMode.Standard, int limit = 50) Parameters Type Name Description System.UInt64 beatmapid GameMode gameMode System.Int32 limit Returns Type Description System.Threading.Tasks.Task < System.Collections.Generic.List < Score >> | Improve this Doc View Source GetScoresAsync(UInt64, GameMode, Int32, CancellationToken) Declaration public Task<List<Score>> GetScoresAsync(ulong beatmapid, GameMode gameMode, int limit, CancellationToken cancellationToken) Parameters Type Name Description System.UInt64 beatmapid GameMode gameMode System.Int32 limit System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Collections.Generic.List < Score >> | Improve this Doc View Source GetScoresWithUsersAndBeatmap(UInt64, GameMode, Int32) Declaration public BeatmapScoresUsers GetScoresWithUsersAndBeatmap(ulong beatmapid, GameMode gameMode = GameMode.Standard, int limit = 50) Parameters Type Name Description System.UInt64 beatmapid GameMode gameMode System.Int32 limit Returns Type Description BeatmapScoresUsers | Improve this Doc View Source GetScoresWithUsersAndBeatmapAsync(UInt64, GameMode, Int32) Declaration public Task<BeatmapScoresUsers> GetScoresWithUsersAndBeatmapAsync(ulong beatmapid, GameMode gameMode = GameMode.Standard, int limit = 50) Parameters Type Name Description System.UInt64 beatmapid GameMode gameMode System.Int32 limit Returns Type Description System.Threading.Tasks.Task < BeatmapScoresUsers > | Improve this Doc View Source GetScoresWithUsersAndBeatmapAsync(UInt64, GameMode, Int32, CancellationToken) Declaration public Task<BeatmapScoresUsers> GetScoresWithUsersAndBeatmapAsync(ulong beatmapid, GameMode gameMode, int limit, CancellationToken cancellationToken) Parameters Type Name Description System.UInt64 beatmapid GameMode gameMode System.Int32 limit System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < BeatmapScoresUsers > | Improve this Doc View Source GetUserBestAndBeatmapByUserid(UInt64, GameMode, Int32) Declaration public List<UserBestBeatmap> GetUserBestAndBeatmapByUserid(ulong userid, GameMode gameMode = GameMode.Standard, int limit = 10) Parameters Type Name Description System.UInt64 userid GameMode gameMode System.Int32 limit Returns Type Description System.Collections.Generic.List < UserBestBeatmap > | Improve this Doc View Source GetUserBestAndBeatmapByUseridAsync(UInt64, GameMode, Int32) Declaration public Task<List<UserBestBeatmap>> GetUserBestAndBeatmapByUseridAsync(ulong userid, GameMode gameMode = GameMode.Standard, int limit = 10) Parameters Type Name Description System.UInt64 userid GameMode gameMode System.Int32 limit Returns Type Description System.Threading.Tasks.Task < System.Collections.Generic.List < UserBestBeatmap >> | Improve this Doc View Source GetUserBestAndBeatmapByUseridAsync(UInt64, GameMode, Int32, CancellationToken) Declaration public Task<List<UserBestBeatmap>> GetUserBestAndBeatmapByUseridAsync(ulong userid, GameMode gameMode, int limit, CancellationToken cancellationToken) Parameters Type Name Description System.UInt64 userid GameMode gameMode System.Int32 limit System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Collections.Generic.List < UserBestBeatmap >> | Improve this Doc View Source GetUserBestAndBeatmapByUsername(String, GameMode, Int32) Declaration public List<UserBestBeatmap> GetUserBestAndBeatmapByUsername(string username, GameMode gameMode = GameMode.Standard, int limit = 10) Parameters Type Name Description System.String username GameMode gameMode System.Int32 limit Returns Type Description System.Collections.Generic.List < UserBestBeatmap > | Improve this Doc View Source GetUserBestAndBeatmapByUsernameAsync(String, GameMode, Int32) Declaration public Task<List<UserBestBeatmap>> GetUserBestAndBeatmapByUsernameAsync(string username, GameMode gameMode = GameMode.Standard, int limit = 10) Parameters Type Name Description System.String username GameMode gameMode System.Int32 limit Returns Type Description System.Threading.Tasks.Task < System.Collections.Generic.List < UserBestBeatmap >> | Improve this Doc View Source GetUserBestAndBeatmapByUsernameAsync(String, GameMode, Int32, CancellationToken) Declaration public Task<List<UserBestBeatmap>> GetUserBestAndBeatmapByUsernameAsync(string username, GameMode gameMode, int limit, CancellationToken cancellationToken) Parameters Type Name Description System.String username GameMode gameMode System.Int32 limit System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Collections.Generic.List < UserBestBeatmap >> | Improve this Doc View Source GetUserBestByUserid(UInt64, GameMode, Int32) Declaration public List<UserBest> GetUserBestByUserid(ulong userid, GameMode gameMode = GameMode.Standard, int limit = 10) Parameters Type Name Description System.UInt64 userid GameMode gameMode System.Int32 limit Returns Type Description System.Collections.Generic.List < UserBest > | Improve this Doc View Source GetUserBestByUseridAsync(UInt64, GameMode, Int32) Declaration public Task<List<UserBest>> GetUserBestByUseridAsync(ulong userid, GameMode gameMode = GameMode.Standard, int limit = 10) Parameters Type Name Description System.UInt64 userid GameMode gameMode System.Int32 limit Returns Type Description System.Threading.Tasks.Task < System.Collections.Generic.List < UserBest >> | Improve this Doc View Source GetUserBestByUseridAsync(UInt64, GameMode, Int32, CancellationToken) Declaration public Task<List<UserBest>> GetUserBestByUseridAsync(ulong userid, GameMode gameMode, int limit, CancellationToken cancellationToken) Parameters Type Name Description System.UInt64 userid GameMode gameMode System.Int32 limit System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Collections.Generic.List < UserBest >> | Improve this Doc View Source GetUserBestByUsername(String, GameMode, Int32) Declaration public List<UserBest> GetUserBestByUsername(string username, GameMode gameMode = GameMode.Standard, int limit = 10) Parameters Type Name Description System.String username GameMode gameMode System.Int32 limit Returns Type Description System.Collections.Generic.List < UserBest > | Improve this Doc View Source GetUserBestByUsernameAsync(String, GameMode, Int32) Declaration public Task<List<UserBest>> GetUserBestByUsernameAsync(string username, GameMode gameMode = GameMode.Standard, int limit = 10) Parameters Type Name Description System.String username GameMode gameMode System.Int32 limit Returns Type Description System.Threading.Tasks.Task < System.Collections.Generic.List < UserBest >> | Improve this Doc View Source GetUserBestByUsernameAsync(String, GameMode, Int32, CancellationToken) Declaration public Task<List<UserBest>> GetUserBestByUsernameAsync(string username, GameMode gameMode, int limit, CancellationToken cancellationToken) Parameters Type Name Description System.String username GameMode gameMode System.Int32 limit System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Collections.Generic.List < UserBest >> | Improve this Doc View Source GetUserById(UInt64, GameMode) Declaration public User GetUserById(ulong userid, GameMode gameMode = GameMode.Standard) Parameters Type Name Description System.UInt64 userid GameMode gameMode Returns Type Description User | Improve this Doc View Source GetUserByIdAsync(UInt64, GameMode) Declaration public Task<User> GetUserByIdAsync(ulong userid, GameMode gameMode = GameMode.Standard) Parameters Type Name Description System.UInt64 userid GameMode gameMode Returns Type Description System.Threading.Tasks.Task < User > | Improve this Doc View Source GetUserByIdAsync(UInt64, GameMode, CancellationToken) Declaration public Task<User> GetUserByIdAsync(ulong userid, GameMode gameMode, CancellationToken cancellationToken) Parameters Type Name Description System.UInt64 userid GameMode gameMode System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < User > | Improve this Doc View Source GetUserByName(String, GameMode) Declaration public User GetUserByName(string username, GameMode gameMode = GameMode.Standard) Parameters Type Name Description System.String username GameMode gameMode Returns Type Description User | Improve this Doc View Source GetUserByNameAsync(String, GameMode) Declaration public Task<User> GetUserByNameAsync(string username, GameMode gameMode = GameMode.Standard) Parameters Type Name Description System.String username GameMode gameMode Returns Type Description System.Threading.Tasks.Task < User > | Improve this Doc View Source GetUserByNameAsync(String, GameMode, CancellationToken) Declaration public Task<User> GetUserByNameAsync(string username, GameMode gameMode, CancellationToken cancellationToken) Parameters Type Name Description System.String username GameMode gameMode System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < User > | Improve this Doc View Source GetUserRecentAndBeatmapByUserid(UInt64, GameMode, Int32) Declaration public List<UserRecentBeatmap> GetUserRecentAndBeatmapByUserid(ulong userid, GameMode gameMode = GameMode.Standard, int limit = 10) Parameters Type Name Description System.UInt64 userid GameMode gameMode System.Int32 limit Returns Type Description System.Collections.Generic.List < UserRecentBeatmap > | Improve this Doc View Source GetUserRecentAndBeatmapByUseridAsync(UInt64, GameMode, Int32) Declaration public Task<List<UserRecentBeatmap>> GetUserRecentAndBeatmapByUseridAsync(ulong userid, GameMode gameMode = GameMode.Standard, int limit = 10) Parameters Type Name Description System.UInt64 userid GameMode gameMode System.Int32 limit Returns Type Description System.Threading.Tasks.Task < System.Collections.Generic.List < UserRecentBeatmap >> | Improve this Doc View Source GetUserRecentAndBeatmapByUseridAsync(UInt64, GameMode, Int32, CancellationToken) Declaration public Task<List<UserRecentBeatmap>> GetUserRecentAndBeatmapByUseridAsync(ulong userid, GameMode gameMode, int limit, CancellationToken cancellationToken) Parameters Type Name Description System.UInt64 userid GameMode gameMode System.Int32 limit System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Collections.Generic.List < UserRecentBeatmap >> | Improve this Doc View Source GetUserRecentAndBeatmapByUsername(String, GameMode, Int32) Declaration public List<UserRecentBeatmap> GetUserRecentAndBeatmapByUsername(string username, GameMode gameMode = GameMode.Standard, int limit = 10) Parameters Type Name Description System.String username GameMode gameMode System.Int32 limit Returns Type Description System.Collections.Generic.List < UserRecentBeatmap > | Improve this Doc View Source GetUserRecentAndBeatmapByUsernameAsync(String, GameMode, Int32) Declaration public Task<List<UserRecentBeatmap>> GetUserRecentAndBeatmapByUsernameAsync(string username, GameMode gameMode = GameMode.Standard, int limit = 10) Parameters Type Name Description System.String username GameMode gameMode System.Int32 limit Returns Type Description System.Threading.Tasks.Task < System.Collections.Generic.List < UserRecentBeatmap >> | Improve this Doc View Source GetUserRecentAndBeatmapByUsernameAsync(String, GameMode, Int32, CancellationToken) Declaration public Task<List<UserRecentBeatmap>> GetUserRecentAndBeatmapByUsernameAsync(string username, GameMode gameMode, int limit, CancellationToken cancellationToken) Parameters Type Name Description System.String username GameMode gameMode System.Int32 limit System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Collections.Generic.List < UserRecentBeatmap >> | Improve this Doc View Source GetUserRecentByUserid(UInt64, GameMode, Int32) Declaration public List<UserRecent> GetUserRecentByUserid(ulong userid, GameMode gameMode = GameMode.Standard, int limit = 10) Parameters Type Name Description System.UInt64 userid GameMode gameMode System.Int32 limit Returns Type Description System.Collections.Generic.List < UserRecent > | Improve this Doc View Source GetUserRecentByUseridAsync(UInt64, GameMode, Int32) Declaration public Task<List<UserRecent>> GetUserRecentByUseridAsync(ulong userid, GameMode gameMode = GameMode.Standard, int limit = 10) Parameters Type Name Description System.UInt64 userid GameMode gameMode System.Int32 limit Returns Type Description System.Threading.Tasks.Task < System.Collections.Generic.List < UserRecent >> | Improve this Doc View Source GetUserRecentByUseridAsync(UInt64, GameMode, Int32, CancellationToken) Declaration public Task<List<UserRecent>> GetUserRecentByUseridAsync(ulong userid, GameMode gameMode, int limit, CancellationToken cancellationToken) Parameters Type Name Description System.UInt64 userid GameMode gameMode System.Int32 limit System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Collections.Generic.List < UserRecent >> | Improve this Doc View Source GetUserRecentByUsername(String, GameMode, Int32) Declaration public List<UserRecent> GetUserRecentByUsername(string username, GameMode gameMode = GameMode.Standard, int limit = 10) Parameters Type Name Description System.String username GameMode gameMode System.Int32 limit Returns Type Description System.Collections.Generic.List < UserRecent > | Improve this Doc View Source GetUserRecentByUsernameAsync(String, GameMode, Int32) Declaration public Task<List<UserRecent>> GetUserRecentByUsernameAsync(string username, GameMode gameMode = GameMode.Standard, int limit = 10) Parameters Type Name Description System.String username GameMode gameMode System.Int32 limit Returns Type Description System.Threading.Tasks.Task < System.Collections.Generic.List < UserRecent >> | Improve this Doc View Source GetUserRecentByUsernameAsync(String, GameMode, Int32, CancellationToken) Declaration public Task<List<UserRecent>> GetUserRecentByUsernameAsync(string username, GameMode gameMode, int limit, CancellationToken cancellationToken) Parameters Type Name Description System.String username GameMode gameMode System.Int32 limit System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Collections.Generic.List < UserRecent >> Implements IOsuApi"
  },
  "api/OsuSharp.Misc.ModsStringAttribute.html": {
    "href": "api/OsuSharp.Misc.ModsStringAttribute.html",
    "title": "Class ModsStringAttribute | OsuSharp Documentation",
    "keywords": "Class ModsStringAttribute Inheritance System.Object System.Attribute ModsStringAttribute Inherited Members System.Attribute.Equals(System.Object) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetHashCode() System.Attribute.IsDefaultAttribute() System.Attribute.IsDefined(System.Reflection.Assembly, System.Type) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.Module, System.Type) System.Attribute.IsDefined(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.Match(System.Object) System.Attribute.TypeId System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : OsuSharp.Misc Assembly : OsuSharp.dll Syntax [AttributeUsage(AttributeTargets.Field)] public sealed class ModsStringAttribute : Attribute Constructors | Improve this Doc View Source ModsStringAttribute(String) Declaration public ModsStringAttribute(string str) Parameters Type Name Description System.String str Properties | Improve this Doc View Source String Declaration public string String { get; } Property Value Type Description System.String"
  },
  "api/OsuSharp.Misc.BeatmapType.html": {
    "href": "api/OsuSharp.Misc.BeatmapType.html",
    "title": "Enum BeatmapType | OsuSharp Documentation",
    "keywords": "Enum BeatmapType Enum representing different types of beatmaps Namespace : OsuSharp.Misc Assembly : OsuSharp.dll Syntax public enum BeatmapType Fields Name Description ByBeatmap ByCreator ByDifficulty"
  },
  "api/OsuSharp.Misc.LoggingLevel.html": {
    "href": "api/OsuSharp.Misc.LoggingLevel.html",
    "title": "Enum LoggingLevel | OsuSharp Documentation",
    "keywords": "Enum LoggingLevel Namespace : OsuSharp.Misc Assembly : OsuSharp.dll Syntax public enum LoggingLevel Fields Name Description Debug Error Info Warning"
  },
  "api/OsuSharp.Misc.BeatmapState.html": {
    "href": "api/OsuSharp.Misc.BeatmapState.html",
    "title": "Enum BeatmapState | OsuSharp Documentation",
    "keywords": "Enum BeatmapState Enum representing the different possible states of a beatmap Namespace : OsuSharp.Misc Assembly : OsuSharp.dll Syntax public enum BeatmapState Fields Name Description Approved Graveyard Loved Pending Qualified Ranked Unknown Wip"
  },
  "api/OsuSharp.Interfaces.html": {
    "href": "api/OsuSharp.Interfaces.html",
    "title": "Namespace OsuSharp.Interfaces | OsuSharp Documentation",
    "keywords": "Namespace OsuSharp.Interfaces Interfaces IOsuApi IOsuSharpConfiguration IOsuSharpLogger IRateLimiter"
  },
  "api/OsuSharp.Interfaces.IOsuSharpConfiguration.html": {
    "href": "api/OsuSharp.Interfaces.IOsuSharpConfiguration.html",
    "title": "Interface IOsuSharpConfiguration | OsuSharp Documentation",
    "keywords": "Interface IOsuSharpConfiguration Namespace : OsuSharp.Interfaces Assembly : OsuSharp.dll Syntax public interface IOsuSharpConfiguration Properties | Improve this Doc View Source ApiKey Your Osu API key (required) Declaration string ApiKey { get; set; } Property Value Type Description System.String | Improve this Doc View Source CustomHttpClient Custom http client (facultative) Declaration HttpClient CustomHttpClient { get; set; } Property Value Type Description System.Net.Http.HttpClient | Improve this Doc View Source LogLevel Level of the log to fire the event. (defaults to LoggingLevel.Info) Declaration LoggingLevel LogLevel { get; set; } Property Value Type Description LoggingLevel | Improve this Doc View Source MaxRequests Max requests you can perform to the api. (defaults to 1200) Declaration int MaxRequests { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source ModsSeparator Separator between each mod on Mods property (defaults to empty) Declaration string ModsSeparator { get; set; } Property Value Type Description System.String | Improve this Doc View Source ThrowOnMaxRequests Does the handler must throw when you're being rate-limited? (defaults to false) Declaration bool ThrowOnMaxRequests { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source TimeInterval Time interval in which you can perform your MaxRequests. (defaults to 1 minute) Declaration TimeSpan TimeInterval { get; set; } Property Value Type Description System.TimeSpan"
  },
  "api/OsuSharp.OsuSharpLogger.html": {
    "href": "api/OsuSharp.OsuSharpLogger.html",
    "title": "Class OsuSharpLogger | OsuSharp Documentation",
    "keywords": "Class OsuSharpLogger Inheritance System.Object OsuSharpLogger Implements IOsuSharpLogger Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : OsuSharp Assembly : OsuSharp.dll Syntax public class OsuSharpLogger : IOsuSharpLogger Constructors | Improve this Doc View Source OsuSharpLogger(OsuApi, LoggingLevel) Declaration public OsuSharpLogger(OsuApi instance, LoggingLevel level) Parameters Type Name Description OsuApi instance LoggingLevel level Methods | Improve this Doc View Source LogMessage(LoggingLevel, String, String, DateTime) Declaration public void LogMessage(LoggingLevel level, string from, string message, DateTime time) Parameters Type Name Description LoggingLevel level System.String from System.String message System.DateTime time | Improve this Doc View Source Print(LoggingLevel, String, String, DateTime) Declaration public void Print(LoggingLevel level, string from, string message, DateTime time) Parameters Type Name Description LoggingLevel level System.String from System.String message System.DateTime time Events | Improve this Doc View Source LogMessageReceived Declaration public event EventHandler<OsuSharpLoggerEventArgs> LogMessageReceived Event Type Type Description System.EventHandler < OsuSharpLoggerEventArgs > Implements IOsuSharpLogger"
  },
  "api/OsuSharp.Misc.ModsUtilities.html": {
    "href": "api/OsuSharp.Misc.ModsUtilities.html",
    "title": "Class ModsUtilities | OsuSharp Documentation",
    "keywords": "Class ModsUtilities Inheritance System.Object ModsUtilities Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : OsuSharp.Misc Assembly : OsuSharp.dll Syntax public static class ModsUtilities Methods | Improve this Doc View Source ToModString(Mods, IOsuApi) Method that returns a System.String of the given bitflag Mods . Declaration public static string ToModString(this Mods mods, IOsuApi instance) Parameters Type Name Description Mods mods Bitflag of the mod. IOsuApi instance Instance of the OsuApi (needed to get the ModsSeparator stuff) Returns Type Description System.String"
  },
  "api/OsuSharp.OsuSharpConfiguration.html": {
    "href": "api/OsuSharp.OsuSharpConfiguration.html",
    "title": "Class OsuSharpConfiguration | OsuSharp Documentation",
    "keywords": "Class OsuSharpConfiguration Inheritance System.Object OsuSharpConfiguration Implements IOsuSharpConfiguration Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : OsuSharp Assembly : OsuSharp.dll Syntax public class OsuSharpConfiguration : IOsuSharpConfiguration Properties | Improve this Doc View Source ApiKey Declaration public string ApiKey { get; set; } Property Value Type Description System.String | Improve this Doc View Source CustomHttpClient Declaration public HttpClient CustomHttpClient { get; set; } Property Value Type Description System.Net.Http.HttpClient | Improve this Doc View Source LogLevel Declaration public LoggingLevel LogLevel { get; set; } Property Value Type Description LoggingLevel | Improve this Doc View Source MaxRequests Declaration public int MaxRequests { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source ModsSeparator Declaration public string ModsSeparator { get; set; } Property Value Type Description System.String | Improve this Doc View Source ThrowOnMaxRequests Declaration public bool ThrowOnMaxRequests { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source TimeInterval Declaration public TimeSpan TimeInterval { get; set; } Property Value Type Description System.TimeSpan Implements IOsuSharpConfiguration"
  },
  "api/OsuSharp.Misc.html": {
    "href": "api/OsuSharp.Misc.html",
    "title": "Namespace OsuSharp.Misc | OsuSharp Documentation",
    "keywords": "Namespace OsuSharp.Misc Classes Approved ModsStringAttribute ModsUtilities OsuSharpLoggerEventArgs Enums BeatmapState Enum representing the different possible states of a beatmap BeatmapType Enum representing different types of beatmaps GameMode Enum representing different available osu gamemodes LoggingLevel Mods"
  },
  "api/OsuSharp.MatchEndpoint.html": {
    "href": "api/OsuSharp.MatchEndpoint.html",
    "title": "Namespace OsuSharp.MatchEndpoint | OsuSharp Documentation",
    "keywords": "Namespace OsuSharp.MatchEndpoint Classes Game Match Matchs ScoreMatch"
  },
  "api/OsuSharp.MatchEndpoint.Game.html": {
    "href": "api/OsuSharp.MatchEndpoint.Game.html",
    "title": "Class Game | OsuSharp Documentation",
    "keywords": "Class Game Inheritance System.Object Game Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : OsuSharp.MatchEndpoint Assembly : OsuSharp.dll Syntax public class Game Properties | Improve this Doc View Source BeatmapId Id of the beatmap played Declaration [JsonProperty(\"beatmap_id\")] public ulong BeatmapId { get; set; } Property Value Type Description System.UInt64 | Improve this Doc View Source EnabledMods Mods used Declaration [JsonProperty(\"enabled_mods\")] public uint EnabledMods { get; set; } Property Value Type Description System.UInt32 | Improve this Doc View Source EndTime Time where the game ended Declaration [JsonProperty(\"end_time\")] public DateTime? EndTime { get; set; } Property Value Type Description System.Nullable < System.DateTime > | Improve this Doc View Source GameId Id of the game Declaration [JsonProperty(\"game_id\")] public ulong GameId { get; set; } Property Value Type Description System.UInt64 | Improve this Doc View Source GameMode Game mode of the play Declaration [JsonProperty(\"play_mode\")] public ushort GameMode { get; set; } Property Value Type Description System.UInt16 | Improve this Doc View Source MatchType Match type Declaration [JsonProperty(\"match_type\")] public ushort MatchType { get; set; } Property Value Type Description System.UInt16 | Improve this Doc View Source Mods Better representation of 'EnabledMods' Declaration public Mods Mods { get; } Property Value Type Description Mods | Improve this Doc View Source Scores List of scores made by players in this game Declaration [JsonProperty(\"scores\")] public List<ScoreMatch> Scores { get; set; } Property Value Type Description System.Collections.Generic.List < ScoreMatch > | Improve this Doc View Source ScoringType Score type Declaration [JsonProperty(\"scoring_type\")] public ushort ScoringType { get; set; } Property Value Type Description System.UInt16 | Improve this Doc View Source StartTime Time where the game started Declaration [JsonProperty(\"start_time\")] public DateTime? StartTime { get; set; } Property Value Type Description System.Nullable < System.DateTime > | Improve this Doc View Source TeamType Team type Declaration [JsonProperty(\"team_type\")] public ushort TeamType { get; set; } Property Value Type Description System.UInt16"
  },
  "api/OsuSharp.Interfaces.IOsuApi.html": {
    "href": "api/OsuSharp.Interfaces.IOsuApi.html",
    "title": "Interface IOsuApi | OsuSharp Documentation",
    "keywords": "Interface IOsuApi Namespace : OsuSharp.Interfaces Assembly : OsuSharp.dll Syntax public interface IOsuApi Properties | Improve this Doc View Source ApiKey ApiKey from Osu!Api Declaration string ApiKey { get; } Property Value Type Description System.String | Improve this Doc View Source Logger OsuSharp logger. Declaration IOsuSharpLogger Logger { get; } Property Value Type Description IOsuSharpLogger | Improve this Doc View Source ModsSeparator Separator used between each mod. Declaration string ModsSeparator { get; } Property Value Type Description System.String Methods | Improve this Doc View Source GetBeatmap(UInt64, BeatmapType, GameMode) Method that returns a Beatmap . It requires a valid BeatmapId. Declaration Beatmap GetBeatmap(ulong beatmapId, BeatmapType bmType = BeatmapType.ByDifficulty, GameMode gameMode = GameMode.Standard) Parameters Type Name Description System.UInt64 beatmapId Id of the beatmap. BeatmapType bmType Type of the beatmap. Beatmapset or difficulty. GameMode gameMode Gamemode of the beatmap. Standard, Taiko, Catch or Mania. Returns Type Description Beatmap Beatmap | Improve this Doc View Source GetBeatmapAsync(UInt64, BeatmapType, GameMode) Method that returns a Beatmap . It requires a valid BeatmapId. Declaration Task<Beatmap> GetBeatmapAsync(ulong beatmapId, BeatmapType bmType = BeatmapType.ByDifficulty, GameMode gameMode = GameMode.Standard) Parameters Type Name Description System.UInt64 beatmapId Id of the beatmap. BeatmapType bmType Type of the beatmap. Beatmapset or difficulty. GameMode gameMode Gamemode of the beatmap. Standard, Taiko, Catch or Mania. Returns Type Description System.Threading.Tasks.Task < Beatmap > Beatmap | Improve this Doc View Source GetBeatmapAsync(UInt64, BeatmapType, GameMode, CancellationToken) Method that returns a Beatmap . It requires a valid BeatmapId. Declaration Task<Beatmap> GetBeatmapAsync(ulong beatmapId, BeatmapType bmType, GameMode gameMode, CancellationToken cancellationToken) Parameters Type Name Description System.UInt64 beatmapId Id of the beatmap. BeatmapType bmType Type of the beatmap. Beatmapset or difficulty. GameMode gameMode Gamemode of the beatmap. Standard, Taiko, Catch or Mania. System.Threading.CancellationToken cancellationToken Cancellation token Returns Type Description System.Threading.Tasks.Task < Beatmap > Beatmap | Improve this Doc View Source GetBeatmaps(UInt64, BeatmapType, GameMode, Int32) Method that returns a list of Beatmap by the given beatmapset id. Declaration List<Beatmap> GetBeatmaps(ulong id, BeatmapType bmType = BeatmapType.ByBeatmap, GameMode gameMode = GameMode.Standard, int limit = 500) Parameters Type Name Description System.UInt64 id Id of the beatmapset. BeatmapType bmType Type of the beatmap. ByBeatmap is required. GameMode gameMode Gamemode of the beatmap. Standard, Taiko, Catch or Mania. System.Int32 limit Limit of the ouput. Default and maximum : 500. Returns Type Description System.Collections.Generic.List < Beatmap > System.Collections.Generic.List<T> | Improve this Doc View Source GetBeatmapsAsync(UInt64, BeatmapType, GameMode, Int32) Method that returns a list of Beatmap by the given beatmapset id. Declaration Task<List<Beatmap>> GetBeatmapsAsync(ulong id, BeatmapType bmType = BeatmapType.ByBeatmap, GameMode gameMode = GameMode.Standard, int limit = 500) Parameters Type Name Description System.UInt64 id Id of the beatmapset. BeatmapType bmType Type of the beatmap. ByBeatmap is required. GameMode gameMode Gamemode of the beatmap. Standard, Taiko, Catch or Mania. System.Int32 limit Limit of the ouput. Default and maximum : 500. Returns Type Description System.Threading.Tasks.Task < System.Collections.Generic.List < Beatmap >> System.Collections.Generic.List<T> | Improve this Doc View Source GetBeatmapsAsync(UInt64, BeatmapType, GameMode, Int32, CancellationToken) Method that returns a list of Beatmap by the given beatmapset id. Declaration Task<List<Beatmap>> GetBeatmapsAsync(ulong id, BeatmapType bmType, GameMode gameMode, int limit, CancellationToken cancellationToken) Parameters Type Name Description System.UInt64 id Id of the beatmapset. BeatmapType bmType Type of the beatmap. ByBeatmap is required. GameMode gameMode Gamemode of the beatmap. Standard, Taiko, Catch or Mania. System.Int32 limit Limit of the ouput. Default and maximum : 500. System.Threading.CancellationToken cancellationToken Cancellation token Returns Type Description System.Threading.Tasks.Task < System.Collections.Generic.List < Beatmap >> System.Collections.Generic.List<T> | Improve this Doc View Source GetBeatmapsByCreator(String, GameMode, Int32) Method that returns a list of Beatmap by the given creator's nickname. Declaration List<Beatmap> GetBeatmapsByCreator(string username, GameMode gameMode = GameMode.Standard, int limit = 500) Parameters Type Name Description System.String username Author's nickname of the beatmap. GameMode gameMode Gamemode of the beatmap. Standard, Taiko, Catch or Mania. System.Int32 limit Limit of the output. Default and maximum : 500. Returns Type Description System.Collections.Generic.List < Beatmap > System.Collections.Generic.List<T> | Improve this Doc View Source GetBeatmapsByCreatorAsync(String, GameMode, Int32) Method that returns a list of Beatmap by the given creator's nickname. Declaration Task<List<Beatmap>> GetBeatmapsByCreatorAsync(string username, GameMode gameMode = GameMode.Standard, int limit = 500) Parameters Type Name Description System.String username Author's nickname of the beatmap. GameMode gameMode Gamemode of the beatmap. Standard, Taiko, Catch or Mania. System.Int32 limit Limit of the output. Default and maximum : 500. Returns Type Description System.Threading.Tasks.Task < System.Collections.Generic.List < Beatmap >> System.Collections.Generic.List<T> | Improve this Doc View Source GetBeatmapsByCreatorAsync(String, GameMode, Int32, CancellationToken) Method that returns a list of Beatmap by the given creator's nickname. Declaration Task<List<Beatmap>> GetBeatmapsByCreatorAsync(string username, GameMode gameMode, int limit, CancellationToken cancellationToken) Parameters Type Name Description System.String username Author's nickname of the beatmap. GameMode gameMode Gamemode of the beatmap. Standard, Taiko, Catch or Mania. System.Int32 limit Limit of the output. Default and maximum : 500. System.Threading.CancellationToken cancellationToken Cancellation token Returns Type Description System.Threading.Tasks.Task < System.Collections.Generic.List < Beatmap >> System.Collections.Generic.List<T> | Improve this Doc View Source GetLastBeatmaps(Int32) Method that returns a list of lasts uploaded Beatmap . Declaration List<Beatmap> GetLastBeatmaps(int limit = 500) Parameters Type Name Description System.Int32 limit Limit of the output. Default and maximum : 500. Returns Type Description System.Collections.Generic.List < Beatmap > System.Collections.Generic.List<T> | Improve this Doc View Source GetLastBeatmapsAsync(Int32) Method that returns a list of lasts uploaded Beatmap . Declaration Task<List<Beatmap>> GetLastBeatmapsAsync(int limit = 500) Parameters Type Name Description System.Int32 limit Limit of the output. Default and maximum : 500. Returns Type Description System.Threading.Tasks.Task < System.Collections.Generic.List < Beatmap >> System.Collections.Generic.List<T> | Improve this Doc View Source GetLastBeatmapsAsync(Int32, CancellationToken) Method that returns a list of lasts uploaded Beatmap . Declaration Task<List<Beatmap>> GetLastBeatmapsAsync(int limit, CancellationToken cancellationToken) Parameters Type Name Description System.Int32 limit Limit of the output. Default and maximum : 500. System.Threading.CancellationToken cancellationToken Cancellation token Returns Type Description System.Threading.Tasks.Task < System.Collections.Generic.List < Beatmap >> System.Collections.Generic.List<T> | Improve this Doc View Source GetMatch(UInt64) Method that returns a Matchs by the given matchid. Declaration Matchs GetMatch(ulong matchid) Parameters Type Name Description System.UInt64 matchid Id of the match. Returns Type Description Matchs Matchs | Improve this Doc View Source GetMatchAsync(UInt64) Method that returns a Matchs by the given matchid. Declaration Task<Matchs> GetMatchAsync(ulong matchid) Parameters Type Name Description System.UInt64 matchid Id of the match. Returns Type Description System.Threading.Tasks.Task < Matchs > Matchs | Improve this Doc View Source GetMatchAsync(UInt64, CancellationToken) Method that returns a Matchs by the given matchid. Declaration Task<Matchs> GetMatchAsync(ulong matchid, CancellationToken cancellationToken) Parameters Type Name Description System.UInt64 matchid Id of the match. System.Threading.CancellationToken cancellationToken Cancellation token Returns Type Description System.Threading.Tasks.Task < Matchs > Matchs | Improve this Doc View Source GetReplayByUserid(UInt64, UInt64, GameMode) Method that returns a Replay by the given beatmapid and userid. Declaration Replay GetReplayByUserid(ulong beatmapid, ulong userid, GameMode gameMode = GameMode.Standard) Parameters Type Name Description System.UInt64 beatmapid Id of the beatmap. Must be the id of a difficulty. System.UInt64 userid Id of the user. GameMode gameMode Gamemode of the play. Standard, Taiko, Catch or Mania. Returns Type Description Replay Replay | Improve this Doc View Source GetReplayByUseridAsync(UInt64, UInt64, GameMode) Method that returns a Replay by the given beatmapid and userid. Declaration Task<Replay> GetReplayByUseridAsync(ulong beatmapid, ulong userid, GameMode gameMode = GameMode.Standard) Parameters Type Name Description System.UInt64 beatmapid Id of the beatmap. Must be the id of a difficulty. System.UInt64 userid Id of the user. GameMode gameMode Gamemode of the play. Standard, Taiko, Catch or Mania. Returns Type Description System.Threading.Tasks.Task < Replay > Replay | Improve this Doc View Source GetReplayByUseridAsync(UInt64, UInt64, GameMode, CancellationToken) Method that returns a Replay by the given beatmapid and userid. Declaration Task<Replay> GetReplayByUseridAsync(ulong beatmapid, ulong userid, GameMode gameMode, CancellationToken cancellationToken) Parameters Type Name Description System.UInt64 beatmapid Id of the beatmap. Must be the id of a difficulty. System.UInt64 userid Id of the user. GameMode gameMode Gamemode of the play. Standard, Taiko, Catch or Mania. System.Threading.CancellationToken cancellationToken Cancellation token Returns Type Description System.Threading.Tasks.Task < Replay > Replay | Improve this Doc View Source GetReplayByUsername(UInt64, String, GameMode) Method that returns a Replay by the given beatmapid and username. Declaration Replay GetReplayByUsername(ulong beatmapid, string username, GameMode gameMode = GameMode.Standard) Parameters Type Name Description System.UInt64 beatmapid Id of the beatmap. Must be the id of a difficulty. System.String username Username of the user. GameMode gameMode Gamemode of the play. Standard, Taiko, Catch or Mania. Returns Type Description Replay Replay | Improve this Doc View Source GetReplayByUsernameAsync(UInt64, String, GameMode) Method that returns a Replay by the given beatmapid and username. Declaration Task<Replay> GetReplayByUsernameAsync(ulong beatmapid, string username, GameMode gameMode = GameMode.Standard) Parameters Type Name Description System.UInt64 beatmapid Id of the beatmap. Must be the id of a difficulty. System.String username Username of the user. GameMode gameMode Gamemode of the play. Standard, Taiko, Catch or Mania. Returns Type Description System.Threading.Tasks.Task < Replay > Replay | Improve this Doc View Source GetReplayByUsernameAsync(UInt64, String, GameMode, CancellationToken) Method that returns a Replay by the given beatmapid and username. Declaration Task<Replay> GetReplayByUsernameAsync(ulong beatmapid, string username, GameMode gameMode, CancellationToken cancellationToken) Parameters Type Name Description System.UInt64 beatmapid Id of the beatmap. Must be the id of a difficulty. System.String username Username of the user. GameMode gameMode Gamemode of the play. Standard, Taiko, Catch or Mania. System.Threading.CancellationToken cancellationToken Cancellation token Returns Type Description System.Threading.Tasks.Task < Replay > Replay | Improve this Doc View Source GetScoreByUserid(UInt64, UInt64, GameMode) Method that returns a Score by the given beatmapid and userid. Declaration Score GetScoreByUserid(ulong beatmapid, ulong userid, GameMode gameMode = GameMode.Standard) Parameters Type Name Description System.UInt64 beatmapid Id of the beatmap. Must be the id of a difficulty. System.UInt64 userid Id of the user. GameMode gameMode Gamemode of the play. Standard, Taiko, Catch or Mania. Returns Type Description Score Score | Improve this Doc View Source GetScoreByUseridAsync(UInt64, UInt64, GameMode) Method that returns a Score by the given beatmapid and userid. Declaration Task<Score> GetScoreByUseridAsync(ulong beatmapid, ulong userid, GameMode gameMode = GameMode.Standard) Parameters Type Name Description System.UInt64 beatmapid Id of the beatmap. Must be the id of a difficulty. System.UInt64 userid Id of the user. GameMode gameMode Gamemode of the play. Standard, Taiko, Catch or Mania. Returns Type Description System.Threading.Tasks.Task < Score > Score | Improve this Doc View Source GetScoreByUseridAsync(UInt64, UInt64, GameMode, CancellationToken) Method that returns a Score by the given beatmapid and userid. Declaration Task<Score> GetScoreByUseridAsync(ulong beatmapid, ulong userid, GameMode gameMode, CancellationToken cancellationToken) Parameters Type Name Description System.UInt64 beatmapid Id of the beatmap. Must be the id of a difficulty. System.UInt64 userid Id of the user. GameMode gameMode Gamemode of the play. Standard, Taiko, Catch or Mania. System.Threading.CancellationToken cancellationToken Cancellation token Returns Type Description System.Threading.Tasks.Task < Score > Score | Improve this Doc View Source GetScoreByUsername(UInt64, String, GameMode) Method that returns a Score by the given beatmapid and username. Declaration Score GetScoreByUsername(ulong beatmapid, string username, GameMode gameMode = GameMode.Standard) Parameters Type Name Description System.UInt64 beatmapid Id of the beatmap. Must be the id of a difficulty. System.String username Username of the user. GameMode gameMode Gamemode of the play. Standard, Taiko, Catch or Mania. Returns Type Description Score Score | Improve this Doc View Source GetScoreByUsernameAsync(UInt64, String, GameMode) Method that returns a Score by the given beatmapid and username. Declaration Task<Score> GetScoreByUsernameAsync(ulong beatmapid, string username, GameMode gameMode = GameMode.Standard) Parameters Type Name Description System.UInt64 beatmapid Id of the beatmap. Must be the id of a difficulty. System.String username Username of the user. GameMode gameMode Gamemode of the play. Standard, Taiko, Catch or Mania. Returns Type Description System.Threading.Tasks.Task < Score > Score | Improve this Doc View Source GetScoreByUsernameAsync(UInt64, String, GameMode, CancellationToken) Method that returns a Score by the given beatmapid and username. Declaration Task<Score> GetScoreByUsernameAsync(ulong beatmapid, string username, GameMode gameMode, CancellationToken cancellationToken) Parameters Type Name Description System.UInt64 beatmapid Id of the beatmap. Must be the id of a difficulty. System.String username Username of the user. GameMode gameMode Gamemode of the play. Standard, Taiko, Catch or Mania. System.Threading.CancellationToken cancellationToken Cancellation token Returns Type Description System.Threading.Tasks.Task < Score > Score | Improve this Doc View Source GetScores(UInt64, GameMode, Int32) Method that returns a list of Score by the given beatmapid. Declaration List<Score> GetScores(ulong beatmapid, GameMode gameMode = GameMode.Standard, int limit = 50) Parameters Type Name Description System.UInt64 beatmapid Id of the beatmap. Must be the id of a difficulty. GameMode gameMode Gamemode of the play. Standard, Taiko, Catch or Mania. System.Int32 limit Limit of the output. Default : 50, minimum : 1, maximum : 100 Returns Type Description System.Collections.Generic.List < Score > Score | Improve this Doc View Source GetScoresAndBeatmap(UInt64, GameMode, Int32) Method that returns a list of BeatmapScores by the given beatmapid. Declaration BeatmapScores GetScoresAndBeatmap(ulong beatmapid, GameMode gameMode = GameMode.Standard, int limit = 50) Parameters Type Name Description System.UInt64 beatmapid Id of the beatmap. Must be the id of a difficulty. GameMode gameMode Gamemode of the play. Standard, Taiko, Catch or Mania. System.Int32 limit Limit of the output. Default : 50, minimum : 1, maximum : 100 Returns Type Description BeatmapScores BeatmapScores | Improve this Doc View Source GetScoresAndBeatmapAsync(UInt64, GameMode, Int32) Method that returns a list of BeatmapScores by the given beatmapid. Declaration Task<BeatmapScores> GetScoresAndBeatmapAsync(ulong beatmapid, GameMode gameMode = GameMode.Standard, int limit = 50) Parameters Type Name Description System.UInt64 beatmapid Id of the beatmap. Must be the id of a difficulty. GameMode gameMode Gamemode of the play. Standard, Taiko, Catch or Mania. System.Int32 limit Limit of the output. Default : 50, minimum : 1, maximum : 100 Returns Type Description System.Threading.Tasks.Task < BeatmapScores > BeatmapScores | Improve this Doc View Source GetScoresAndBeatmapAsync(UInt64, GameMode, Int32, CancellationToken) Method that returns a list of BeatmapScores by the given beatmapid. Declaration Task<BeatmapScores> GetScoresAndBeatmapAsync(ulong beatmapid, GameMode gameMode, int limit, CancellationToken cancellationToken) Parameters Type Name Description System.UInt64 beatmapid Id of the beatmap. Must be the id of a difficulty. GameMode gameMode Gamemode of the play. Standard, Taiko, Catch or Mania. System.Int32 limit Limit of the output. Default : 50, minimum : 1, maximum : 100 System.Threading.CancellationToken cancellationToken Cancellation token Returns Type Description System.Threading.Tasks.Task < BeatmapScores > BeatmapScores | Improve this Doc View Source GetScoresAsync(UInt64, GameMode, Int32) Method that returns a list of Score by the given beatmapid. Declaration Task<List<Score>> GetScoresAsync(ulong beatmapid, GameMode gameMode = GameMode.Standard, int limit = 50) Parameters Type Name Description System.UInt64 beatmapid Id of the beatmap. Must be the id of a difficulty. GameMode gameMode Gamemode of the play. Standard, Taiko, Catch or Mania. System.Int32 limit Limit of the output. Default : 50, minimum : 1, maximum : 100 Returns Type Description System.Threading.Tasks.Task < System.Collections.Generic.List < Score >> Score | Improve this Doc View Source GetScoresAsync(UInt64, GameMode, Int32, CancellationToken) Method that returns a list of Score by the given beatmapid. Declaration Task<List<Score>> GetScoresAsync(ulong beatmapid, GameMode gameMode, int limit, CancellationToken cancellationToken) Parameters Type Name Description System.UInt64 beatmapid Id of the beatmap. Must be the id of a difficulty. GameMode gameMode Gamemode of the play. Standard, Taiko, Catch or Mania. System.Int32 limit Limit of the output. Default : 50, minimum : 1, maximum : 100 System.Threading.CancellationToken cancellationToken Cancellation token Returns Type Description System.Threading.Tasks.Task < System.Collections.Generic.List < Score >> Score | Improve this Doc View Source GetScoresWithUsersAndBeatmap(UInt64, GameMode, Int32) Method that returns a list of BeatmapScoresUsers by the given beatmapid. Declaration BeatmapScoresUsers GetScoresWithUsersAndBeatmap(ulong beatmapid, GameMode gameMode = GameMode.Standard, int limit = 50) Parameters Type Name Description System.UInt64 beatmapid Id of the beatmap. Must be the id of a difficulty. GameMode gameMode Gamemode of the play. Standard, Taiko, Catch or Mania. System.Int32 limit Limit of the output. Default : 50, minimum : 1, maximum : 100 Returns Type Description BeatmapScoresUsers BeatmapScoresUsers | Improve this Doc View Source GetScoresWithUsersAndBeatmapAsync(UInt64, GameMode, Int32) Method that returns a list of BeatmapScoresUsers by the given beatmapid. Declaration Task<BeatmapScoresUsers> GetScoresWithUsersAndBeatmapAsync(ulong beatmapid, GameMode gameMode = GameMode.Standard, int limit = 50) Parameters Type Name Description System.UInt64 beatmapid Id of the beatmap. Must be the id of a difficulty. GameMode gameMode Gamemode of the play. Standard, Taiko, Catch or Mania. System.Int32 limit Limit of the output. Default : 50, minimum : 1, maximum : 100 Returns Type Description System.Threading.Tasks.Task < BeatmapScoresUsers > BeatmapScoresUsers | Improve this Doc View Source GetScoresWithUsersAndBeatmapAsync(UInt64, GameMode, Int32, CancellationToken) Method that returns a list of BeatmapScoresUsers by the given beatmapid. Declaration Task<BeatmapScoresUsers> GetScoresWithUsersAndBeatmapAsync(ulong beatmapid, GameMode gameMode, int limit, CancellationToken cancellationToken) Parameters Type Name Description System.UInt64 beatmapid Id of the beatmap. Must be the id of a difficulty. GameMode gameMode Gamemode of the play. Standard, Taiko, Catch or Mania. System.Int32 limit Limit of the output. Default : 50, minimum : 1, maximum : 100 System.Threading.CancellationToken cancellationToken Cancellation token Returns Type Description System.Threading.Tasks.Task < BeatmapScoresUsers > BeatmapScoresUsers | Improve this Doc View Source GetUserBestAndBeatmapByUserid(UInt64, GameMode, Int32) Method that returns a list of UserBestBeatmap by the given username. Declaration List<UserBestBeatmap> GetUserBestAndBeatmapByUserid(ulong userid, GameMode gameMode = GameMode.Standard, int limit = 10) Parameters Type Name Description System.UInt64 userid Id of the user. GameMode gameMode Gamemode of the play. Standard, Taiko, Catch or Mania. System.Int32 limit Limit of the output. Default : 10, minimum : 1, maximum : 100 Returns Type Description System.Collections.Generic.List < UserBestBeatmap > System.Collections.Generic.List<T> | Improve this Doc View Source GetUserBestAndBeatmapByUseridAsync(UInt64, GameMode, Int32) Method that returns a list of UserBestBeatmap by the given username. Declaration Task<List<UserBestBeatmap>> GetUserBestAndBeatmapByUseridAsync(ulong userid, GameMode gameMode = GameMode.Standard, int limit = 10) Parameters Type Name Description System.UInt64 userid Id of the user. GameMode gameMode Gamemode of the play. Standard, Taiko, Catch or Mania. System.Int32 limit Limit of the output. Default : 10, minimum : 1, maximum : 100 Returns Type Description System.Threading.Tasks.Task < System.Collections.Generic.List < UserBestBeatmap >> System.Collections.Generic.List<T> | Improve this Doc View Source GetUserBestAndBeatmapByUseridAsync(UInt64, GameMode, Int32, CancellationToken) Method that returns a list of UserBestBeatmap by the given username. Declaration Task<List<UserBestBeatmap>> GetUserBestAndBeatmapByUseridAsync(ulong userid, GameMode gameMode, int limit, CancellationToken cancellationToken) Parameters Type Name Description System.UInt64 userid Id of the user. GameMode gameMode Gamemode of the play. Standard, Taiko, Catch or Mania. System.Int32 limit Limit of the output. Default : 10, minimum : 1, maximum : 100 System.Threading.CancellationToken cancellationToken Cancellation token Returns Type Description System.Threading.Tasks.Task < System.Collections.Generic.List < UserBestBeatmap >> System.Collections.Generic.List<T> | Improve this Doc View Source GetUserBestAndBeatmapByUsername(String, GameMode, Int32) Method that returns a list of UserBestBeatmap by the given username. Declaration List<UserBestBeatmap> GetUserBestAndBeatmapByUsername(string username, GameMode gameMode = GameMode.Standard, int limit = 10) Parameters Type Name Description System.String username Username of the user. GameMode gameMode Gamemode of the play. Standard, Taiko, Catch or Mania. System.Int32 limit Limit of the output. Default : 10, minimum : 1, maximum : 100 Returns Type Description System.Collections.Generic.List < UserBestBeatmap > System.Collections.Generic.List<T> | Improve this Doc View Source GetUserBestAndBeatmapByUsernameAsync(String, GameMode, Int32) Method that returns a list of UserBestBeatmap by the given username. Declaration Task<List<UserBestBeatmap>> GetUserBestAndBeatmapByUsernameAsync(string username, GameMode gameMode = GameMode.Standard, int limit = 10) Parameters Type Name Description System.String username Username of the user. GameMode gameMode Gamemode of the play. Standard, Taiko, Catch or Mania. System.Int32 limit Limit of the output. Default : 10, minimum : 1, maximum : 100 Returns Type Description System.Threading.Tasks.Task < System.Collections.Generic.List < UserBestBeatmap >> System.Collections.Generic.List<T> | Improve this Doc View Source GetUserBestAndBeatmapByUsernameAsync(String, GameMode, Int32, CancellationToken) Method that returns a list of UserBestBeatmap by the given username. Declaration Task<List<UserBestBeatmap>> GetUserBestAndBeatmapByUsernameAsync(string username, GameMode gameMode, int limit, CancellationToken cancellationToken) Parameters Type Name Description System.String username Username of the user. GameMode gameMode Gamemode of the play. Standard, Taiko, Catch or Mania. System.Int32 limit Limit of the output. Default : 10, minimum : 1, maximum : 100 System.Threading.CancellationToken cancellationToken Cancellation token Returns Type Description System.Threading.Tasks.Task < System.Collections.Generic.List < UserBestBeatmap >> System.Collections.Generic.List<T> | Improve this Doc View Source GetUserBestByUserid(UInt64, GameMode, Int32) Method that returns a list of UserBest by the given userid. Declaration List<UserBest> GetUserBestByUserid(ulong userid, GameMode gameMode = GameMode.Standard, int limit = 10) Parameters Type Name Description System.UInt64 userid Id of the user. GameMode gameMode Gamemode of the play. Standard, Taiko, Catch or Mania. System.Int32 limit Limit of the output. Default : 10, minimum : 1, maximum : 100 Returns Type Description System.Collections.Generic.List < UserBest > System.Collections.Generic.List<T> | Improve this Doc View Source GetUserBestByUseridAsync(UInt64, GameMode, Int32) Method that returns a list of UserBest by the given userid. Declaration Task<List<UserBest>> GetUserBestByUseridAsync(ulong userid, GameMode gameMode = GameMode.Standard, int limit = 10) Parameters Type Name Description System.UInt64 userid Id of the user. GameMode gameMode Gamemode of the play. Standard, Taiko, Catch or Mania. System.Int32 limit Limit of the output. Default : 10, minimum : 1, maximum : 100 Returns Type Description System.Threading.Tasks.Task < System.Collections.Generic.List < UserBest >> System.Collections.Generic.List<T> | Improve this Doc View Source GetUserBestByUseridAsync(UInt64, GameMode, Int32, CancellationToken) Method that returns a list of UserBest by the given userid. Declaration Task<List<UserBest>> GetUserBestByUseridAsync(ulong userid, GameMode gameMode, int limit, CancellationToken cancellationToken) Parameters Type Name Description System.UInt64 userid Id of the user. GameMode gameMode Gamemode of the play. Standard, Taiko, Catch or Mania. System.Int32 limit Limit of the output. Default : 10, minimum : 1, maximum : 100 System.Threading.CancellationToken cancellationToken Cancellation token Returns Type Description System.Threading.Tasks.Task < System.Collections.Generic.List < UserBest >> System.Collections.Generic.List<T> | Improve this Doc View Source GetUserBestByUsername(String, GameMode, Int32) Method that returns a list of UserBest by the given username. Declaration List<UserBest> GetUserBestByUsername(string username, GameMode gameMode = GameMode.Standard, int limit = 10) Parameters Type Name Description System.String username Username of the user. GameMode gameMode Gamemode of the play. Standard, Taiko, Catch or Mania. System.Int32 limit Limit of the output. Default : 10, minimum : 1, maximum : 100 Returns Type Description System.Collections.Generic.List < UserBest > System.Collections.Generic.List<T> | Improve this Doc View Source GetUserBestByUsernameAsync(String, GameMode, Int32) Method that returns a list of UserBest by the given username. Declaration Task<List<UserBest>> GetUserBestByUsernameAsync(string username, GameMode gameMode = GameMode.Standard, int limit = 10) Parameters Type Name Description System.String username Username of the user. GameMode gameMode Gamemode of the play. Standard, Taiko, Catch or Mania. System.Int32 limit Limit of the output. Default : 10, minimum : 1, maximum : 100 Returns Type Description System.Threading.Tasks.Task < System.Collections.Generic.List < UserBest >> System.Collections.Generic.List<T> | Improve this Doc View Source GetUserBestByUsernameAsync(String, GameMode, Int32, CancellationToken) Method that returns a list of UserBest by the given username. Declaration Task<List<UserBest>> GetUserBestByUsernameAsync(string username, GameMode gameMode, int limit, CancellationToken cancellationToken) Parameters Type Name Description System.String username Username of the user. GameMode gameMode Gamemode of the play. Standard, Taiko, Catch or Mania. System.Int32 limit Limit of the output. Default : 10, minimum : 1, maximum : 100 System.Threading.CancellationToken cancellationToken Cancellation token Returns Type Description System.Threading.Tasks.Task < System.Collections.Generic.List < UserBest >> System.Collections.Generic.List<T> | Improve this Doc View Source GetUserById(UInt64, GameMode) Method that returns a User by the given Userid. Declaration User GetUserById(ulong userid, GameMode gameMode = GameMode.Standard) Parameters Type Name Description System.UInt64 userid Id of the user. GameMode gameMode Gamemode of the user. Standard, Taiko, Catch or Mania. Returns Type Description User User | Improve this Doc View Source GetUserByIdAsync(UInt64, GameMode) Method that returns a User by the given Userid. Declaration Task<User> GetUserByIdAsync(ulong userid, GameMode gameMode = GameMode.Standard) Parameters Type Name Description System.UInt64 userid Id of the user. GameMode gameMode Gamemode of the user. Standard, Taiko, Catch or Mania. Returns Type Description System.Threading.Tasks.Task < User > User | Improve this Doc View Source GetUserByIdAsync(UInt64, GameMode, CancellationToken) Method that returns a User by the given Userid. Declaration Task<User> GetUserByIdAsync(ulong userid, GameMode gameMode, CancellationToken cancellationToken) Parameters Type Name Description System.UInt64 userid Id of the user. GameMode gameMode Gamemode of the user. Standard, Taiko, Catch or Mania. System.Threading.CancellationToken cancellationToken Cancellation token Returns Type Description System.Threading.Tasks.Task < User > User | Improve this Doc View Source GetUserByName(String, GameMode) Method that returns a User by the given Username. Declaration User GetUserByName(string username, GameMode gameMode = GameMode.Standard) Parameters Type Name Description System.String username Username of the user. GameMode gameMode Gamemode of the user. Standard, Taiko, Catch or Mania. Returns Type Description User User | Improve this Doc View Source GetUserByNameAsync(String, GameMode) Method that returns a User by the given Username. Declaration Task<User> GetUserByNameAsync(string username, GameMode gameMode = GameMode.Standard) Parameters Type Name Description System.String username Username of the user. GameMode gameMode Gamemode of the user. Standard, Taiko, Catch or Mania. Returns Type Description System.Threading.Tasks.Task < User > System.Threading.Tasks.Task<TResult> | Improve this Doc View Source GetUserByNameAsync(String, GameMode, CancellationToken) Method that returns a User by the given Username. Declaration Task<User> GetUserByNameAsync(string username, GameMode gameMode, CancellationToken cancellationToken) Parameters Type Name Description System.String username Username of the user. GameMode gameMode Gamemode of the user. Standard, Taiko, Catch or Mania. System.Threading.CancellationToken cancellationToken Cancellation token Returns Type Description System.Threading.Tasks.Task < User > User | Improve this Doc View Source GetUserRecentAndBeatmapByUserid(UInt64, GameMode, Int32) Method that returns a list of UserRecentBeatmap by the given userid. Declaration List<UserRecentBeatmap> GetUserRecentAndBeatmapByUserid(ulong userid, GameMode gameMode = GameMode.Standard, int limit = 10) Parameters Type Name Description System.UInt64 userid Id of the user. GameMode gameMode Gamemode of the play. Standard, Taiko, Catch or Mania. System.Int32 limit Limit of the output. Default : 10, minimum : 1, maximum : 100 Returns Type Description System.Collections.Generic.List < UserRecentBeatmap > System.Collections.Generic.List<T> | Improve this Doc View Source GetUserRecentAndBeatmapByUseridAsync(UInt64, GameMode, Int32) Method that returns a list of UserRecentBeatmap by the given userid. Declaration Task<List<UserRecentBeatmap>> GetUserRecentAndBeatmapByUseridAsync(ulong userid, GameMode gameMode = GameMode.Standard, int limit = 10) Parameters Type Name Description System.UInt64 userid Id of the user. GameMode gameMode Gamemode of the play. Standard, Taiko, Catch or Mania. System.Int32 limit Limit of the output. Default : 10, minimum : 1, maximum : 100 Returns Type Description System.Threading.Tasks.Task < System.Collections.Generic.List < UserRecentBeatmap >> System.Collections.Generic.List<T> | Improve this Doc View Source GetUserRecentAndBeatmapByUseridAsync(UInt64, GameMode, Int32, CancellationToken) Method that returns a list of UserRecentBeatmap by the given userid. Declaration Task<List<UserRecentBeatmap>> GetUserRecentAndBeatmapByUseridAsync(ulong userid, GameMode gameMode, int limit, CancellationToken cancellationToken) Parameters Type Name Description System.UInt64 userid Id of the user. GameMode gameMode Gamemode of the play. Standard, Taiko, Catch or Mania. System.Int32 limit Limit of the output. Default : 10, minimum : 1, maximum : 100 System.Threading.CancellationToken cancellationToken Cancellation token Returns Type Description System.Threading.Tasks.Task < System.Collections.Generic.List < UserRecentBeatmap >> System.Collections.Generic.List<T> | Improve this Doc View Source GetUserRecentAndBeatmapByUsername(String, GameMode, Int32) Method that returns a list of UserRecentBeatmap by the given username. Declaration List<UserRecentBeatmap> GetUserRecentAndBeatmapByUsername(string username, GameMode gameMode = GameMode.Standard, int limit = 10) Parameters Type Name Description System.String username Username of the user. GameMode gameMode Gamemode of the play. Standard, Taiko, Catch or Mania. System.Int32 limit Limit of the output. Default : 10, minimum : 1, maximum : 100 Returns Type Description System.Collections.Generic.List < UserRecentBeatmap > System.Collections.Generic.List<T> | Improve this Doc View Source GetUserRecentAndBeatmapByUsernameAsync(String, GameMode, Int32) Method that returns a list of UserRecentBeatmap by the given username. Declaration Task<List<UserRecentBeatmap>> GetUserRecentAndBeatmapByUsernameAsync(string username, GameMode gameMode = GameMode.Standard, int limit = 10) Parameters Type Name Description System.String username Username of the user. GameMode gameMode Gamemode of the play. Standard, Taiko, Catch or Mania. System.Int32 limit Limit of the output. Default : 10, minimum : 1, maximum : 100 Returns Type Description System.Threading.Tasks.Task < System.Collections.Generic.List < UserRecentBeatmap >> System.Collections.Generic.List<T> | Improve this Doc View Source GetUserRecentAndBeatmapByUsernameAsync(String, GameMode, Int32, CancellationToken) Method that returns a list of UserRecentBeatmap by the given username. Declaration Task<List<UserRecentBeatmap>> GetUserRecentAndBeatmapByUsernameAsync(string username, GameMode gameMode, int limit, CancellationToken cancellationToken) Parameters Type Name Description System.String username Username of the user. GameMode gameMode Gamemode of the play. Standard, Taiko, Catch or Mania. System.Int32 limit Limit of the output. Default : 10, minimum : 1, maximum : 100 System.Threading.CancellationToken cancellationToken Cancellation token Returns Type Description System.Threading.Tasks.Task < System.Collections.Generic.List < UserRecentBeatmap >> System.Collections.Generic.List<T> | Improve this Doc View Source GetUserRecentByUserid(UInt64, GameMode, Int32) Method that returns a list of UserRecent by the given userid. Declaration List<UserRecent> GetUserRecentByUserid(ulong userid, GameMode gameMode = GameMode.Standard, int limit = 10) Parameters Type Name Description System.UInt64 userid Id of the user. GameMode gameMode Gamemode of the play. Standard, Taiko, Catch or Mania. System.Int32 limit Limit of the output. Default : 10, minimum : 1, maximum : 100 Returns Type Description System.Collections.Generic.List < UserRecent > System.Collections.Generic.List<T> | Improve this Doc View Source GetUserRecentByUseridAsync(UInt64, GameMode, Int32) Method that returns a list of UserRecent by the given userid. Declaration Task<List<UserRecent>> GetUserRecentByUseridAsync(ulong userid, GameMode gameMode = GameMode.Standard, int limit = 10) Parameters Type Name Description System.UInt64 userid Id of the user. GameMode gameMode Gamemode of the play. Standard, Taiko, Catch or Mania. System.Int32 limit Limit of the output. Default : 10, minimum : 1, maximum : 100 Returns Type Description System.Threading.Tasks.Task < System.Collections.Generic.List < UserRecent >> System.Collections.Generic.List<T> | Improve this Doc View Source GetUserRecentByUseridAsync(UInt64, GameMode, Int32, CancellationToken) Method that returns a list of UserRecent by the given userid. Declaration Task<List<UserRecent>> GetUserRecentByUseridAsync(ulong userid, GameMode gameMode, int limit, CancellationToken cancellationToken) Parameters Type Name Description System.UInt64 userid Id of the user. GameMode gameMode Gamemode of the play. Standard, Taiko, Catch or Mania. System.Int32 limit Limit of the output. Default : 10, minimum : 1, maximum : 100 System.Threading.CancellationToken cancellationToken Cancellation token Returns Type Description System.Threading.Tasks.Task < System.Collections.Generic.List < UserRecent >> System.Collections.Generic.List<T> | Improve this Doc View Source GetUserRecentByUsername(String, GameMode, Int32) Method that returns a list of UserRecent by the given username. Declaration List<UserRecent> GetUserRecentByUsername(string username, GameMode gameMode = GameMode.Standard, int limit = 10) Parameters Type Name Description System.String username Username of the user. GameMode gameMode Gamemode of the play. Standard, Taiko, Catch or Mania. System.Int32 limit Limit of the output. Default : 10, minimum : 1, maximum : 100 Returns Type Description System.Collections.Generic.List < UserRecent > System.Collections.Generic.List<T> | Improve this Doc View Source GetUserRecentByUsernameAsync(String, GameMode, Int32) Method that returns a list of UserRecent by the given username. Declaration Task<List<UserRecent>> GetUserRecentByUsernameAsync(string username, GameMode gameMode = GameMode.Standard, int limit = 10) Parameters Type Name Description System.String username Username of the user. GameMode gameMode Gamemode of the play. Standard, Taiko, Catch or Mania. System.Int32 limit Limit of the output. Default : 10, minimum : 1, maximum : 100 Returns Type Description System.Threading.Tasks.Task < System.Collections.Generic.List < UserRecent >> System.Collections.Generic.List<T> | Improve this Doc View Source GetUserRecentByUsernameAsync(String, GameMode, Int32, CancellationToken) Method that returns a list of UserRecent by the given username. Declaration Task<List<UserRecent>> GetUserRecentByUsernameAsync(string username, GameMode gameMode, int limit, CancellationToken cancellationToken) Parameters Type Name Description System.String username Username of the user. GameMode gameMode Gamemode of the play. Standard, Taiko, Catch or Mania. System.Int32 limit Limit of the output. Default : 10, minimum : 1, maximum : 100 System.Threading.CancellationToken cancellationToken Cancellation token Returns Type Description System.Threading.Tasks.Task < System.Collections.Generic.List < UserRecent >> System.Collections.Generic.List<T>"
  },
  "api/OsuSharp.Entities.UserRecentBeatmap.html": {
    "href": "api/OsuSharp.Entities.UserRecentBeatmap.html",
    "title": "Class UserRecentBeatmap | OsuSharp Documentation",
    "keywords": "Class UserRecentBeatmap Inheritance System.Object UserRecentBeatmap Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : OsuSharp.Entities Assembly : OsuSharp.dll Syntax public class UserRecentBeatmap Properties | Improve this Doc View Source Beatmap Declaration public Beatmap Beatmap { get; set; } Property Value Type Description Beatmap | Improve this Doc View Source UserRecent Declaration public UserRecent UserRecent { get; set; } Property Value Type Description UserRecent"
  },
  "api/OsuSharp.Entities.BeatmapScores.html": {
    "href": "api/OsuSharp.Entities.BeatmapScores.html",
    "title": "Class BeatmapScores | OsuSharp Documentation",
    "keywords": "Class BeatmapScores Inheritance System.Object BeatmapScores Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : OsuSharp.Entities Assembly : OsuSharp.dll Syntax public class BeatmapScores Properties | Improve this Doc View Source Beatmap Declaration public Beatmap Beatmap { get; set; } Property Value Type Description Beatmap | Improve this Doc View Source Score Declaration public List<Score> Score { get; set; } Property Value Type Description System.Collections.Generic.List < Score >"
  },
  "api/OsuSharp.UserEndpoint.User.html": {
    "href": "api/OsuSharp.UserEndpoint.User.html",
    "title": "Class User | OsuSharp Documentation",
    "keywords": "Class User Inheritance System.Object User Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : OsuSharp.UserEndpoint Assembly : OsuSharp.dll Syntax public class User Properties | Improve this Doc View Source Accuracy Main accuracy of the player Declaration [JsonProperty(\"accuracy\")] public double Accuracy { get; set; } Property Value Type Description System.Double | Improve this Doc View Source ARank Count of A ranks Declaration [JsonProperty(\"count_rank_a\")] public int ARank { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source Count100 Count of 100 Declaration [JsonProperty(\"count100\")] public int Count100 { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source Count300 Count of 300 Declaration [JsonProperty(\"count300\")] public int Count300 { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source Count50 Count of 50 Declaration [JsonProperty(\"count50\")] public int Count50 { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source Country Country of the account Declaration [JsonProperty(\"country\")] public string Country { get; set; } Property Value Type Description System.String | Improve this Doc View Source Events Events list of the player Declaration [JsonProperty(\"events\")] public List<Event> Events { get; set; } Property Value Type Description System.Collections.Generic.List < Event > | Improve this Doc View Source GlobalRank Global rank of the player Declaration [JsonProperty(\"pp_rank\")] public int GlobalRank { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source Level Level of the player Declaration [JsonProperty(\"level\")] public float Level { get; set; } Property Value Type Description System.Single | Improve this Doc View Source PlayCount Playcount of the player Declaration [JsonProperty(\"playcount\")] public int PlayCount { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source Pp PP amount of the player Declaration [JsonProperty(\"pp_raw\")] public float Pp { get; set; } Property Value Type Description System.Single | Improve this Doc View Source RankedScore Total ranked score submitted for this player Declaration [JsonProperty(\"ranked_score\")] public long RankedScore { get; set; } Property Value Type Description System.Int64 | Improve this Doc View Source RegionalRank Local rank of the player Declaration [JsonProperty(\"pp_country_rank\")] public int RegionalRank { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source SRank Count of S ranks Declaration [JsonProperty(\"count_rank_s\")] public int SRank { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source SsRank Count of SS ranks Declaration [JsonProperty(\"count_rank_ss\")] public int SsRank { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source TotalScore Total score submitted for this player Declaration [JsonProperty(\"total_score\")] public long TotalScore { get; set; } Property Value Type Description System.Int64 | Improve this Doc View Source Userid Id of the player Declaration [JsonProperty(\"user_id\")] public long Userid { get; set; } Property Value Type Description System.Int64 | Improve this Doc View Source Username Username of the player Declaration [JsonProperty(\"username\")] public string Username { get; set; } Property Value Type Description System.String"
  },
  "api/OsuSharp.UserEndpoint.Event.html": {
    "href": "api/OsuSharp.UserEndpoint.Event.html",
    "title": "Class Event | OsuSharp Documentation",
    "keywords": "Class Event Inheritance System.Object Event Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : OsuSharp.UserEndpoint Assembly : OsuSharp.dll Syntax public class Event Properties | Improve this Doc View Source BeatmapId Id of the beatmap Declaration [JsonProperty(\"beatmap_id\")] public ulong BeatmapId { get; set; } Property Value Type Description System.UInt64 | Improve this Doc View Source BeatmapsetId Id of the beatmapset Declaration [JsonProperty(\"beatmapset_id\")] public ulong BeatmapsetId { get; set; } Property Value Type Description System.UInt64 | Improve this Doc View Source Date Date of the event Declaration [JsonProperty(\"date\")] public DateTime? Date { get; set; } Property Value Type Description System.Nullable < System.DateTime > | Improve this Doc View Source DisplayHtml ??? Declaration [JsonProperty(\"display_html\")] public string DisplayHtml { get; set; } Property Value Type Description System.String | Improve this Doc View Source Epicfactor ??? Declaration [JsonProperty(\"epicfactor\")] public ushort Epicfactor { get; set; } Property Value Type Description System.UInt16"
  },
  "api/OsuSharp.ReplayEndpoint.html": {
    "href": "api/OsuSharp.ReplayEndpoint.html",
    "title": "Namespace OsuSharp.ReplayEndpoint | OsuSharp Documentation",
    "keywords": "Namespace OsuSharp.ReplayEndpoint Classes Replay"
  },
  "api/OsuSharp.OsuSharpException.html": {
    "href": "api/OsuSharp.OsuSharpException.html",
    "title": "Class OsuSharpException | OsuSharp Documentation",
    "keywords": "Class OsuSharpException Inheritance System.Object System.Exception OsuSharpException Implements System.Runtime.Serialization.ISerializable Inherited Members System.Exception.GetBaseException() System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext) System.Exception.GetType() System.Exception.ToString() System.Exception.Data System.Exception.HelpLink System.Exception.HResult System.Exception.InnerException System.Exception.Message System.Exception.Source System.Exception.StackTrace System.Exception.TargetSite System.Exception.SerializeObjectState System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : OsuSharp Assembly : OsuSharp.dll Syntax public class OsuSharpException : Exception, ISerializable Constructors | Improve this Doc View Source OsuSharpException(String) Declaration public OsuSharpException(string message) Parameters Type Name Description System.String message Implements System.Runtime.Serialization.ISerializable"
  },
  "api/OsuSharp.Misc.OsuSharpLoggerEventArgs.html": {
    "href": "api/OsuSharp.Misc.OsuSharpLoggerEventArgs.html",
    "title": "Class OsuSharpLoggerEventArgs | OsuSharp Documentation",
    "keywords": "Class OsuSharpLoggerEventArgs Inheritance System.Object OsuSharpLoggerEventArgs Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : OsuSharp.Misc Assembly : OsuSharp.dll Syntax public sealed class OsuSharpLoggerEventArgs Properties | Improve this Doc View Source From Where does the log invoke come from Declaration public string From { get; set; } Property Value Type Description System.String | Improve this Doc View Source Instance Instance of the IOsuApi Declaration public IOsuApi Instance { get; set; } Property Value Type Description IOsuApi | Improve this Doc View Source Level Level of the logs Declaration public LoggingLevel Level { get; set; } Property Value Type Description LoggingLevel | Improve this Doc View Source Logger Instance of the logger Declaration public IOsuSharpLogger Logger { get; set; } Property Value Type Description IOsuSharpLogger | Improve this Doc View Source Message Logged message Declaration public string Message { get; set; } Property Value Type Description System.String | Improve this Doc View Source Time Time where the LogMessage was invoked Declaration public DateTime Time { get; set; } Property Value Type Description System.DateTime"
  },
  "api/OsuSharp.Misc.Mods.html": {
    "href": "api/OsuSharp.Misc.Mods.html",
    "title": "Enum Mods | OsuSharp Documentation",
    "keywords": "Enum Mods Namespace : OsuSharp.Misc Assembly : OsuSharp.dll Syntax [Flags] public enum Mods Fields Name Description Autoplay DoubleTime Easy FadeIn Flashlight FreeModAllowed HalfTime HardRock Hidden Key1 Key10 Key2 Key3 Key4 Key5 Key6 Key7 Key8 Key9 KeyMod LastMod Nightcore NoFail None NoVideo Perfect Random Relax Relax2 SpunOut SuddenDeath Extension Methods ModsUtilities.ToModString(IOsuApi)"
  },
  "api/OsuSharp.Misc.Approved.html": {
    "href": "api/OsuSharp.Misc.Approved.html",
    "title": "Class Approved | OsuSharp Documentation",
    "keywords": "Class Approved Inheritance System.Object Approved Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : OsuSharp.Misc Assembly : OsuSharp.dll Syntax public class Approved Methods | Improve this Doc View Source ToBeatmapState(String) Returns a BeatmapState of the given beatmap state. Declaration public static BeatmapState ToBeatmapState(string currentState) Parameters Type Name Description System.String currentState State of the beatmap in number. Returns Type Description BeatmapState"
  },
  "api/OsuSharp.Interfaces.IOsuSharpLogger.html": {
    "href": "api/OsuSharp.Interfaces.IOsuSharpLogger.html",
    "title": "Interface IOsuSharpLogger | OsuSharp Documentation",
    "keywords": "Interface IOsuSharpLogger Namespace : OsuSharp.Interfaces Assembly : OsuSharp.dll Syntax public interface IOsuSharpLogger Methods | Improve this Doc View Source LogMessage(LoggingLevel, String, String, DateTime) Invoke the event to log a new message. Declaration void LogMessage(LoggingLevel level, string from, string message, DateTime time) Parameters Type Name Description LoggingLevel level Level of the message to log System.String from Where does the log come from System.String message Content to log System.DateTime time Time when it happened | Improve this Doc View Source Print(LoggingLevel, String, String, DateTime) Print a colored message to the console depending on the LoggingLevel Declaration void Print(LoggingLevel level, string from, string message, DateTime time) Parameters Type Name Description LoggingLevel level Level of the log System.String from From where does the message come from System.String message Content to be logged System.DateTime time Time when it happened Events | Improve this Doc View Source LogMessageReceived Event that fires when IOsuSharpLogger#LogMessage is invoked. Declaration event EventHandler<OsuSharpLoggerEventArgs> LogMessageReceived Event Type Type Description System.EventHandler < OsuSharpLoggerEventArgs >"
  }
}